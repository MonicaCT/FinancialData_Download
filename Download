#################################################################
######################ARGENTINA##################################
#################################################################
# TIPO DE CREDITO ---------------------------------------
# Instalando paquetes ---------------------------------------------
# Importando datos ---------------------------------------------
#rm(list = ls())
library(httr)
list <- c("http://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/seriese.xls")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Argentina", i, ".xls"),  mode="wb")
}
# reading the file
##rm(list = ls())
library(readxl)
tcar <- read_excel("Argentina1.xls" ,sheet="PRESTAMOS", range = "A3887:U4750")
# Renombrando variables --------------------------------------------
library(tidyverse) #Cambiando de nombres las variables
colnames(tcar) # get column names
# Rename column names
names(tcar)[names(tcar) == "Prom.Dic.-17"] <- "fecha"
names(tcar)[names(tcar) == "130475.258"] <- "adelantos"
names(tcar)[names(tcar) == "278051.87099999998"] <- "documentos"
names(tcar)[names(tcar) == "122761.935"] <- "Hipotecario"
names(tcar)[names(tcar) == "87097.676999999996"] <- "prendarios"
names(tcar)[names(tcar) == "347637.87099999998"] <- "Personal"
names(tcar)[names(tcar) == "277787.25799999997"] <- "TarjetaCredito"
names(tcar)[names(tcar) == "49712.580999999998"] <- "otros"
names(tcar)[names(tcar) == "1293524.452"] <- "total"
tcar
#Con las variables que interesan
keeps <- c("fecha",
           "Hipotecario",
           "Personal", 
           "TarjetaCredito",
           "total")
tcargentina = tcar[keeps]

# Variable fecha --------------------------------------------
tcargentina <- tcargentina[!(tcargentina$fecha=="Prom.Ene.-18" 
                             | tcargentina$fecha=="Prom.Feb.-18"
                             | tcargentina$fecha=="Prom.Mar.-18"
                             | tcargentina$fecha=="Prom.Abr.-18"
                             | tcargentina$fecha=="Prom.May.-18"
                             | tcargentina$fecha=="Prom.Jun.-18"
                             | tcargentina$fecha=="Prom.Jul.-18"
                             | tcargentina$fecha=="Prom.Ago.-18"
                             | tcargentina$fecha=="Prom.Sep.-18"
                             | tcargentina$fecha=="Prom.Oct.-18"
                             | tcargentina$fecha=="Prom.Nov.-18"
                             | tcargentina$fecha=="Prom.Dic.-18"
                             | tcargentina$fecha=="Prom.Ene.-19"
                             | tcargentina$fecha=="Prom.Feb.-19"
                             | tcargentina$fecha=="Prom.Mar.-19"
                             | tcargentina$fecha=="Prom.Abr.-19"
                             | tcargentina$fecha=="Prom.May.-19"
                             | tcargentina$fecha=="Prom.Jun.-19"
                             | tcargentina$fecha=="Prom.Jul.-19"
                             | tcargentina$fecha=="Prom.Ago.-19"
                             | tcargentina$fecha=="Prom.Sep.-19"
                             | tcargentina$fecha=="Prom.Oct.-19"
                             | tcargentina$fecha=="Prom.Nov.-19"
                             | tcargentina$fecha=="Prom.Dic.-19"
                             | tcargentina$fecha=="Prom.Ene.-20"
                             | tcargentina$fecha=="Prom.Feb.-20"
                             | tcargentina$fecha=="Prom.Mar.-20"
                             | tcargentina$fecha=="Prom.Abr.-20"
                             | tcargentina$fecha=="Prom.May.-20"
                             | tcargentina$fecha=="Prom.Jun.-20"
                             | tcargentina$fecha=="Prom.Jul.-20"
                             | tcargentina$fecha=="Prom.Ago.-20"
                             | tcargentina$fecha=="Prom.Sep.-20"
                             | tcargentina$fecha=="Prom.Oct.-20"
                             | tcargentina$fecha=="Prom.Nov.-20"
                             | tcargentina$fecha=="Prom.Dic.-20"
                             | tcargentina$fecha=="Prom.Ene.-21"
                             | tcargentina$fecha=="Prom.Feb.-21"
                             | tcargentina$fecha=="Prom.Mar.-21"
                             | tcargentina$fecha=="Prom.Abr.-21"
                             | tcargentina$fecha=="Prom.May.-21"
                             | tcargentina$fecha=="Prom.Jun.-21"),]
tcargentina

tcargentina %>% filter_all(all_vars(!is.na(.))) #observaciones vacias
tcargentina <-tcargentina %>% filter(total >= 1000000 ) #solo saldo credito
#Format date
#install.packages("openxlsx")
library(openxlsx)
tcargentina$fecha=openxlsx::convertToDate(tcargentina$fecha)
#Nombre de las filas
#row.names(tcargentina) <- tcargentina$fecha
# Datos mensuales ---------------------------------------
library(dplyr)
#Encontrar el ultimo dia segun mes
#Creando variables year, month and day
tcargentina$month <- format(tcargentina$fecha, "%m")
tcargentina$year <- format(tcargentina$fecha, "%Y")
tcargentina$day <- format(tcargentina$fecha, "%D")
tcargentina$my <- format(as.Date(tcargentina$fecha,format="%Y-%m-%d"),"%Y-%m")
#Encontrando el valor maximo
tcargentina$maxvalue <- ave(tcargentina$fecha, tcargentina$my, FUN = max)
#Mantener los valores finales
library(dplyr)
tcargentina <- filter(tcargentina, maxvalue==fecha)
#Nombre de las filas
#row.names(tcargentinam) <- tcargentinam$fecha
keeps4 <- c("fecha",
            "TarjetaCredito",           
            "Personal",
            "Hipotecario")
tcargentina = tcargentina[keeps4]
#Variable pais
tcargentina$Pais <- "Argentina"
# Variables para el panel
tcargentina$Microcredito <- NA
tcargentina$Pyme <- NA
tcargentina$Empresarial <- NA
tcargentina$Leasing <- NA
tcargentina$Comercial <- NA
tcargentina$Gobierno <- NA
tcargentina$Consumo <- NA
# Exportando --------------------------------------------
write.csv(tcargentina,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcargentina.csv", row.names = FALSE)
write.csv(tcargentina,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Argentina\\tcargentina.csv", row.names = FALSE)
# Graphs daily dates------------------------------------------------
#install.packages("ggplot2")
#install.packages("hrbrthemes")
library(ggplot2)
library(dplyr)
library(hrbrthemes)
#colnames(tcargentina)
Hipotecario <- tcargentina %>%
  tail(10000) %>%
  ggplot(aes(x=fecha, y=Hipotecario)) +
  geom_line() +
  geom_point() +
  ggtitle("ARGENTINA crédito hipotecario") +
  xlab("Date") + ylab("MM pesos argentinos")
Hipotecario

#
TarjetaCredito <- tcargentina %>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=TarjetaCredito)) +
  geom_line() +
  geom_point() +
  ggtitle("ARGENTINA tarjeta de crédito") +
  xlab("Date") + ylab("MM pesos argentinos")
TarjetaCredito

#
Personal <- tcargentina %>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Personal)) +
  geom_line() +
  geom_point() +
  ggtitle("ARGENTINA crédito personal") +
  xlab("Date") + ylab("MM pesos argentinos")
Personal

save(tcargentina,file="tcargentina.Rda")

#################################################################
########################BRASIL###################################
#################################################################
# HISTORICO 01-2018 hasta 12-2018 ------------------------------
######noviembre2018 a diciembre2018 --------------------------
# Importando datos -------------------------------------------
#rm(list = ls())
library(httr)
list <- c("https://www.bcb.gov.br/ftp/notaecon/ni201901pmp.zip")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Brasildic", ".zip"),  mode="wb")}
# Unzip documents ---------------------------------------
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Brasil/Brasildic.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Brasil"
unzip(zipF,exdir=outDir)
# Cambiando nombre---------------------------------------
file.rename(("Notimp2.xlsx"), paste0("Brasildic.xlsx"))
# TIPO CREDITO-PERSONAS JURIDICAS -----------------------
###rm(list = ls())
# Tabel 5 ---------------------------------------
library(readxl)
tcbrat5 <- read_excel("Brasildic.xlsx",sheet="Tabela 5", range = "A12:L1000")
# analyzing
colnames(tcbrat5)
# Rename column names
names(tcbrat5)[names(tcbrat5) == "...1"] <- "year"
names(tcbrat5)[names(tcbrat5) == "...2"] <- "m"
names(tcbrat5)[names(tcbrat5) == "...3"] <- "n"
names(tcbrat5)[names(tcbrat5) == "...4"] <- "PJ.desc.cuentas.cobrar"
names(tcbrat5)[names(tcbrat5) == "...5"] <- "PJ.desc.cheques"
names(tcbrat5)[names(tcbrat5) == "...6"] <- "PJ.ant.fac.tarjetas"
names(tcbrat5)[names(tcbrat5) == "...7"] <- "PJ.cap.trabajo365"
names(tcbrat5)[names(tcbrat5) == "...8"] <- "PJ.cap.trabajo+365"
names(tcbrat5)[names(tcbrat5) == "...9"] <- "PJ.techo.girat"
names(tcbrat5)[names(tcbrat5) == "...10"] <- "PJ.capital.trabajoT"
names(tcbrat5)[names(tcbrat5) == "...11"] <- "PJ.cta.garantizado"
names(tcbrat5)[names(tcbrat5) == "...12"] <- "PJ.cheque.especial"
tcbrat5
#Eliminando empty values
tcbrat5 <- tcbrat5[!is.na(tcbrat5$techo.girat), ]
tcbrat5 <- tcbrat5[!is.na(tcbrat5$m), ]
#Con las variables que interesan
keeps <- c("m","PJ.desc.cuentas.cobrar", 
           "PJ.desc.cheques", "PJ.ant.fac.tarjetas", "PJ.cap.trabajo365", 
           "PJ.cap.trabajo+365", "PJ.techo.girat", "PJ.capital.trabajoT",
           "PJ.cta.garantizado", "PJ.cheque.especial")
tcbrasilt5 = tcbrat5[keeps]
#Variable mes numeral
tcbrasilt5$id[tcbrasilt5$m=="Jan"] <- c(1)
tcbrasilt5$id[tcbrasilt5$m=="Fev"] <- c(2)
tcbrasilt5$id[tcbrasilt5$m=="Mar"] <- c(3)
tcbrasilt5$id[tcbrasilt5$m=="Abr"] <- c(4)
tcbrasilt5$id[tcbrasilt5$m=="Mai"] <- c(5)
tcbrasilt5$id[tcbrasilt5$m=="Jun"] <- c(6)
tcbrasilt5$id[tcbrasilt5$m=="Jul"] <- c(7)
tcbrasilt5$id[tcbrasilt5$m=="Ago"] <- c(8)
tcbrasilt5$id[tcbrasilt5$m=="Set"] <- c(9)
tcbrasilt5$id[tcbrasilt5$m=="Out"] <- c(10)
tcbrasilt5$id[tcbrasilt5$m=="Nov"] <- c(11)
tcbrasilt5$id[tcbrasilt5$m=="Dez"] <- c(12)
tcbrasilt5$month[tcbrasilt5$m=="Jan"] <- c("Jan")
tcbrasilt5$month[tcbrasilt5$m=="Fev"] <- c("Feb")
tcbrasilt5$month[tcbrasilt5$m=="Mar"] <- c("Mar")
tcbrasilt5$month[tcbrasilt5$m=="Abr"] <- c("Apr")
tcbrasilt5$month[tcbrasilt5$m=="Mai"] <- c("May")
tcbrasilt5$month[tcbrasilt5$m=="Jun"] <- c("Jun")
tcbrasilt5$month[tcbrasilt5$m=="Jul"] <- c("Jul")
tcbrasilt5$month[tcbrasilt5$m=="Ago"] <- c("Aug")
tcbrasilt5$month[tcbrasilt5$m=="Set"] <- c("Sep")
tcbrasilt5$month[tcbrasilt5$m=="Out"] <- c("Oct")
tcbrasilt5$month[tcbrasilt5$m=="Nov"] <- c("Nov")
tcbrasilt5$month[tcbrasilt5$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt5$id.t <- with(tcbrasilt5, ave(rep(1, nrow(tcbrasilt5)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt5$year <- NA
tcbrasilt5$year[tcbrasilt5$id.t==1] <- c(2017)
tcbrasilt5$year[tcbrasilt5$id.t==2] <- c(2018)
#La variable "date"
tcbrasilt5$date <- lubridate::ymd(paste0(tcbrasilt5$year,tcbrasilt5$month,"01"))
#Nos quedamos con las variables que nos importan
keeps2 <- c("date","year","month","id.t","id", "PJ.desc.cuentas.cobrar", 
            "PJ.desc.cheques", "PJ.ant.fac.tarjetas", "PJ.cap.trabajo365", 
            "PJ.cap.trabajo+365", "PJ.techo.girat", "PJ.capital.trabajoT",
            "PJ.cta.garantizado", "PJ.cheque.especial")
tcbrasilt5 = tcbrasilt5[keeps2]
# Tabel 5A ---------------------------------------
###rm(list = ls())
library(readxl)
tcbrat5a <- read_excel("Brasildic.xlsx",sheet="Tabela 5A", range = "A12:O1000")
# analyzing
colnames(tcbrat5a)
# Rename column names
names(tcbrat5a)[names(tcbrat5a) == "...1"] <- "year"
names(tcbrat5a)[names(tcbrat5a) == "...2"] <- "m"
names(tcbrat5a)[names(tcbrat5a) == "...3"] <- "n"
names(tcbrat5a)[names(tcbrat5a) == "...4"] <- "PJ.adq.vehiculos"
names(tcbrat5a)[names(tcbrat5a) == "...5"] <- "PJ.adq.obienes"
names(tcbrat5a)[names(tcbrat5a) == "...6"] <- "PJ.arrend.vehiculos"
names(tcbrat5a)[names(tcbrat5a) == "...7"] <- "PJ.arrend.obienes"
names(tcbrat5a)[names(tcbrat5a) == "...8"] <- "PJ.arrend.total"
names(tcbrat5a)[names(tcbrat5a) == "...9"] <- "PJ.vendedor"
names(tcbrat5a)[names(tcbrat5a) == "...10"] <- "PJ.comprador"
names(tcbrat5a)[names(tcbrat5a) == "...11"] <- "n2"
names(tcbrat5a)[names(tcbrat5a) == "...12"] <- "n3"
tcbrat5a
#Eliminando empty values
#tcbrat5a <- tcbrat5a[!is.na(tcbrat5a$vendedor), ]
tcbrat5a <- tcbrat5a[!is.na(tcbrat5a$m), ]
#Con las variables que interesan
colnames(tcbrat5a)
keeps <- c("m","PJ.adq.vehiculos","PJ.adq.obienes",
           "PJ.arrend.vehiculos","PJ.arrend.obienes","PJ.arrend.total",
           "PJ.vendedor","PJ.comprador")
tcbrasilt5a = tcbrat5a[keeps]
#Variable mes numeral
tcbrasilt5a$id[tcbrasilt5a$m=="Jan"] <- c(1)
tcbrasilt5a$id[tcbrasilt5a$m=="Fev"] <- c(2)
tcbrasilt5a$id[tcbrasilt5a$m=="Mar"] <- c(3)
tcbrasilt5a$id[tcbrasilt5a$m=="Abr"] <- c(4)
tcbrasilt5a$id[tcbrasilt5a$m=="Mai"] <- c(5)
tcbrasilt5a$id[tcbrasilt5a$m=="Jun"] <- c(6)
tcbrasilt5a$id[tcbrasilt5a$m=="Jul"] <- c(7)
tcbrasilt5a$id[tcbrasilt5a$m=="Ago"] <- c(8)
tcbrasilt5a$id[tcbrasilt5a$m=="Set"] <- c(9)
tcbrasilt5a$id[tcbrasilt5a$m=="Out"] <- c(10)
tcbrasilt5a$id[tcbrasilt5a$m=="Nov"] <- c(11)
tcbrasilt5a$id[tcbrasilt5a$m=="Dez"] <- c(12)
tcbrasilt5a$month[tcbrasilt5a$m=="Jan"] <- c("Jan")
tcbrasilt5a$month[tcbrasilt5a$m=="Fev"] <- c("Feb")
tcbrasilt5a$month[tcbrasilt5a$m=="Mar"] <- c("Mar")
tcbrasilt5a$month[tcbrasilt5a$m=="Abr"] <- c("Apr")
tcbrasilt5a$month[tcbrasilt5a$m=="Mai"] <- c("May")
tcbrasilt5a$month[tcbrasilt5a$m=="Jun"] <- c("Jun")
tcbrasilt5a$month[tcbrasilt5a$m=="Jul"] <- c("Jul")
tcbrasilt5a$month[tcbrasilt5a$m=="Ago"] <- c("Aug")
tcbrasilt5a$month[tcbrasilt5a$m=="Set"] <- c("Sep")
tcbrasilt5a$month[tcbrasilt5a$m=="Out"] <- c("Oct")
tcbrasilt5a$month[tcbrasilt5a$m=="Nov"] <- c("Nov")
tcbrasilt5a$month[tcbrasilt5a$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt5a$id.t <- with(tcbrasilt5a, ave(rep(1, nrow(tcbrasilt5a)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt5a$year <- NA
tcbrasilt5$year[tcbrasilt5$id.t==1] <- c(2017)
tcbrasilt5$year[tcbrasilt5$id.t==2] <- c(2018)
#tcbrasilt5$w <- as.factor(tcbrasilt5a$id)
#La variable "date"
tcbrasilt5a$date <- format(lubridate::ymd(paste0(tcbrasilt5a$year,tcbrasilt5a$month,"01")), "%m-%Y")
colnames(tcbrasilt5a)
#Nos quedamos con las variables que nos importan
keeps2 <- c("PJ.adq.vehiculos",
            "PJ.adq.obienes",      "PJ.arrend.vehiculos",
            "PJ.arrend.obienes",   "PJ.arrend.total",    "PJ.vendedor",
            "PJ.comprador")
tcbrasilt5a = tcbrasilt5a[keeps2]
##
write.csv(tcbrasilt5a,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Brasil\\tcbrasilt5a.csv", row.names = FALSE)
##
# Tabel 5B ---------------------------------------
###rm(list = ls())
library(readxl)
tcbrat5b <- read_excel("Brasildic.xlsx",sheet="Tabela 5B", range = "A12:O1000")
# analyzing
colnames(tcbrat5b)
# Rename column names
names(tcbrat5b)[names(tcbrat5b) == "...1"] <- "year"
names(tcbrat5b)[names(tcbrat5b) == "...2"] <- "m"
names(tcbrat5b)[names(tcbrat5b) == "...3"] <- "n"
names(tcbrat5b)[names(tcbrat5b) == "...4"] <- "PJ.tarjcredito.portpar"
names(tcbrat5b)[names(tcbrat5b) == "...5"] <- "PJ.tarjcredito.alavista"
names(tcbrat5b)[names(tcbrat5b) == "...6"] <- "PJ.tarjcredito.total"
names(tcbrat5b)[names(tcbrat5b) == "...7"] <- "PJ.acc"
names(tcbrat5b)[names(tcbrat5b) == "...8"] <- "PJ.finan.import"
names(tcbrat5b)[names(tcbrat5b) == "...9"] <- "PJ.finan.export"
names(tcbrat5b)[names(tcbrat5b) == "...10"] <- "PJ.trans.exterior"
names(tcbrat5b)[names(tcbrat5b) == "...11"] <- "PJ.otrost5"
names(tcbrat5b)[names(tcbrat5b) == "...12"] <- "PJ.totalt5"
tcbrat5b
#Eliminando empty values
#tcbrat5b <- tcbrat5b[!is.na(tcbrat5b$vendedor), ]
tcbrat5b <- tcbrat5b[!is.na(tcbrat5b$m), ]
#Con las variables que interesan
colnames(tcbrat5b)
keeps <- c("m","PJ.tarjcredito.portpar",
           "PJ.tarjcredito.alavista", "PJ.tarjcredito.total",
           "PJ.acc",                  "PJ.finan.import",
           "PJ.finan.export",         "PJ.trans.exterior",
           "PJ.otrost5" ,               "PJ.totalt5")
tcbrasilt5b = tcbrat5b[keeps]
#Variable mes numeral
tcbrasilt5b$id[tcbrasilt5b$m=="Jan"] <- c(1)
tcbrasilt5b$id[tcbrasilt5b$m=="Fev"] <- c(2)
tcbrasilt5b$id[tcbrasilt5b$m=="Mar"] <- c(3)
tcbrasilt5b$id[tcbrasilt5b$m=="Abr"] <- c(4)
tcbrasilt5b$id[tcbrasilt5b$m=="Mai"] <- c(5)
tcbrasilt5b$id[tcbrasilt5b$m=="Jun"] <- c(6)
tcbrasilt5b$id[tcbrasilt5b$m=="Jul"] <- c(7)
tcbrasilt5b$id[tcbrasilt5b$m=="Ago"] <- c(8)
tcbrasilt5b$id[tcbrasilt5b$m=="Set"] <- c(9)
tcbrasilt5b$id[tcbrasilt5b$m=="Out"] <- c(10)
tcbrasilt5b$id[tcbrasilt5b$m=="Nov"] <- c(11)
tcbrasilt5b$id[tcbrasilt5b$m=="Dez"] <- c(12)
tcbrasilt5b$month[tcbrasilt5b$m=="Jan"] <- c("Jan")
tcbrasilt5b$month[tcbrasilt5b$m=="Fev"] <- c("Feb")
tcbrasilt5b$month[tcbrasilt5b$m=="Mar"] <- c("Mar")
tcbrasilt5b$month[tcbrasilt5b$m=="Abr"] <- c("Apr")
tcbrasilt5b$month[tcbrasilt5b$m=="Mai"] <- c("May")
tcbrasilt5b$month[tcbrasilt5b$m=="Jun"] <- c("Jun")
tcbrasilt5b$month[tcbrasilt5b$m=="Jul"] <- c("Jul")
tcbrasilt5b$month[tcbrasilt5b$m=="Ago"] <- c("Aug")
tcbrasilt5b$month[tcbrasilt5b$m=="Set"] <- c("Sep")
tcbrasilt5b$month[tcbrasilt5b$m=="Out"] <- c("Oct")
tcbrasilt5b$month[tcbrasilt5b$m=="Nov"] <- c("Nov")
tcbrasilt5b$month[tcbrasilt5b$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt5b$id.t <- with(tcbrasilt5b, ave(rep(1, nrow(tcbrasilt5b)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt5b$year <- NA
tcbrasilt5$year[tcbrasilt5$id.t==1] <- c(2017)
tcbrasilt5$year[tcbrasilt5$id.t==2] <- c(2018)
#tcbrasilt5$w <- as.factor(tcbrasilt5b$id)
#La variable "date"
tcbrasilt5b$date <- format(lubridate::ymd(paste0(tcbrasilt5b$year,tcbrasilt5b$month,"01")), "%m-%Y")
#Nos quedamos con las variables que nos importan
colnames(tcbrasilt5b)
keeps2 <- c("PJ.tarjcredito.portpar",
            "PJ.tarjcredito.alavista", "PJ.tarjcredito.total",  
            "PJ.acc",                  "PJ.finan.import",
            "PJ.finan.export",         "PJ.trans.exterior" ,     
            "PJ.otrost5",                "PJ.totalt5")
tcbrasilt5b = tcbrasilt5b[keeps2]
# Tabel 6 ---------------------------------------
###rm(list = ls())
library(readxl)
tcbrat6 <- read_excel("Brasildic.xlsx",sheet="Tabela 6", range = "A14:O1000")
# analyzing
colnames(tcbrat6)
# Rename column names
names(tcbrat6)[names(tcbrat6) == "...1"] <- "year"
names(tcbrat6)[names(tcbrat6) == "...2"] <- "m"
names(tcbrat6)[names(tcbrat6) == "...3"] <- "n"
names(tcbrat6)[names(tcbrat6) == "...4"] <- "cheque.esp"
names(tcbrat6)[names(tcbrat6) == "...5"] <- "cred.personal.nconsig"
names(tcbrat6)[names(tcbrat6) == "...6"] <- "cred.personal.consig.servpub"
names(tcbrat6)[names(tcbrat6) == "...7"] <- "cred.personal.consig.sp"
names(tcbrat6)[names(tcbrat6) == "...8"] <- "cred.personal.consig.binss"
names(tcbrat6)[names(tcbrat6) == "...9"] <- "cred.personal.consig.total"
names(tcbrat6)[names(tcbrat6) == "...10"] <- "cred.personal.total"
names(tcbrat6)[names(tcbrat6) == "...11"] <- "n"
tcbrat6
#Eliminando empty values
#tcbrat6 <- tcbrat6[!is.na(tcbrat6$vendedor), ]
tcbrat6 <- tcbrat6[!is.na(tcbrat6$m), ]
#Con las variables que interesan
colnames(tcbrat6)
keeps <- c("m","cheque.esp",
           "cred.personal.nconsig",
           "cred.personal.consig.servpub",
           "cred.personal.consig.sp",
           "cred.personal.consig.binss",
           "cred.personal.consig.total", 
           "cred.personal.total")
tcbrasilt6 = tcbrat6[keeps]
#Variable mes numeral
tcbrasilt6$id[tcbrasilt6$m=="Jan"] <- c(1)
tcbrasilt6$id[tcbrasilt6$m=="Fev"] <- c(2)
tcbrasilt6$id[tcbrasilt6$m=="Mar"] <- c(3)
tcbrasilt6$id[tcbrasilt6$m=="Abr"] <- c(4)
tcbrasilt6$id[tcbrasilt6$m=="Mai"] <- c(5)
tcbrasilt6$id[tcbrasilt6$m=="Jun"] <- c(6)
tcbrasilt6$id[tcbrasilt6$m=="Jul"] <- c(7)
tcbrasilt6$id[tcbrasilt6$m=="Ago"] <- c(8)
tcbrasilt6$id[tcbrasilt6$m=="Set"] <- c(9)
tcbrasilt6$id[tcbrasilt6$m=="Out"] <- c(10)
tcbrasilt6$id[tcbrasilt6$m=="Nov"] <- c(11)
tcbrasilt6$id[tcbrasilt6$m=="Dez"] <- c(12)
tcbrasilt6$month[tcbrasilt6$m=="Jan"] <- c("Jan")
tcbrasilt6$month[tcbrasilt6$m=="Fev"] <- c("Feb")
tcbrasilt6$month[tcbrasilt6$m=="Mar"] <- c("Mar")
tcbrasilt6$month[tcbrasilt6$m=="Abr"] <- c("Apr")
tcbrasilt6$month[tcbrasilt6$m=="Mai"] <- c("May")
tcbrasilt6$month[tcbrasilt6$m=="Jun"] <- c("Jun")
tcbrasilt6$month[tcbrasilt6$m=="Jul"] <- c("Jul")
tcbrasilt6$month[tcbrasilt6$m=="Ago"] <- c("Aug")
tcbrasilt6$month[tcbrasilt6$m=="Set"] <- c("Sep")
tcbrasilt6$month[tcbrasilt6$m=="Out"] <- c("Oct")
tcbrasilt6$month[tcbrasilt6$m=="Nov"] <- c("Nov")
tcbrasilt6$month[tcbrasilt6$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt6$id.t <- with(tcbrasilt6, ave(rep(1, nrow(tcbrasilt6)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt6$year <- NA
tcbrasilt5$year[tcbrasilt5$id.t==1] <- c(2017)
tcbrasilt5$year[tcbrasilt5$id.t==2] <- c(2018)
#tcbrasilt5$w <- as.factor(tcbrasilt6$id)

#La variable "date"
tcbrasilt6$date <- format(lubridate::ymd(paste0(tcbrasilt6$year,tcbrasilt6$month,"01")), "%m-%Y")
#Nos quedamos con las variables que nos importan
colnames(tcbrasilt6)
keeps2 <- c("cheque.esp",
            "cred.personal.nconsig",
            "cred.personal.consig.servpub",
            "cred.personal.consig.sp",
            "cred.personal.consig.binss",  
            "cred.personal.consig.total",
            "cred.personal.total")
tcbrasilt6 = tcbrasilt6[keeps2]
# Tabel 6A ---------------------------------------
###rm(list = ls())
library(readxl)
tcbrat6a <- read_excel("Brasildic.xlsx",sheet="Tabela 6A", range = "A14:O1000")
# analyzing
colnames(tcbrat6a)
# Rename column names
names(tcbrat6a)[names(tcbrat6a) == "...1"] <- "year"
names(tcbrat6a)[names(tcbrat6a) == "...2"] <- "m"
names(tcbrat6a)[names(tcbrat6a) == "...3"] <- "n"
names(tcbrat6a)[names(tcbrat6a) == "...4"] <- "adq.vehiculos"
names(tcbrat6a)[names(tcbrat6a) == "...5"] <- "adq.obienes"
names(tcbrat6a)[names(tcbrat6a) == "...6"] <- "tcredito.gira.regular"
names(tcbrat6a)[names(tcbrat6a) == "...7"] <- "tcredito.gira.irregular"
names(tcbrat6a)[names(tcbrat6a) == "...8"] <- "tcredito.gira.total"
names(tcbrat6a)[names(tcbrat6a) == "...9"] <- "tcredito.entrega"
names(tcbrat6a)[names(tcbrat6a) == "...10"] <- "tcredito.alavista"
names(tcbrat6a)[names(tcbrat6a) == "...11"] <- "tcredito.total"
names(tcbrat6a)[names(tcbrat6a) == "...12"] <- "n"
tcbrat6a
#Eliminando empty values
#tcbrat6a <- tcbrat6a[!is.na(tcbrat6a$vendedor), ]
tcbrat6a <- tcbrat6a[!is.na(tcbrat6a$m), ]
#Con las variables que interesan
colnames(tcbrat6a)
keeps <- c("m","adq.vehiculos",
           "adq.obienes",
           "tcredito.gira.regular",
           "tcredito.gira.irregular",
           "tcredito.gira.total",
           "tcredito.entrega",       
           "tcredito.alavista",
           "tcredito.total")
tcbrasilt6a = tcbrat6a[keeps]
#Variable mes numeral
tcbrasilt6a$id[tcbrasilt6a$m=="Jan"] <- c(1)
tcbrasilt6a$id[tcbrasilt6a$m=="Fev"] <- c(2)
tcbrasilt6a$id[tcbrasilt6a$m=="Mar"] <- c(3)
tcbrasilt6a$id[tcbrasilt6a$m=="Abr"] <- c(4)
tcbrasilt6a$id[tcbrasilt6a$m=="Mai"] <- c(5)
tcbrasilt6a$id[tcbrasilt6a$m=="Jun"] <- c(6)
tcbrasilt6a$id[tcbrasilt6a$m=="Jul"] <- c(7)
tcbrasilt6a$id[tcbrasilt6a$m=="Ago"] <- c(8)
tcbrasilt6a$id[tcbrasilt6a$m=="Set"] <- c(9)
tcbrasilt6a$id[tcbrasilt6a$m=="Out"] <- c(10)
tcbrasilt6a$id[tcbrasilt6a$m=="Nov"] <- c(11)
tcbrasilt6a$id[tcbrasilt6a$m=="Dez"] <- c(12)
tcbrasilt6a$month[tcbrasilt6a$m=="Jan"] <- c("Jan")
tcbrasilt6a$month[tcbrasilt6a$m=="Fev"] <- c("Feb")
tcbrasilt6a$month[tcbrasilt6a$m=="Mar"] <- c("Mar")
tcbrasilt6a$month[tcbrasilt6a$m=="Abr"] <- c("Apr")
tcbrasilt6a$month[tcbrasilt6a$m=="Mai"] <- c("May")
tcbrasilt6a$month[tcbrasilt6a$m=="Jun"] <- c("Jun")
tcbrasilt6a$month[tcbrasilt6a$m=="Jul"] <- c("Jul")
tcbrasilt6a$month[tcbrasilt6a$m=="Ago"] <- c("Aug")
tcbrasilt6a$month[tcbrasilt6a$m=="Set"] <- c("Sep")
tcbrasilt6a$month[tcbrasilt6a$m=="Out"] <- c("Oct")
tcbrasilt6a$month[tcbrasilt6a$m=="Nov"] <- c("Nov")
tcbrasilt6a$month[tcbrasilt6a$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt6a$id.t <- with(tcbrasilt6a, ave(rep(1, nrow(tcbrasilt6a)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt6a$year <- NA
tcbrasilt5$year[tcbrasilt5$id.t==1] <- c(2017)
tcbrasilt5$year[tcbrasilt5$id.t==2] <- c(2018)
#tcbrasilt5$w <- as.factor(tcbrasilt6a$id)
#La variable "date"
tcbrasilt6a$date <- format(lubridate::ymd(paste0(tcbrasilt6a$year,tcbrasilt6a$month,"01")), "%m-%Y")
#Nos quedamos con las variables que nos importan
colnames(tcbrasilt6a)
keeps2 <- c("adq.vehiculos",
            "adq.obienes",
            "tcredito.gira.regular",
            "tcredito.gira.irregular",
            "tcredito.gira.total",
            "tcredito.entrega",
            "tcredito.alavista",      "tcredito.total")
tcbrasilt6a = tcbrasilt6a[keeps2]
# Tabel 6B ---------------------------------------
###rm(list = ls())
library(readxl)
tcbrat6b <- read_excel("Brasildic.xlsx",sheet="Tabela 6B", range = "A12:O1000")
# analyzing
colnames(tcbrat6b)
# Rename column names
names(tcbrat6b)[names(tcbrat6b) == "...1"] <- "year"
names(tcbrat6b)[names(tcbrat6b) == "...2"] <- "m"
names(tcbrat6b)[names(tcbrat6b) == "...3"] <- "n"
names(tcbrat6b)[names(tcbrat6b) == "...4"] <- "arrend.vehiculos"
names(tcbrat6b)[names(tcbrat6b) == "...5"] <- "arrend.obienes"
names(tcbrat6b)[names(tcbrat6b) == "...6"] <- "arrend.total"
names(tcbrat6b)[names(tcbrat6b) == "...7"] <- "desc.cheques"
names(tcbrat6b)[names(tcbrat6b) == "...8"] <- "comp.deudas"
names(tcbrat6b)[names(tcbrat6b) == "...9"] <- "otrost6"
names(tcbrat6b)[names(tcbrat6b) == "...10"] <- "total.ngiratorio"
names(tcbrat6b)[names(tcbrat6b) == "...11"] <- "totalt6"
names(tcbrat6b)[names(tcbrat6b) == "...12"] <- "n"
tcbrat6b
#Eliminando empty values
#tcbrat6b <- tcbrat6b[!is.na(tcbrat6b$vendedor), ]
tcbrat6b <- tcbrat6b[!is.na(tcbrat6b$m), ]
#Con las variables que interesan
colnames(tcbrat6b)
keeps <- c("m","arrend.vehiculos",
           "arrend.obienes",  
           "arrend.total",
           "desc.cheques",
           "comp.deudas",
           "otrost6",
           "total.ngiratorio",
           "totalt6")
tcbrasilt6b = tcbrat6b[keeps]
#Variable mes numeral
tcbrasilt6b$id[tcbrasilt6b$m=="Jan"] <- c(1)
tcbrasilt6b$id[tcbrasilt6b$m=="Fev"] <- c(2)
tcbrasilt6b$id[tcbrasilt6b$m=="Mar"] <- c(3)
tcbrasilt6b$id[tcbrasilt6b$m=="Abr"] <- c(4)
tcbrasilt6b$id[tcbrasilt6b$m=="Mai"] <- c(5)
tcbrasilt6b$id[tcbrasilt6b$m=="Jun"] <- c(6)
tcbrasilt6b$id[tcbrasilt6b$m=="Jul"] <- c(7)
tcbrasilt6b$id[tcbrasilt6b$m=="Ago"] <- c(8)
tcbrasilt6b$id[tcbrasilt6b$m=="Set"] <- c(9)
tcbrasilt6b$id[tcbrasilt6b$m=="Out"] <- c(10)
tcbrasilt6b$id[tcbrasilt6b$m=="Nov"] <- c(11)
tcbrasilt6b$id[tcbrasilt6b$m=="Dez"] <- c(12)
tcbrasilt6b$month[tcbrasilt6b$m=="Jan"] <- c("Jan")
tcbrasilt6b$month[tcbrasilt6b$m=="Fev"] <- c("Feb")
tcbrasilt6b$month[tcbrasilt6b$m=="Mar"] <- c("Mar")
tcbrasilt6b$month[tcbrasilt6b$m=="Abr"] <- c("Apr")
tcbrasilt6b$month[tcbrasilt6b$m=="Mai"] <- c("May")
tcbrasilt6b$month[tcbrasilt6b$m=="Jun"] <- c("Jun")
tcbrasilt6b$month[tcbrasilt6b$m=="Jul"] <- c("Jul")
tcbrasilt6b$month[tcbrasilt6b$m=="Ago"] <- c("Aug")
tcbrasilt6b$month[tcbrasilt6b$m=="Set"] <- c("Sep")
tcbrasilt6b$month[tcbrasilt6b$m=="Out"] <- c("Oct")
tcbrasilt6b$month[tcbrasilt6b$m=="Nov"] <- c("Nov")
tcbrasilt6b$month[tcbrasilt6b$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt6b$id.t <- with(tcbrasilt6b, ave(rep(1, nrow(tcbrasilt6b)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt6b$year <- NA
tcbrasilt5$year[tcbrasilt5$id.t==1] <- c(2017)
tcbrasilt5$year[tcbrasilt5$id.t==2] <- c(2018)
#tcbrasilt5$w <- as.factor(tcbrasilt6b$id)
#La variable "date"
tcbrasilt6b$date <- format(lubridate::ymd(paste0(tcbrasilt6b$year,tcbrasilt6b$month,"01")), "%m-%Y")
#Nos quedamos con las variables que nos importan
colnames(tcbrasilt6b)
keeps2 <- c("arrend.vehiculos",
            "arrend.obienes",  
            "arrend.total",
            "desc.cheques",
            "comp.deudas",
            "otrost6",
            "total.ngiratorio",
            "totalt6")
tcbrasilt6b = tcbrasilt6b[keeps2]
#
write.csv(tcbrasilt6b,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Brasil\\tcbrasilt6b.csv", row.names = FALSE)
#
# Tabel 7 ---------------------------------------
###rm(list = ls())
library(readxl)
tcbrat7 <- read_excel("Brasildic.xlsx",sheet="Tabela 7", range = "A12:O1000")
# analyzing
colnames(tcbrat7)
# Rename column names
names(tcbrat7)[names(tcbrat7) == "...1"] <- "year"
names(tcbrat7)[names(tcbrat7) == "...2"] <- "m"
names(tcbrat7)[names(tcbrat7) == "...3"] <- "n"
names(tcbrat7)[names(tcbrat7) == "...4"] <- "PJ.crural.imp.merc"
names(tcbrat7)[names(tcbrat7) == "...5"] <- "PJ.crural.tarifa.reg"
names(tcbrat7)[names(tcbrat7) == "...6"] <- "PJ.crural.total"
names(tcbrat7)[names(tcbrat7) == "...7"] <- "PJ.financ.inmob.imp.merc"
names(tcbrat7)[names(tcbrat7) == "...8"] <- "PJ.financ.inmob.tarifa.reg"
names(tcbrat7)[names(tcbrat7) == "...9"] <- "PJ.financ.inmob.total"
names(tcbrat7)[names(tcbrat7) == "...10"] <- "PJ.cred.rec.bndes.kgirat"
names(tcbrat7)[names(tcbrat7) == "...11"] <- "PJ.cred.rec.bndes.finver"
names(tcbrat7)[names(tcbrat7) == "...12"] <- "PJ.cred.rec.bndes.fagro"
names(tcbrat7)[names(tcbrat7) == "...13"] <- "PJ.cred.rec.bndes.total"
names(tcbrat7)[names(tcbrat7) == "...14"] <- "PJ.otros"
names(tcbrat7)[names(tcbrat7) == "...15"] <- "PJ.total"
tcbrat7
#Eliminando empty values
#tcbrat7 <- tcbrat7[!is.na(tcbrat7$vendedor), ]
tcbrat7 <- tcbrat7[!is.na(tcbrat7$m), ]
#Con las variables que interesan
colnames(tcbrat7)
keeps <- c("m","PJ.crural.imp.merc",
           "PJ.crural.tarifa.reg",
           "PJ.crural.total",           
           "PJ.financ.inmob.imp.merc",
           "PJ.financ.inmob.tarifa.reg",
           "PJ.financ.inmob.total",     
           "PJ.cred.rec.bndes.kgirat",
           "PJ.cred.rec.bndes.finver",  
           "PJ.cred.rec.bndes.fagro",
           "PJ.cred.rec.bndes.total",
           "PJ.otros",
           "PJ.total")
tcbrasilt7 = tcbrat7[keeps]
#Variable mes numeral
tcbrasilt7$id[tcbrasilt7$m=="Jan"] <- c(1)
tcbrasilt7$id[tcbrasilt7$m=="Fev"] <- c(2)
tcbrasilt7$id[tcbrasilt7$m=="Mar"] <- c(3)
tcbrasilt7$id[tcbrasilt7$m=="Abr"] <- c(4)
tcbrasilt7$id[tcbrasilt7$m=="Mai"] <- c(5)
tcbrasilt7$id[tcbrasilt7$m=="Jun"] <- c(6)
tcbrasilt7$id[tcbrasilt7$m=="Jul"] <- c(7)
tcbrasilt7$id[tcbrasilt7$m=="Ago"] <- c(8)
tcbrasilt7$id[tcbrasilt7$m=="Set"] <- c(9)
tcbrasilt7$id[tcbrasilt7$m=="Out"] <- c(10)
tcbrasilt7$id[tcbrasilt7$m=="Nov"] <- c(11)
tcbrasilt7$id[tcbrasilt7$m=="Dez"] <- c(12)
tcbrasilt7$month[tcbrasilt7$m=="Jan"] <- c("Jan")
tcbrasilt7$month[tcbrasilt7$m=="Fev"] <- c("Feb")
tcbrasilt7$month[tcbrasilt7$m=="Mar"] <- c("Mar")
tcbrasilt7$month[tcbrasilt7$m=="Abr"] <- c("Apr")
tcbrasilt7$month[tcbrasilt7$m=="Mai"] <- c("May")
tcbrasilt7$month[tcbrasilt7$m=="Jun"] <- c("Jun")
tcbrasilt7$month[tcbrasilt7$m=="Jul"] <- c("Jul")
tcbrasilt7$month[tcbrasilt7$m=="Ago"] <- c("Aug")
tcbrasilt7$month[tcbrasilt7$m=="Set"] <- c("Sep")
tcbrasilt7$month[tcbrasilt7$m=="Out"] <- c("Oct")
tcbrasilt7$month[tcbrasilt7$m=="Nov"] <- c("Nov")
tcbrasilt7$month[tcbrasilt7$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt7$id.t <- with(tcbrasilt7, ave(rep(1, nrow(tcbrasilt7)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt7$year <- NA
tcbrasilt5$year[tcbrasilt5$id.t==1] <- c(2017)
tcbrasilt5$year[tcbrasilt5$id.t==2] <- c(2018)
#tcbrasilt5$w <- as.factor(tcbrasilt7$id)
#La variable "date"
tcbrasilt7$date <- format(lubridate::ymd(paste0(tcbrasilt7$year,tcbrasilt7$month,"01")), "%m-%Y")
#Nos quedamos con las variables que nos importan
colnames(tcbrasilt7)
keeps2 <- c("PJ.crural.imp.merc",
            "PJ.crural.tarifa.reg",
            "PJ.crural.total",           
            "PJ.financ.inmob.imp.merc",
            "PJ.financ.inmob.tarifa.reg",
            "PJ.financ.inmob.total",     
            "PJ.cred.rec.bndes.kgirat",
            "PJ.cred.rec.bndes.finver",
            "PJ.cred.rec.bndes.fagro",
            "PJ.cred.rec.bndes.total",
            "PJ.otros",
            "PJ.total")
tcbrasilt7 = tcbrasilt7[keeps2]
# Tabel 8 ---------------------------------------
###rm(list = ls())
library(readxl)
tcbrat8 <- read_excel("Brasildic.xlsx",sheet="Tabela 8", range = "A12:O1000")
# analyzing
colnames(tcbrat8)
# Rename column names
names(tcbrat8)[names(tcbrat8) == "...1"] <- "year"
names(tcbrat8)[names(tcbrat8) == "...2"] <- "m"
names(tcbrat8)[names(tcbrat8) == "...3"] <- "n"
names(tcbrat8)[names(tcbrat8) == "...4"] <- "crural.imp.merc"
names(tcbrat8)[names(tcbrat8) == "...5"] <- "crural.tarifa.reg"
names(tcbrat8)[names(tcbrat8) == "...6"] <- "crural.total"
names(tcbrat8)[names(tcbrat8) == "...7"] <- "financ.inmob.imp.merc"
names(tcbrat8)[names(tcbrat8) == "...8"] <- "financ.inmob.tarifa.reg"
names(tcbrat8)[names(tcbrat8) == "...9"] <- "financ.inmob.total"
names(tcbrat8)[names(tcbrat8) == "...10"] <- "cred.rec.bndes.finver"
names(tcbrat8)[names(tcbrat8) == "...11"] <- "cred.rec.bndes.fagro"
names(tcbrat8)[names(tcbrat8) == "...12"] <- "cred.rec.bndes.total"
names(tcbrat8)[names(tcbrat8) == "...13"] <- "microcredito"
names(tcbrat8)[names(tcbrat8) == "...14"] <- "otros"
names(tcbrat8)[names(tcbrat8) == "...15"] <- "total"
tcbrat8
#Eliminando empty values
#tcbrat8 <- tcbrat8[!is.na(tcbrat8$vendedor), ]
tcbrat8 <- tcbrat8[!is.na(tcbrat8$m), ]
#Con las variables que interesan
colnames(tcbrat8)
keeps <- c("m","crural.imp.merc",
           "crural.tarifa.reg",
           "crural.total",           
           "financ.inmob.imp.merc",
           "financ.inmob.tarifa.reg",
           "financ.inmob.total",     
           "cred.rec.bndes.finver",
           "cred.rec.bndes.fagro",
           "cred.rec.bndes.total",
           "microcredito",
           "otros",
           "total")
tcbrasilt8 = tcbrat8[keeps]
#Variable mes numeral
tcbrasilt8$id[tcbrasilt8$m=="Jan"] <- c(1)
tcbrasilt8$id[tcbrasilt8$m=="Fev"] <- c(2)
tcbrasilt8$id[tcbrasilt8$m=="Mar"] <- c(3)
tcbrasilt8$id[tcbrasilt8$m=="Abr"] <- c(4)
tcbrasilt8$id[tcbrasilt8$m=="Mai"] <- c(5)
tcbrasilt8$id[tcbrasilt8$m=="Jun"] <- c(6)
tcbrasilt8$id[tcbrasilt8$m=="Jul"] <- c(7)
tcbrasilt8$id[tcbrasilt8$m=="Ago"] <- c(8)
tcbrasilt8$id[tcbrasilt8$m=="Set"] <- c(9)
tcbrasilt8$id[tcbrasilt8$m=="Out"] <- c(10)
tcbrasilt8$id[tcbrasilt8$m=="Nov"] <- c(11)
tcbrasilt8$id[tcbrasilt8$m=="Dez"] <- c(12)
tcbrasilt8$month[tcbrasilt8$m=="Jan"] <- c("Jan")
tcbrasilt8$month[tcbrasilt8$m=="Fev"] <- c("Feb")
tcbrasilt8$month[tcbrasilt8$m=="Mar"] <- c("Mar")
tcbrasilt8$month[tcbrasilt8$m=="Abr"] <- c("Apr")
tcbrasilt8$month[tcbrasilt8$m=="Mai"] <- c("May")
tcbrasilt8$month[tcbrasilt8$m=="Jun"] <- c("Jun")
tcbrasilt8$month[tcbrasilt8$m=="Jul"] <- c("Jul")
tcbrasilt8$month[tcbrasilt8$m=="Ago"] <- c("Aug")
tcbrasilt8$month[tcbrasilt8$m=="Set"] <- c("Sep")
tcbrasilt8$month[tcbrasilt8$m=="Out"] <- c("Oct")
tcbrasilt8$month[tcbrasilt8$m=="Nov"] <- c("Nov")
tcbrasilt8$month[tcbrasilt8$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt8$id.t <- with(tcbrasilt8, ave(rep(1, nrow(tcbrasilt8)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt8$year <- NA
tcbrasilt5$year[tcbrasilt5$id.t==1] <- c(2017)
tcbrasilt5$year[tcbrasilt5$id.t==2] <- c(2018)
#tcbrasilt5$w <- as.factor(tcbrasilt8$id)
#La variable "date"
tcbrasilt8$date <- format(lubridate::ymd(paste0(tcbrasilt8$year,tcbrasilt8$month,"01")), "%m-%Y")
#Nos quedamos con las variables que nos importan
colnames(tcbrasilt8)
keeps2 <- c("crural.imp.merc",
            "crural.tarifa.reg",
            "crural.total",           
            "financ.inmob.imp.merc",
            "financ.inmob.tarifa.reg",
            "financ.inmob.total",     
            "cred.rec.bndes.finver",
            "cred.rec.bndes.fagro",
            "cred.rec.bndes.total",
            "microcredito",
            "otros",
            "total")
tcbrasilt8 = tcbrasilt8[keeps2]
# EMPRESAS TIPO CREDITO------------------------
# Tabel 27 ---------------------------------------
###rm(list = ls())
library(readxl)
tcbrat27 <- read_excel("Brasildic.xlsx",sheet="Tabela 27", range = "A12:O1000")
# analyzing
colnames(tcbrat27)
# Rename column names
names(tcbrat27)[names(tcbrat27) == "...1"] <- "year"
names(tcbrat27)[names(tcbrat27) == "...2"] <- "m"
names(tcbrat27)[names(tcbrat27) == "...3"] <- "n"
names(tcbrat27)[names(tcbrat27) == "...4"] <- "EMP.equi.mpme"
names(tcbrat27)[names(tcbrat27) == "...5"] <- "EMP.equi.grande"
names(tcbrat27)[names(tcbrat27) == "...6"] <- "EMP.equi.total"
names(tcbrat27)[names(tcbrat27) == "...7"] <- "EMP.defec.mpme"
names(tcbrat27)[names(tcbrat27) == "...8"] <- "EMP.defec.grande"
names(tcbrat27)[names(tcbrat27) == "...9"] <- "EMP.defec.total"
names(tcbrat27)[names(tcbrat27) == "...10"] <- "EMP.maybal.riesgo.mpme"
names(tcbrat27)[names(tcbrat27) == "...11"] <- "EMP.maybal.riesgo.grande"
names(tcbrat27)[names(tcbrat27) == "...12"] <- "EMP.maybal.riesgo.total"
tcbrat27
#Eliminando empty values
#tcbrat27 <- tcbrat27[!is.na(tcbrat27$vendedor), ]
tcbrat27 <- tcbrat27[!is.na(tcbrat27$m), ]
#Con las variables que interesan
colnames(tcbrat27)
keeps <- c("m","EMP.equi.mpme",
           "EMP.equi.grande",
           "EMP.equi.total",
           "EMP.defec.mpme",
           "EMP.defec.grande",        
           "EMP.defec.total",
           "EMP.maybal.riesgo.mpme",
           "EMP.maybal.riesgo.grande",
           "EMP.maybal.riesgo.total")
tcbrasilt27 = tcbrat27[keeps]
#Variable mes numeral
tcbrasilt27$id[tcbrasilt27$m=="Jan"] <- c(1)
tcbrasilt27$id[tcbrasilt27$m=="Fev"] <- c(2)
tcbrasilt27$id[tcbrasilt27$m=="Mar"] <- c(3)
tcbrasilt27$id[tcbrasilt27$m=="Abr"] <- c(4)
tcbrasilt27$id[tcbrasilt27$m=="Mai"] <- c(5)
tcbrasilt27$id[tcbrasilt27$m=="Jun"] <- c(6)
tcbrasilt27$id[tcbrasilt27$m=="Jul"] <- c(7)
tcbrasilt27$id[tcbrasilt27$m=="Ago"] <- c(8)
tcbrasilt27$id[tcbrasilt27$m=="Set"] <- c(9)
tcbrasilt27$id[tcbrasilt27$m=="Out"] <- c(10)
tcbrasilt27$id[tcbrasilt27$m=="Nov"] <- c(11)
tcbrasilt27$id[tcbrasilt27$m=="Dez"] <- c(12)
tcbrasilt27$month[tcbrasilt27$m=="Jan"] <- c("Jan")
tcbrasilt27$month[tcbrasilt27$m=="Fev"] <- c("Feb")
tcbrasilt27$month[tcbrasilt27$m=="Mar"] <- c("Mar")
tcbrasilt27$month[tcbrasilt27$m=="Abr"] <- c("Apr")
tcbrasilt27$month[tcbrasilt27$m=="Mai"] <- c("May")
tcbrasilt27$month[tcbrasilt27$m=="Jun"] <- c("Jun")
tcbrasilt27$month[tcbrasilt27$m=="Jul"] <- c("Jul")
tcbrasilt27$month[tcbrasilt27$m=="Ago"] <- c("Aug")
tcbrasilt27$month[tcbrasilt27$m=="Set"] <- c("Sep")
tcbrasilt27$month[tcbrasilt27$m=="Out"] <- c("Oct")
tcbrasilt27$month[tcbrasilt27$m=="Nov"] <- c("Nov")
tcbrasilt27$month[tcbrasilt27$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt27$id.t <- with(tcbrasilt27, ave(rep(1, nrow(tcbrasilt27)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt27$year <- NA
tcbrasilt5$year[tcbrasilt5$id.t==1] <- c(2017)
tcbrasilt5$year[tcbrasilt5$id.t==2] <- c(2018)
#tcbrasilt5$w <- as.factor(tcbrasilt27$id)
#La variable "date"
tcbrasilt27$date <- format(lubridate::ymd(paste0(tcbrasilt27$year,tcbrasilt27$month,"01")), "%m-%Y")
#Nos quedamos con las variables que nos importan
colnames(tcbrasilt27)
keeps2 <- c("EMP.equi.mpme",
            "EMP.equi.grande",
            "EMP.equi.total",
            "EMP.defec.mpme",
            "EMP.defec.grande",        
            "EMP.defec.total",
            "EMP.maybal.riesgo.mpme",
            "EMP.maybal.riesgo.grande",
            "EMP.maybal.riesgo.total")
tcbrasilt27 = tcbrasilt27[keeps2]
# cbinPad function ------------------------------
cbindPad <- function(...){
  args <- list(...)
  n <- sapply(args,nrow)
  mx <- max(n)
  pad <- function(x, mx){
    if (nrow(x) < mx){
      nms <- colnames(x)
      padTemp <- matrix(NA, mx - nrow(x), ncol(x))
      colnames(padTemp) <- nms
      if (ncol(x)==0) {
        return(padTemp)
      } else {
        return(rbind(x,padTemp))
      }
    }
    else{
      return(x)
    }
  }
  rs <- lapply(args,pad,mx)
  return(do.call(cbind,rs))
}
# Adding data horizontally ------------------------------
tcbrasilm1 <- cbindPad(tcbrasilt5,
                       tcbrasilt5a,
                       tcbrasilt5b)
tcbrasilm2 <- cbindPad(tcbrasilm1,
                       tcbrasilt6,
                       tcbrasilt6a,
                       tcbrasilt6b)
tcbrasil <- cbindPad(tcbrasilm2,
                     tcbrasilt7,
                     tcbrasilt8,
                     tcbrasilt27)
write.csv(tcbrasil,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Brasil\\tcbrasil.csv", row.names = FALSE)
# Agregando variables -----------------------------------
colnames(tcbrasil)
tcbrasil$ktrabajo <- tcbrasil$PJ.capital.trabajoT
tcbrasil$Leasing <- tcbrasil$PJ.arrend.total+tcbrasil$arrend.total
tcbrasil$TarjetaCredito <- tcbrasil$PJ.tarjcredito.total+tcbrasil$tcredito.total
tcbrasil$Personal <- tcbrasil$cred.personal.total
tcbrasil$Hipotecario <- tcbrasil$PJ.financ.inmob.total+tcbrasil$financ.inmob.total
tcbrasil$Consumo <- tcbrasil$PJ.adq.vehiculos+tcbrasil$PJ.adq.obienes+tcbrasil$adq.vehiculos+tcbrasil$adq.obienes
tcbrasil$Microcredito <- tcbrasil$microcredito
tcbrasil$Pyme <- tcbrasil$EMP.equi.mpme
tcbrasil$Empresarial <- tcbrasil$EMP.equi.grande
tcbrasil$Comercial <- tcbrasil$Empresarial+tcbrasil$Pyme
keeps3 <- c("date",
            "Leasing",
            "TarjetaCredito",           
            "Personal",
            "Hipotecario",
            "Microcredito",
            "Consumo",
            "Pyme",
            "Empresarial",
            "Comercial")
tcbrasilmodic <- tcbrasil[keeps3]
#Nombre de las filas
row.names(tcbrasilmodic) <- tcbrasilmodic$date
# Exportando --------------------------------------------
write.csv(tcbrasilmodic,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Brasil\\tcbrasilmodic.csv", row.names = FALSE)
###ACTUALIZABLE DESDE DIC2018 --------------------------------
# Importando datos ---------------------------------------------
##rm(list = ls())
library(httr)
list <- c("https://www.bcb.gov.br/ftp/notaecon/ni202008pmp.zip")
#Para hacer el historico usar el archivo de agosto 2020, se tiene informacion desde el 2018dic
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Brasil", i, ".zip"),  mode="wb")}
# Unzip documents ---------------------------------------
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Brasil/Brasil1.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Brasil"
unzip(zipF,exdir=outDir)
#startingDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Brasil/Brasil1"
#filez<-list.files(startingDir,pattern="searchPattern")
#head(filez)
#Cambiando nombre---------------------------------------
file.rename(("Notimp2.xlsx"), paste0("Brasilene.xlsx"))
# TIPO CREDITO-PERSONAS JURIDICAS -----------------------
###rm(list = ls())
# Tabel 5 ---------------------------------------
library(readxl)
tcbrat5 <- read_excel("Brasilene.xlsx",sheet="Tabela 5", range = "A12:L1000")
# analyzing
colnames(tcbrat5)
# Rename column names
names(tcbrat5)[names(tcbrat5) == "...1"] <- "year"
names(tcbrat5)[names(tcbrat5) == "...2"] <- "m"
names(tcbrat5)[names(tcbrat5) == "...3"] <- "n"
names(tcbrat5)[names(tcbrat5) == "...4"] <- "PJ.desc.cuentas.cobrar"
names(tcbrat5)[names(tcbrat5) == "...5"] <- "PJ.desc.cheques"
names(tcbrat5)[names(tcbrat5) == "...6"] <- "PJ.ant.fac.tarjetas"
names(tcbrat5)[names(tcbrat5) == "...7"] <- "PJ.cap.trabajo365"
names(tcbrat5)[names(tcbrat5) == "...8"] <- "PJ.cap.trabajo+365"
names(tcbrat5)[names(tcbrat5) == "...9"] <- "PJ.techo.girat"
names(tcbrat5)[names(tcbrat5) == "...10"] <- "PJ.capital.trabajoT"
names(tcbrat5)[names(tcbrat5) == "...11"] <- "PJ.cta.garantizado"
names(tcbrat5)[names(tcbrat5) == "...12"] <- "PJ.cheque.especial"
tcbrat5
#Eliminando empty values
tcbrat5 <- tcbrat5[!is.na(tcbrat5$techo.girat), ]
tcbrat5 <- tcbrat5[!is.na(tcbrat5$m), ]
#Con las variables que interesan
keeps <- c("m","PJ.desc.cuentas.cobrar", 
           "PJ.desc.cheques", "PJ.ant.fac.tarjetas", "PJ.cap.trabajo365", 
           "PJ.cap.trabajo+365", "PJ.techo.girat", "PJ.capital.trabajoT",
           "PJ.cta.garantizado", "PJ.cheque.especial")
tcbrasilt5 = tcbrat5[keeps]
#Variable mes numeral
tcbrasilt5$id[tcbrasilt5$m=="Jan"] <- c(1)
tcbrasilt5$id[tcbrasilt5$m=="Fev"] <- c(2)
tcbrasilt5$id[tcbrasilt5$m=="Mar"] <- c(3)
tcbrasilt5$id[tcbrasilt5$m=="Abr"] <- c(4)
tcbrasilt5$id[tcbrasilt5$m=="Mai"] <- c(5)
tcbrasilt5$id[tcbrasilt5$m=="Jun"] <- c(6)
tcbrasilt5$id[tcbrasilt5$m=="Jul"] <- c(7)
tcbrasilt5$id[tcbrasilt5$m=="Ago"] <- c(8)
tcbrasilt5$id[tcbrasilt5$m=="Set"] <- c(9)
tcbrasilt5$id[tcbrasilt5$m=="Out"] <- c(10)
tcbrasilt5$id[tcbrasilt5$m=="Nov"] <- c(11)
tcbrasilt5$id[tcbrasilt5$m=="Dez"] <- c(12)
tcbrasilt5$month[tcbrasilt5$m=="Jan"] <- c("Jan")
tcbrasilt5$month[tcbrasilt5$m=="Fev"] <- c("Feb")
tcbrasilt5$month[tcbrasilt5$m=="Mar"] <- c("Mar")
tcbrasilt5$month[tcbrasilt5$m=="Abr"] <- c("Apr")
tcbrasilt5$month[tcbrasilt5$m=="Mai"] <- c("May")
tcbrasilt5$month[tcbrasilt5$m=="Jun"] <- c("Jun")
tcbrasilt5$month[tcbrasilt5$m=="Jul"] <- c("Jul")
tcbrasilt5$month[tcbrasilt5$m=="Ago"] <- c("Aug")
tcbrasilt5$month[tcbrasilt5$m=="Set"] <- c("Sep")
tcbrasilt5$month[tcbrasilt5$m=="Out"] <- c("Oct")
tcbrasilt5$month[tcbrasilt5$m=="Nov"] <- c("Nov")
tcbrasilt5$month[tcbrasilt5$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt5$id.t <- with(tcbrasilt5, ave(rep(1, nrow(tcbrasilt5)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt5$year <- NA
tcbrasilt5$year[tcbrasilt5$id.t==1] <- c(2019)
tcbrasilt5$year[tcbrasilt5$id.t==2] <- c(2020)
tcbrasilt5$year[tcbrasilt5$id.t==3] <- c(2021)
tcbrasilt5$year[tcbrasilt5$id.t==4] <- c(2022)
tcbrasilt5$year[tcbrasilt5$id.t==5] <- c(2023)
tcbrasilt5$year[tcbrasilt5$id.t==6] <- c(2024)
tcbrasilt5$year[tcbrasilt5$id.t==7] <- c(2025)
tcbrasilt5$year[tcbrasilt5$id.t==8] <- c(2026)
tcbrasilt5$year[tcbrasilt5$id.t==9] <- c(2027)
tcbrasilt5$year[tcbrasilt5$id.t==10] <- c(2028)
tcbrasilt5$year[tcbrasilt5$id.t==11] <- c(2029)
tcbrasilt5$year[tcbrasilt5$id.t==12] <- c(2030)
#tcbrasilt5$w <- as.factor(tcbrasilt5$id)
#La variable "date"
#tcbrasilt5$date <- format(lubridate::ymd(paste0(tcbrasilt5$year,tcbrasilt5$month,"01")), "%Y-%m")
#tcbrasilt5$date <- format(as.Date(paste0(tcbrasilt5$month, tcbrasilt5$year, "01"), format="%b%Y%d"), "%m-%Y")
tcbrasilt5$date <- lubridate::ymd(paste0(tcbrasilt5$year,tcbrasilt5$month,"01"))
#Nos quedamos con las variables que nos importan
keeps2 <- c("date","year","month","id.t","id", "PJ.desc.cuentas.cobrar", 
            "PJ.desc.cheques", "PJ.ant.fac.tarjetas", "PJ.cap.trabajo365", 
            "PJ.cap.trabajo+365", "PJ.techo.girat", "PJ.capital.trabajoT",
            "PJ.cta.garantizado", "PJ.cheque.especial")
tcbrasilt5 = tcbrasilt5[keeps2]
# Tabel 5A ---------------------------------------
###rm(list = ls())
library(readxl)
tcbrat5a <- read_excel("Brasilene.xlsx",sheet="Tabela 5A", range = "A12:O1000")
# analyzing
colnames(tcbrat5a)
# Rename column names
names(tcbrat5a)[names(tcbrat5a) == "...1"] <- "year"
names(tcbrat5a)[names(tcbrat5a) == "...2"] <- "m"
names(tcbrat5a)[names(tcbrat5a) == "...3"] <- "n"
names(tcbrat5a)[names(tcbrat5a) == "...4"] <- "PJ.adq.vehiculos"
names(tcbrat5a)[names(tcbrat5a) == "...5"] <- "PJ.adq.obienes"
names(tcbrat5a)[names(tcbrat5a) == "...6"] <- "PJ.arrend.vehiculos"
names(tcbrat5a)[names(tcbrat5a) == "...7"] <- "PJ.arrend.obienes"
names(tcbrat5a)[names(tcbrat5a) == "...8"] <- "PJ.arrend.total"
names(tcbrat5a)[names(tcbrat5a) == "...9"] <- "PJ.vendedor"
names(tcbrat5a)[names(tcbrat5a) == "...10"] <- "PJ.comprador"
names(tcbrat5a)[names(tcbrat5a) == "...11"] <- "n2"
names(tcbrat5a)[names(tcbrat5a) == "...12"] <- "n3"
tcbrat5a
#Eliminando empty values
#tcbrat5a <- tcbrat5a[!is.na(tcbrat5a$vendedor), ]
tcbrat5a <- tcbrat5a[!is.na(tcbrat5a$m), ]
#Con las variables que interesan
colnames(tcbrat5a)
keeps <- c("m","PJ.adq.vehiculos","PJ.adq.obienes",
           "PJ.arrend.vehiculos","PJ.arrend.obienes","PJ.arrend.total",
           "PJ.vendedor","PJ.comprador")
tcbrasilt5a = tcbrat5a[keeps]
#Variable mes numeral
tcbrasilt5a$id[tcbrasilt5a$m=="Jan"] <- c(1)
tcbrasilt5a$id[tcbrasilt5a$m=="Fev"] <- c(2)
tcbrasilt5a$id[tcbrasilt5a$m=="Mar"] <- c(3)
tcbrasilt5a$id[tcbrasilt5a$m=="Abr"] <- c(4)
tcbrasilt5a$id[tcbrasilt5a$m=="Mai"] <- c(5)
tcbrasilt5a$id[tcbrasilt5a$m=="Jun"] <- c(6)
tcbrasilt5a$id[tcbrasilt5a$m=="Jul"] <- c(7)
tcbrasilt5a$id[tcbrasilt5a$m=="Ago"] <- c(8)
tcbrasilt5a$id[tcbrasilt5a$m=="Set"] <- c(9)
tcbrasilt5a$id[tcbrasilt5a$m=="Out"] <- c(10)
tcbrasilt5a$id[tcbrasilt5a$m=="Nov"] <- c(11)
tcbrasilt5a$id[tcbrasilt5a$m=="Dez"] <- c(12)
tcbrasilt5a$month[tcbrasilt5a$m=="Jan"] <- c("Jan")
tcbrasilt5a$month[tcbrasilt5a$m=="Fev"] <- c("Feb")
tcbrasilt5a$month[tcbrasilt5a$m=="Mar"] <- c("Mar")
tcbrasilt5a$month[tcbrasilt5a$m=="Abr"] <- c("Apr")
tcbrasilt5a$month[tcbrasilt5a$m=="Mai"] <- c("May")
tcbrasilt5a$month[tcbrasilt5a$m=="Jun"] <- c("Jun")
tcbrasilt5a$month[tcbrasilt5a$m=="Jul"] <- c("Jul")
tcbrasilt5a$month[tcbrasilt5a$m=="Ago"] <- c("Aug")
tcbrasilt5a$month[tcbrasilt5a$m=="Set"] <- c("Sep")
tcbrasilt5a$month[tcbrasilt5a$m=="Out"] <- c("Oct")
tcbrasilt5a$month[tcbrasilt5a$m=="Nov"] <- c("Nov")
tcbrasilt5a$month[tcbrasilt5a$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt5a$id.t <- with(tcbrasilt5a, ave(rep(1, nrow(tcbrasilt5a)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt5a$year <- NA
tcbrasilt5a$year[tcbrasilt5a$id.t==1] <- c(2019)
tcbrasilt5a$year[tcbrasilt5a$id.t==2] <- c(2020)
tcbrasilt5a$year[tcbrasilt5a$id.t==3] <- c(2021)
tcbrasilt5a$year[tcbrasilt5a$id.t==4] <- c(2022)
tcbrasilt5a$year[tcbrasilt5a$id.t==5] <- c(2023)
tcbrasilt5a$year[tcbrasilt5a$id.t==6] <- c(2024)
tcbrasilt5a$year[tcbrasilt5a$id.t==7] <- c(2025)
tcbrasilt5a$year[tcbrasilt5a$id.t==8] <- c(2026)
tcbrasilt5a$year[tcbrasilt5a$id.t==9] <- c(2027)
tcbrasilt5a$year[tcbrasilt5a$id.t==10] <- c(2028)
tcbrasilt5a$year[tcbrasilt5a$id.t==11] <- c(2029)
tcbrasilt5a$year[tcbrasilt5a$id.t==12] <- c(2030)
#tcbrasilt5$w <- as.factor(tcbrasilt5a$id)
#La variable "date"
tcbrasilt5a$date <- format(lubridate::ymd(paste0(tcbrasilt5a$year,tcbrasilt5a$month,"01")), "%m-%Y")
colnames(tcbrasilt5a)
#Nos quedamos con las variables que nos importan
keeps2 <- c("PJ.adq.vehiculos",
            "PJ.adq.obienes",      "PJ.arrend.vehiculos",
            "PJ.arrend.obienes",   "PJ.arrend.total",    "PJ.vendedor",
            "PJ.comprador")
tcbrasilt5a = tcbrasilt5a[keeps2]
# Tabel 5B ---------------------------------------
###rm(list = ls())
library(readxl)
tcbrat5b <- read_excel("Brasilene.xlsx",sheet="Tabela 5B", range = "A12:O1000")
# analyzing
colnames(tcbrat5b)
# Rename column names
names(tcbrat5b)[names(tcbrat5b) == "...1"] <- "year"
names(tcbrat5b)[names(tcbrat5b) == "...2"] <- "m"
names(tcbrat5b)[names(tcbrat5b) == "...3"] <- "n"
names(tcbrat5b)[names(tcbrat5b) == "...4"] <- "PJ.tarjcredito.portpar"
names(tcbrat5b)[names(tcbrat5b) == "...5"] <- "PJ.tarjcredito.alavista"
names(tcbrat5b)[names(tcbrat5b) == "...6"] <- "PJ.tarjcredito.total"
names(tcbrat5b)[names(tcbrat5b) == "...7"] <- "PJ.acc"
names(tcbrat5b)[names(tcbrat5b) == "...8"] <- "PJ.finan.import"
names(tcbrat5b)[names(tcbrat5b) == "...9"] <- "PJ.finan.export"
names(tcbrat5b)[names(tcbrat5b) == "...10"] <- "PJ.trans.exterior"
names(tcbrat5b)[names(tcbrat5b) == "...11"] <- "PJ.otrost5"
names(tcbrat5b)[names(tcbrat5b) == "...12"] <- "PJ.totalt5"
tcbrat5b
#Eliminando empty values
#tcbrat5b <- tcbrat5b[!is.na(tcbrat5b$vendedor), ]
tcbrat5b <- tcbrat5b[!is.na(tcbrat5b$m), ]
#Con las variables que interesan
colnames(tcbrat5b)
keeps <- c("m","PJ.tarjcredito.portpar",
           "PJ.tarjcredito.alavista", "PJ.tarjcredito.total",
           "PJ.acc",                  "PJ.finan.import",
           "PJ.finan.export",         "PJ.trans.exterior",
           "PJ.otrost5" ,               "PJ.totalt5")
tcbrasilt5b = tcbrat5b[keeps]
#Variable mes numeral
tcbrasilt5b$id[tcbrasilt5b$m=="Jan"] <- c(1)
tcbrasilt5b$id[tcbrasilt5b$m=="Fev"] <- c(2)
tcbrasilt5b$id[tcbrasilt5b$m=="Mar"] <- c(3)
tcbrasilt5b$id[tcbrasilt5b$m=="Abr"] <- c(4)
tcbrasilt5b$id[tcbrasilt5b$m=="Mai"] <- c(5)
tcbrasilt5b$id[tcbrasilt5b$m=="Jun"] <- c(6)
tcbrasilt5b$id[tcbrasilt5b$m=="Jul"] <- c(7)
tcbrasilt5b$id[tcbrasilt5b$m=="Ago"] <- c(8)
tcbrasilt5b$id[tcbrasilt5b$m=="Set"] <- c(9)
tcbrasilt5b$id[tcbrasilt5b$m=="Out"] <- c(10)
tcbrasilt5b$id[tcbrasilt5b$m=="Nov"] <- c(11)
tcbrasilt5b$id[tcbrasilt5b$m=="Dez"] <- c(12)
tcbrasilt5b$month[tcbrasilt5b$m=="Jan"] <- c("Jan")
tcbrasilt5b$month[tcbrasilt5b$m=="Fev"] <- c("Feb")
tcbrasilt5b$month[tcbrasilt5b$m=="Mar"] <- c("Mar")
tcbrasilt5b$month[tcbrasilt5b$m=="Abr"] <- c("Apr")
tcbrasilt5b$month[tcbrasilt5b$m=="Mai"] <- c("May")
tcbrasilt5b$month[tcbrasilt5b$m=="Jun"] <- c("Jun")
tcbrasilt5b$month[tcbrasilt5b$m=="Jul"] <- c("Jul")
tcbrasilt5b$month[tcbrasilt5b$m=="Ago"] <- c("Aug")
tcbrasilt5b$month[tcbrasilt5b$m=="Set"] <- c("Sep")
tcbrasilt5b$month[tcbrasilt5b$m=="Out"] <- c("Oct")
tcbrasilt5b$month[tcbrasilt5b$m=="Nov"] <- c("Nov")
tcbrasilt5b$month[tcbrasilt5b$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt5b$id.t <- with(tcbrasilt5b, ave(rep(1, nrow(tcbrasilt5b)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt5b$year <- NA
tcbrasilt5b$year[tcbrasilt5b$id.t==1] <- c(2019)
tcbrasilt5b$year[tcbrasilt5b$id.t==2] <- c(2020)
tcbrasilt5b$year[tcbrasilt5b$id.t==3] <- c(2021)
tcbrasilt5b$year[tcbrasilt5b$id.t==4] <- c(2022)
tcbrasilt5b$year[tcbrasilt5b$id.t==5] <- c(2023)
tcbrasilt5b$year[tcbrasilt5b$id.t==6] <- c(2024)
tcbrasilt5b$year[tcbrasilt5b$id.t==7] <- c(2025)
tcbrasilt5b$year[tcbrasilt5b$id.t==8] <- c(2026)
tcbrasilt5b$year[tcbrasilt5b$id.t==9] <- c(2027)
tcbrasilt5b$year[tcbrasilt5b$id.t==10] <- c(2028)
tcbrasilt5b$year[tcbrasilt5b$id.t==11] <- c(2029)
tcbrasilt5b$year[tcbrasilt5b$id.t==12] <- c(2030)
#tcbrasilt5$w <- as.factor(tcbrasilt5b$id)
#La variable "date"
tcbrasilt5b$date <- format(lubridate::ymd(paste0(tcbrasilt5b$year,tcbrasilt5b$month,"01")), "%m-%Y")
#Nos quedamos con las variables que nos importan
colnames(tcbrasilt5b)
keeps2 <- c("PJ.tarjcredito.portpar",
            "PJ.tarjcredito.alavista", "PJ.tarjcredito.total",  
            "PJ.acc",                  "PJ.finan.import",
            "PJ.finan.export",         "PJ.trans.exterior" ,     
            "PJ.otrost5",                "PJ.totalt5")
tcbrasilt5b = tcbrasilt5b[keeps2]
# Tabel 6 ---------------------------------------
###rm(list = ls())
library(readxl)
tcbrat6 <- read_excel("Brasilene.xlsx",sheet="Tabela 6", range = "A14:O1000")
# analyzing
colnames(tcbrat6)
# Rename column names
names(tcbrat6)[names(tcbrat6) == "...1"] <- "year"
names(tcbrat6)[names(tcbrat6) == "...2"] <- "m"
names(tcbrat6)[names(tcbrat6) == "...3"] <- "n"
names(tcbrat6)[names(tcbrat6) == "...4"] <- "cheque.esp"
names(tcbrat6)[names(tcbrat6) == "...5"] <- "cred.personal.nconsig"
names(tcbrat6)[names(tcbrat6) == "...6"] <- "cred.personal.consig.servpub"
names(tcbrat6)[names(tcbrat6) == "...7"] <- "cred.personal.consig.sp"
names(tcbrat6)[names(tcbrat6) == "...8"] <- "cred.personal.consig.binss"
names(tcbrat6)[names(tcbrat6) == "...9"] <- "cred.personal.consig.total"
names(tcbrat6)[names(tcbrat6) == "...10"] <- "cred.personal.total"
names(tcbrat6)[names(tcbrat6) == "...11"] <- "n"
tcbrat6
#Eliminando empty values
#tcbrat6 <- tcbrat6[!is.na(tcbrat6$vendedor), ]
tcbrat6 <- tcbrat6[!is.na(tcbrat6$m), ]
#Con las variables que interesan
colnames(tcbrat6)
keeps <- c("m","cheque.esp",
           "cred.personal.nconsig",
           "cred.personal.consig.servpub",
           "cred.personal.consig.sp",
           "cred.personal.consig.binss",
           "cred.personal.consig.total", 
           "cred.personal.total")
tcbrasilt6 = tcbrat6[keeps]
#Variable mes numeral
tcbrasilt6$id[tcbrasilt6$m=="Jan"] <- c(1)
tcbrasilt6$id[tcbrasilt6$m=="Fev"] <- c(2)
tcbrasilt6$id[tcbrasilt6$m=="Mar"] <- c(3)
tcbrasilt6$id[tcbrasilt6$m=="Abr"] <- c(4)
tcbrasilt6$id[tcbrasilt6$m=="Mai"] <- c(5)
tcbrasilt6$id[tcbrasilt6$m=="Jun"] <- c(6)
tcbrasilt6$id[tcbrasilt6$m=="Jul"] <- c(7)
tcbrasilt6$id[tcbrasilt6$m=="Ago"] <- c(8)
tcbrasilt6$id[tcbrasilt6$m=="Set"] <- c(9)
tcbrasilt6$id[tcbrasilt6$m=="Out"] <- c(10)
tcbrasilt6$id[tcbrasilt6$m=="Nov"] <- c(11)
tcbrasilt6$id[tcbrasilt6$m=="Dez"] <- c(12)
tcbrasilt6$month[tcbrasilt6$m=="Jan"] <- c("Jan")
tcbrasilt6$month[tcbrasilt6$m=="Fev"] <- c("Feb")
tcbrasilt6$month[tcbrasilt6$m=="Mar"] <- c("Mar")
tcbrasilt6$month[tcbrasilt6$m=="Abr"] <- c("Apr")
tcbrasilt6$month[tcbrasilt6$m=="Mai"] <- c("May")
tcbrasilt6$month[tcbrasilt6$m=="Jun"] <- c("Jun")
tcbrasilt6$month[tcbrasilt6$m=="Jul"] <- c("Jul")
tcbrasilt6$month[tcbrasilt6$m=="Ago"] <- c("Aug")
tcbrasilt6$month[tcbrasilt6$m=="Set"] <- c("Sep")
tcbrasilt6$month[tcbrasilt6$m=="Out"] <- c("Oct")
tcbrasilt6$month[tcbrasilt6$m=="Nov"] <- c("Nov")
tcbrasilt6$month[tcbrasilt6$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt6$id.t <- with(tcbrasilt6, ave(rep(1, nrow(tcbrasilt6)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt6$year <- NA
tcbrasilt6$year[tcbrasilt6$id.t==1] <- c(2019)
tcbrasilt6$year[tcbrasilt6$id.t==2] <- c(2020)
tcbrasilt6$year[tcbrasilt6$id.t==3] <- c(2021)
tcbrasilt6$year[tcbrasilt6$id.t==4] <- c(2022)
tcbrasilt6$year[tcbrasilt6$id.t==5] <- c(2023)
tcbrasilt6$year[tcbrasilt6$id.t==6] <- c(2024)
tcbrasilt6$year[tcbrasilt6$id.t==7] <- c(2025)
tcbrasilt6$year[tcbrasilt6$id.t==8] <- c(2026)
tcbrasilt6$year[tcbrasilt6$id.t==9] <- c(2027)
tcbrasilt6$year[tcbrasilt6$id.t==10] <- c(2028)
tcbrasilt6$year[tcbrasilt6$id.t==11] <- c(2029)
tcbrasilt6$year[tcbrasilt6$id.t==12] <- c(2030)
#tcbrasilt5$w <- as.factor(tcbrasilt6$id)
#La variable "date"
tcbrasilt6$date <- format(lubridate::ymd(paste0(tcbrasilt6$year,tcbrasilt6$month,"01")), "%m-%Y")
#Nos quedamos con las variables que nos importan
colnames(tcbrasilt6)
keeps2 <- c("cheque.esp",
            "cred.personal.nconsig",
            "cred.personal.consig.servpub",
            "cred.personal.consig.sp",
            "cred.personal.consig.binss",  
            "cred.personal.consig.total",
            "cred.personal.total")
tcbrasilt6 = tcbrasilt6[keeps2]
# Tabel 6A ---------------------------------------
###rm(list = ls())
library(readxl)
tcbrat6a <- read_excel("Brasilene.xlsx",sheet="Tabela 6A", range = "A14:O1000")
# analyzing
colnames(tcbrat6a)
# Rename column names
names(tcbrat6a)[names(tcbrat6a) == "...1"] <- "year"
names(tcbrat6a)[names(tcbrat6a) == "...2"] <- "m"
names(tcbrat6a)[names(tcbrat6a) == "...3"] <- "n"
names(tcbrat6a)[names(tcbrat6a) == "...4"] <- "adq.vehiculos"
names(tcbrat6a)[names(tcbrat6a) == "...5"] <- "adq.obienes"
names(tcbrat6a)[names(tcbrat6a) == "...6"] <- "tcredito.gira.regular"
names(tcbrat6a)[names(tcbrat6a) == "...7"] <- "tcredito.gira.irregular"
names(tcbrat6a)[names(tcbrat6a) == "...8"] <- "tcredito.gira.total"
names(tcbrat6a)[names(tcbrat6a) == "...9"] <- "tcredito.entrega"
names(tcbrat6a)[names(tcbrat6a) == "...10"] <- "tcredito.alavista"
names(tcbrat6a)[names(tcbrat6a) == "...11"] <- "tcredito.total"
names(tcbrat6a)[names(tcbrat6a) == "...12"] <- "n"
tcbrat6a
#Eliminando empty values
#tcbrat6a <- tcbrat6a[!is.na(tcbrat6a$vendedor), ]
tcbrat6a <- tcbrat6a[!is.na(tcbrat6a$m), ]
#Con las variables que interesan
colnames(tcbrat6a)
keeps <- c("m","adq.vehiculos",
           "adq.obienes",
           "tcredito.gira.regular",
           "tcredito.gira.irregular",
           "tcredito.gira.total",
           "tcredito.entrega",       
           "tcredito.alavista",
           "tcredito.total")
tcbrasilt6a = tcbrat6a[keeps]
#Variable mes numeral
tcbrasilt6a$id[tcbrasilt6a$m=="Jan"] <- c(1)
tcbrasilt6a$id[tcbrasilt6a$m=="Fev"] <- c(2)
tcbrasilt6a$id[tcbrasilt6a$m=="Mar"] <- c(3)
tcbrasilt6a$id[tcbrasilt6a$m=="Abr"] <- c(4)
tcbrasilt6a$id[tcbrasilt6a$m=="Mai"] <- c(5)
tcbrasilt6a$id[tcbrasilt6a$m=="Jun"] <- c(6)
tcbrasilt6a$id[tcbrasilt6a$m=="Jul"] <- c(7)
tcbrasilt6a$id[tcbrasilt6a$m=="Ago"] <- c(8)
tcbrasilt6a$id[tcbrasilt6a$m=="Set"] <- c(9)
tcbrasilt6a$id[tcbrasilt6a$m=="Out"] <- c(10)
tcbrasilt6a$id[tcbrasilt6a$m=="Nov"] <- c(11)
tcbrasilt6a$id[tcbrasilt6a$m=="Dez"] <- c(12)
tcbrasilt6a$month[tcbrasilt6a$m=="Jan"] <- c("Jan")
tcbrasilt6a$month[tcbrasilt6a$m=="Fev"] <- c("Feb")
tcbrasilt6a$month[tcbrasilt6a$m=="Mar"] <- c("Mar")
tcbrasilt6a$month[tcbrasilt6a$m=="Abr"] <- c("Apr")
tcbrasilt6a$month[tcbrasilt6a$m=="Mai"] <- c("May")
tcbrasilt6a$month[tcbrasilt6a$m=="Jun"] <- c("Jun")
tcbrasilt6a$month[tcbrasilt6a$m=="Jul"] <- c("Jul")
tcbrasilt6a$month[tcbrasilt6a$m=="Ago"] <- c("Aug")
tcbrasilt6a$month[tcbrasilt6a$m=="Set"] <- c("Sep")
tcbrasilt6a$month[tcbrasilt6a$m=="Out"] <- c("Oct")
tcbrasilt6a$month[tcbrasilt6a$m=="Nov"] <- c("Nov")
tcbrasilt6a$month[tcbrasilt6a$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt6a$id.t <- with(tcbrasilt6a, ave(rep(1, nrow(tcbrasilt6a)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt6a$year <- NA
tcbrasilt6a$year[tcbrasilt6a$id.t==1] <- c(2019)
tcbrasilt6a$year[tcbrasilt6a$id.t==2] <- c(2020)
tcbrasilt6a$year[tcbrasilt6a$id.t==3] <- c(2021)
tcbrasilt6a$year[tcbrasilt6a$id.t==4] <- c(2022)
tcbrasilt6a$year[tcbrasilt6a$id.t==5] <- c(2023)
tcbrasilt6a$year[tcbrasilt6a$id.t==6] <- c(2024)
tcbrasilt6a$year[tcbrasilt6a$id.t==7] <- c(2025)
tcbrasilt6a$year[tcbrasilt6a$id.t==8] <- c(2026)
tcbrasilt6a$year[tcbrasilt6a$id.t==9] <- c(2027)
tcbrasilt6a$year[tcbrasilt6a$id.t==10] <- c(2028)
tcbrasilt6a$year[tcbrasilt6a$id.t==11] <- c(2029)
tcbrasilt6a$year[tcbrasilt6a$id.t==12] <- c(2030)
#tcbrasilt5$w <- as.factor(tcbrasilt6a$id)
#La variable "date"
tcbrasilt6a$date <- format(lubridate::ymd(paste0(tcbrasilt6a$year,tcbrasilt6a$month,"01")), "%m-%Y")
#Nos quedamos con las variables que nos importan
colnames(tcbrasilt6a)
keeps2 <- c("adq.vehiculos",
            "adq.obienes",
            "tcredito.gira.regular",
            "tcredito.gira.irregular",
            "tcredito.gira.total",
            "tcredito.entrega",
            "tcredito.alavista",      "tcredito.total")
tcbrasilt6a = tcbrasilt6a[keeps2]
# Tabel 6B ---------------------------------------
###rm(list = ls())
library(readxl)
tcbrat6b <- read_excel("Brasilene.xlsx",sheet="Tabela 6B", range = "A12:O1000")
# analyzing
colnames(tcbrat6b)
# Rename column names
names(tcbrat6b)[names(tcbrat6b) == "...1"] <- "year"
names(tcbrat6b)[names(tcbrat6b) == "...2"] <- "m"
names(tcbrat6b)[names(tcbrat6b) == "...3"] <- "n"
names(tcbrat6b)[names(tcbrat6b) == "...4"] <- "arrend.vehiculos"
names(tcbrat6b)[names(tcbrat6b) == "...5"] <- "arrend.obienes"
names(tcbrat6b)[names(tcbrat6b) == "...6"] <- "arrend.total"
names(tcbrat6b)[names(tcbrat6b) == "...7"] <- "desc.cheques"
names(tcbrat6b)[names(tcbrat6b) == "...8"] <- "comp.deudas"
names(tcbrat6b)[names(tcbrat6b) == "...9"] <- "otrost6"
names(tcbrat6b)[names(tcbrat6b) == "...10"] <- "total.ngiratorio"
names(tcbrat6b)[names(tcbrat6b) == "...11"] <- "totalt6"
names(tcbrat6b)[names(tcbrat6b) == "...12"] <- "n"
tcbrat6b
#Eliminando empty values
#tcbrat6b <- tcbrat6b[!is.na(tcbrat6b$vendedor), ]
tcbrat6b <- tcbrat6b[!is.na(tcbrat6b$m), ]
#Con las variables que interesan
colnames(tcbrat6b)
keeps <- c("m","arrend.vehiculos",
           "arrend.obienes",  
           "arrend.total",
           "desc.cheques",
           "comp.deudas",
           "otrost6",
           "total.ngiratorio",
           "totalt6")
tcbrasilt6b = tcbrat6b[keeps]
#Variable mes numeral
tcbrasilt6b$id[tcbrasilt6b$m=="Jan"] <- c(1)
tcbrasilt6b$id[tcbrasilt6b$m=="Fev"] <- c(2)
tcbrasilt6b$id[tcbrasilt6b$m=="Mar"] <- c(3)
tcbrasilt6b$id[tcbrasilt6b$m=="Abr"] <- c(4)
tcbrasilt6b$id[tcbrasilt6b$m=="Mai"] <- c(5)
tcbrasilt6b$id[tcbrasilt6b$m=="Jun"] <- c(6)
tcbrasilt6b$id[tcbrasilt6b$m=="Jul"] <- c(7)
tcbrasilt6b$id[tcbrasilt6b$m=="Ago"] <- c(8)
tcbrasilt6b$id[tcbrasilt6b$m=="Set"] <- c(9)
tcbrasilt6b$id[tcbrasilt6b$m=="Out"] <- c(10)
tcbrasilt6b$id[tcbrasilt6b$m=="Nov"] <- c(11)
tcbrasilt6b$id[tcbrasilt6b$m=="Dez"] <- c(12)
tcbrasilt6b$month[tcbrasilt6b$m=="Jan"] <- c("Jan")
tcbrasilt6b$month[tcbrasilt6b$m=="Fev"] <- c("Feb")
tcbrasilt6b$month[tcbrasilt6b$m=="Mar"] <- c("Mar")
tcbrasilt6b$month[tcbrasilt6b$m=="Abr"] <- c("Apr")
tcbrasilt6b$month[tcbrasilt6b$m=="Mai"] <- c("May")
tcbrasilt6b$month[tcbrasilt6b$m=="Jun"] <- c("Jun")
tcbrasilt6b$month[tcbrasilt6b$m=="Jul"] <- c("Jul")
tcbrasilt6b$month[tcbrasilt6b$m=="Ago"] <- c("Aug")
tcbrasilt6b$month[tcbrasilt6b$m=="Set"] <- c("Sep")
tcbrasilt6b$month[tcbrasilt6b$m=="Out"] <- c("Oct")
tcbrasilt6b$month[tcbrasilt6b$m=="Nov"] <- c("Nov")
tcbrasilt6b$month[tcbrasilt6b$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt6b$id.t <- with(tcbrasilt6b, ave(rep(1, nrow(tcbrasilt6b)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt6b$year <- NA
tcbrasilt6b$year[tcbrasilt6b$id.t==1] <- c(2019)
tcbrasilt6b$year[tcbrasilt6b$id.t==2] <- c(2020)
tcbrasilt6b$year[tcbrasilt6b$id.t==3] <- c(2021)
tcbrasilt6b$year[tcbrasilt6b$id.t==4] <- c(2022)
tcbrasilt6b$year[tcbrasilt6b$id.t==5] <- c(2023)
tcbrasilt6b$year[tcbrasilt6b$id.t==6] <- c(2024)
tcbrasilt6b$year[tcbrasilt6b$id.t==7] <- c(2025)
tcbrasilt6b$year[tcbrasilt6b$id.t==8] <- c(2026)
tcbrasilt6b$year[tcbrasilt6b$id.t==9] <- c(2027)
tcbrasilt6b$year[tcbrasilt6b$id.t==10] <- c(2028)
tcbrasilt6b$year[tcbrasilt6b$id.t==11] <- c(2029)
tcbrasilt6b$year[tcbrasilt6b$id.t==12] <- c(2030)
#tcbrasilt5$w <- as.factor(tcbrasilt6b$id)
#La variable "date"
tcbrasilt6b$date <- format(lubridate::ymd(paste0(tcbrasilt6b$year,tcbrasilt6b$month,"01")), "%m-%Y")
#Nos quedamos con las variables que nos importan
colnames(tcbrasilt6b)
keeps2 <- c("arrend.vehiculos",
            "arrend.obienes",  
            "arrend.total",
            "desc.cheques",
            "comp.deudas",
            "otrost6",
            "total.ngiratorio",
            "totalt6")
tcbrasilt6b = tcbrasilt6b[keeps2]
# Tabel 7 ---------------------------------------
###rm(list = ls())
library(readxl)
tcbrat7 <- read_excel("Brasilene.xlsx",sheet="Tabela 7", range = "A12:O1000")
# analyzing
colnames(tcbrat7)
# Rename column names
names(tcbrat7)[names(tcbrat7) == "...1"] <- "year"
names(tcbrat7)[names(tcbrat7) == "...2"] <- "m"
names(tcbrat7)[names(tcbrat7) == "...3"] <- "n"
names(tcbrat7)[names(tcbrat7) == "...4"] <- "PJ.crural.imp.merc"
names(tcbrat7)[names(tcbrat7) == "...5"] <- "PJ.crural.tarifa.reg"
names(tcbrat7)[names(tcbrat7) == "...6"] <- "PJ.crural.total"
names(tcbrat7)[names(tcbrat7) == "...7"] <- "PJ.financ.inmob.imp.merc"
names(tcbrat7)[names(tcbrat7) == "...8"] <- "PJ.financ.inmob.tarifa.reg"
names(tcbrat7)[names(tcbrat7) == "...9"] <- "PJ.financ.inmob.total"
names(tcbrat7)[names(tcbrat7) == "...10"] <- "PJ.cred.rec.bndes.kgirat"
names(tcbrat7)[names(tcbrat7) == "...11"] <- "PJ.cred.rec.bndes.finver"
names(tcbrat7)[names(tcbrat7) == "...12"] <- "PJ.cred.rec.bndes.fagro"
names(tcbrat7)[names(tcbrat7) == "...13"] <- "PJ.cred.rec.bndes.total"
names(tcbrat7)[names(tcbrat7) == "...14"] <- "PJ.otros"
names(tcbrat7)[names(tcbrat7) == "...15"] <- "PJ.total"
tcbrat7
#Eliminando empty values
#tcbrat7 <- tcbrat7[!is.na(tcbrat7$vendedor), ]
tcbrat7 <- tcbrat7[!is.na(tcbrat7$m), ]
#Con las variables que interesan
colnames(tcbrat7)
keeps <- c("m","PJ.crural.imp.merc",
           "PJ.crural.tarifa.reg",
           "PJ.crural.total",           
           "PJ.financ.inmob.imp.merc",
           "PJ.financ.inmob.tarifa.reg",
           "PJ.financ.inmob.total",     
           "PJ.cred.rec.bndes.kgirat",
           "PJ.cred.rec.bndes.finver",  
           "PJ.cred.rec.bndes.fagro",
           "PJ.cred.rec.bndes.total",
           "PJ.otros",
           "PJ.total")
tcbrasilt7 = tcbrat7[keeps]
#Variable mes numeral
tcbrasilt7$id[tcbrasilt7$m=="Jan"] <- c(1)
tcbrasilt7$id[tcbrasilt7$m=="Fev"] <- c(2)
tcbrasilt7$id[tcbrasilt7$m=="Mar"] <- c(3)
tcbrasilt7$id[tcbrasilt7$m=="Abr"] <- c(4)
tcbrasilt7$id[tcbrasilt7$m=="Mai"] <- c(5)
tcbrasilt7$id[tcbrasilt7$m=="Jun"] <- c(6)
tcbrasilt7$id[tcbrasilt7$m=="Jul"] <- c(7)
tcbrasilt7$id[tcbrasilt7$m=="Ago"] <- c(8)
tcbrasilt7$id[tcbrasilt7$m=="Set"] <- c(9)
tcbrasilt7$id[tcbrasilt7$m=="Out"] <- c(10)
tcbrasilt7$id[tcbrasilt7$m=="Nov"] <- c(11)
tcbrasilt7$id[tcbrasilt7$m=="Dez"] <- c(12)
tcbrasilt7$month[tcbrasilt7$m=="Jan"] <- c("Jan")
tcbrasilt7$month[tcbrasilt7$m=="Fev"] <- c("Feb")
tcbrasilt7$month[tcbrasilt7$m=="Mar"] <- c("Mar")
tcbrasilt7$month[tcbrasilt7$m=="Abr"] <- c("Apr")
tcbrasilt7$month[tcbrasilt7$m=="Mai"] <- c("May")
tcbrasilt7$month[tcbrasilt7$m=="Jun"] <- c("Jun")
tcbrasilt7$month[tcbrasilt7$m=="Jul"] <- c("Jul")
tcbrasilt7$month[tcbrasilt7$m=="Ago"] <- c("Aug")
tcbrasilt7$month[tcbrasilt7$m=="Set"] <- c("Sep")
tcbrasilt7$month[tcbrasilt7$m=="Out"] <- c("Oct")
tcbrasilt7$month[tcbrasilt7$m=="Nov"] <- c("Nov")
tcbrasilt7$month[tcbrasilt7$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt7$id.t <- with(tcbrasilt7, ave(rep(1, nrow(tcbrasilt7)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt7$year <- NA
tcbrasilt7$year[tcbrasilt7$id.t==1] <- c(2019)
tcbrasilt7$year[tcbrasilt7$id.t==2] <- c(2020)
tcbrasilt7$year[tcbrasilt7$id.t==3] <- c(2021)
tcbrasilt7$year[tcbrasilt7$id.t==4] <- c(2022)
tcbrasilt7$year[tcbrasilt7$id.t==5] <- c(2023)
tcbrasilt7$year[tcbrasilt7$id.t==6] <- c(2024)
tcbrasilt7$year[tcbrasilt7$id.t==7] <- c(2025)
tcbrasilt7$year[tcbrasilt7$id.t==8] <- c(2026)
tcbrasilt7$year[tcbrasilt7$id.t==9] <- c(2027)
tcbrasilt7$year[tcbrasilt7$id.t==10] <- c(2028)
tcbrasilt7$year[tcbrasilt7$id.t==11] <- c(2029)
tcbrasilt7$year[tcbrasilt7$id.t==12] <- c(2030)
#tcbrasilt5$w <- as.factor(tcbrasilt7$id)
#La variable "date"
tcbrasilt7$date <- format(lubridate::ymd(paste0(tcbrasilt7$year,tcbrasilt7$month,"01")), "%m-%Y")
#Nos quedamos con las variables que nos importan
colnames(tcbrasilt7)
keeps2 <- c("PJ.crural.imp.merc",
            "PJ.crural.tarifa.reg",
            "PJ.crural.total",           
            "PJ.financ.inmob.imp.merc",
            "PJ.financ.inmob.tarifa.reg",
            "PJ.financ.inmob.total",     
            "PJ.cred.rec.bndes.kgirat",
            "PJ.cred.rec.bndes.finver",
            "PJ.cred.rec.bndes.fagro",
            "PJ.cred.rec.bndes.total",
            "PJ.otros",
            "PJ.total")
tcbrasilt7 = tcbrasilt7[keeps2]
# Tabel 8 ---------------------------------------
###rm(list = ls())
library(readxl)
tcbrat8 <- read_excel("Brasilene.xlsx",sheet="Tabela 8", range = "A12:O1000")
# analyzing
colnames(tcbrat8)
# Rename column names
names(tcbrat8)[names(tcbrat8) == "...1"] <- "year"
names(tcbrat8)[names(tcbrat8) == "...2"] <- "m"
names(tcbrat8)[names(tcbrat8) == "...3"] <- "n"
names(tcbrat8)[names(tcbrat8) == "...4"] <- "crural.imp.merc"
names(tcbrat8)[names(tcbrat8) == "...5"] <- "crural.tarifa.reg"
names(tcbrat8)[names(tcbrat8) == "...6"] <- "crural.total"
names(tcbrat8)[names(tcbrat8) == "...7"] <- "financ.inmob.imp.merc"
names(tcbrat8)[names(tcbrat8) == "...8"] <- "financ.inmob.tarifa.reg"
names(tcbrat8)[names(tcbrat8) == "...9"] <- "financ.inmob.total"
names(tcbrat8)[names(tcbrat8) == "...10"] <- "cred.rec.bndes.finver"
names(tcbrat8)[names(tcbrat8) == "...11"] <- "cred.rec.bndes.fagro"
names(tcbrat8)[names(tcbrat8) == "...12"] <- "cred.rec.bndes.total"
names(tcbrat8)[names(tcbrat8) == "...13"] <- "microcredito"
names(tcbrat8)[names(tcbrat8) == "...14"] <- "otros"
names(tcbrat8)[names(tcbrat8) == "...15"] <- "total"
tcbrat8
#Eliminando empty values
#tcbrat8 <- tcbrat8[!is.na(tcbrat8$vendedor), ]
tcbrat8 <- tcbrat8[!is.na(tcbrat8$m), ]
#Con las variables que interesan
colnames(tcbrat8)
keeps <- c("m","crural.imp.merc",
           "crural.tarifa.reg",
           "crural.total",           
           "financ.inmob.imp.merc",
           "financ.inmob.tarifa.reg",
           "financ.inmob.total",     
           "cred.rec.bndes.finver",
           "cred.rec.bndes.fagro",
           "cred.rec.bndes.total",
           "microcredito",
           "otros",
           "total")
tcbrasilt8 = tcbrat8[keeps]
#Variable mes numeral
tcbrasilt8$id[tcbrasilt8$m=="Jan"] <- c(1)
tcbrasilt8$id[tcbrasilt8$m=="Fev"] <- c(2)
tcbrasilt8$id[tcbrasilt8$m=="Mar"] <- c(3)
tcbrasilt8$id[tcbrasilt8$m=="Abr"] <- c(4)
tcbrasilt8$id[tcbrasilt8$m=="Mai"] <- c(5)
tcbrasilt8$id[tcbrasilt8$m=="Jun"] <- c(6)
tcbrasilt8$id[tcbrasilt8$m=="Jul"] <- c(7)
tcbrasilt8$id[tcbrasilt8$m=="Ago"] <- c(8)
tcbrasilt8$id[tcbrasilt8$m=="Set"] <- c(9)
tcbrasilt8$id[tcbrasilt8$m=="Out"] <- c(10)
tcbrasilt8$id[tcbrasilt8$m=="Nov"] <- c(11)
tcbrasilt8$id[tcbrasilt8$m=="Dez"] <- c(12)
tcbrasilt8$month[tcbrasilt8$m=="Jan"] <- c("Jan")
tcbrasilt8$month[tcbrasilt8$m=="Fev"] <- c("Feb")
tcbrasilt8$month[tcbrasilt8$m=="Mar"] <- c("Mar")
tcbrasilt8$month[tcbrasilt8$m=="Abr"] <- c("Apr")
tcbrasilt8$month[tcbrasilt8$m=="Mai"] <- c("May")
tcbrasilt8$month[tcbrasilt8$m=="Jun"] <- c("Jun")
tcbrasilt8$month[tcbrasilt8$m=="Jul"] <- c("Jul")
tcbrasilt8$month[tcbrasilt8$m=="Ago"] <- c("Aug")
tcbrasilt8$month[tcbrasilt8$m=="Set"] <- c("Sep")
tcbrasilt8$month[tcbrasilt8$m=="Out"] <- c("Oct")
tcbrasilt8$month[tcbrasilt8$m=="Nov"] <- c("Nov")
tcbrasilt8$month[tcbrasilt8$m=="Dez"] <- c("Dec")
#Variable año
tcbrasilt8$id.t <- with(tcbrasilt8, ave(rep(1, nrow(tcbrasilt8)), id, FUN = seq_along))
#Cambiando los valores del id
tcbrasilt8$year <- NA
tcbrasilt8$year[tcbrasilt8$id.t==1] <- c(2019)
tcbrasilt8$year[tcbrasilt8$id.t==2] <- c(2020)
tcbrasilt8$year[tcbrasilt8$id.t==3] <- c(2021)
tcbrasilt8$year[tcbrasilt8$id.t==4] <- c(2022)
tcbrasilt8$year[tcbrasilt8$id.t==5] <- c(2023)
tcbrasilt8$year[tcbrasilt8$id.t==6] <- c(2024)
tcbrasilt8$year[tcbrasilt8$id.t==7] <- c(2025)
tcbrasilt8$year[tcbrasilt8$id.t==8] <- c(2026)
tcbrasilt8$year[tcbrasilt8$id.t==9] <- c(2027)
tcbrasilt8$year[tcbrasilt8$id.t==10] <- c(2028)
tcbrasilt8$year[tcbrasilt8$id.t==11] <- c(2029)
tcbrasilt8$year[tcbrasilt8$id.t==12] <- c(2030)
#tcbrasilt5$w <- as.factor(tcbrasilt8$id)
#La variable "date"
tcbrasilt8$date <- format(lubridate::ymd(paste0(tcbrasilt8$year,tcbrasilt8$month,"01")), "%m-%Y")

#Nos quedamos con las variables que nos importan
colnames(tcbrasilt8)
keeps2 <- c("crural.imp.merc",
            "crural.tarifa.reg",
            "crural.total",           
            "financ.inmob.imp.merc",
            "financ.inmob.tarifa.reg",
            "financ.inmob.total",     
            "cred.rec.bndes.finver",
            "cred.rec.bndes.fagro",
            "cred.rec.bndes.total",
            "microcredito",
            "otros",
            "total")
tcbrasilt8 = tcbrasilt8[keeps2]

# EMPRESAS TIPO CREDITO------------------------
# Tabel 27 ---------------------------------------
###rm(list = ls())
library(readxl)
tcbrat27 <- read_excel("Brasilene.xlsx",sheet="Tabela 27", range = "A12:O1000")

# analyzing
colnames(tcbrat27)
# Rename column names
names(tcbrat27)[names(tcbrat27) == "...1"] <- "year"
names(tcbrat27)[names(tcbrat27) == "...2"] <- "m"
names(tcbrat27)[names(tcbrat27) == "...3"] <- "n"
names(tcbrat27)[names(tcbrat27) == "...4"] <- "EMP.equi.mpme"
names(tcbrat27)[names(tcbrat27) == "...5"] <- "EMP.equi.grande"
names(tcbrat27)[names(tcbrat27) == "...6"] <- "EMP.equi.total"
names(tcbrat27)[names(tcbrat27) == "...7"] <- "EMP.defec.mpme"
names(tcbrat27)[names(tcbrat27) == "...8"] <- "EMP.defec.grande"
names(tcbrat27)[names(tcbrat27) == "...9"] <- "EMP.defec.total"
names(tcbrat27)[names(tcbrat27) == "...10"] <- "EMP.maybal.riesgo.mpme"
names(tcbrat27)[names(tcbrat27) == "...11"] <- "EMP.maybal.riesgo.grande"
names(tcbrat27)[names(tcbrat27) == "...12"] <- "EMP.maybal.riesgo.total"
tcbrat27

#Eliminando empty values
#tcbrat27 <- tcbrat27[!is.na(tcbrat27$vendedor), ]
tcbrat27 <- tcbrat27[!is.na(tcbrat27$m), ]

#Con las variables que interesan
colnames(tcbrat27)

keeps <- c("m","EMP.equi.mpme",
           "EMP.equi.grande",
           "EMP.equi.total",
           "EMP.defec.mpme",
           "EMP.defec.grande",        
           "EMP.defec.total",
           "EMP.maybal.riesgo.mpme",
           "EMP.maybal.riesgo.grande",
           "EMP.maybal.riesgo.total")

tcbrasilt27 = tcbrat27[keeps]

#Variable mes numeral
tcbrasilt27$id[tcbrasilt27$m=="Jan"] <- c(1)
tcbrasilt27$id[tcbrasilt27$m=="Fev"] <- c(2)
tcbrasilt27$id[tcbrasilt27$m=="Mar"] <- c(3)
tcbrasilt27$id[tcbrasilt27$m=="Abr"] <- c(4)
tcbrasilt27$id[tcbrasilt27$m=="Mai"] <- c(5)
tcbrasilt27$id[tcbrasilt27$m=="Jun"] <- c(6)
tcbrasilt27$id[tcbrasilt27$m=="Jul"] <- c(7)
tcbrasilt27$id[tcbrasilt27$m=="Ago"] <- c(8)
tcbrasilt27$id[tcbrasilt27$m=="Set"] <- c(9)
tcbrasilt27$id[tcbrasilt27$m=="Out"] <- c(10)
tcbrasilt27$id[tcbrasilt27$m=="Nov"] <- c(11)
tcbrasilt27$id[tcbrasilt27$m=="Dez"] <- c(12)

tcbrasilt27$month[tcbrasilt27$m=="Jan"] <- c("Jan")
tcbrasilt27$month[tcbrasilt27$m=="Fev"] <- c("Feb")
tcbrasilt27$month[tcbrasilt27$m=="Mar"] <- c("Mar")
tcbrasilt27$month[tcbrasilt27$m=="Abr"] <- c("Apr")
tcbrasilt27$month[tcbrasilt27$m=="Mai"] <- c("May")
tcbrasilt27$month[tcbrasilt27$m=="Jun"] <- c("Jun")
tcbrasilt27$month[tcbrasilt27$m=="Jul"] <- c("Jul")
tcbrasilt27$month[tcbrasilt27$m=="Ago"] <- c("Aug")
tcbrasilt27$month[tcbrasilt27$m=="Set"] <- c("Sep")
tcbrasilt27$month[tcbrasilt27$m=="Out"] <- c("Oct")
tcbrasilt27$month[tcbrasilt27$m=="Nov"] <- c("Nov")
tcbrasilt27$month[tcbrasilt27$m=="Dez"] <- c("Dec")

#Variable año
tcbrasilt27$id.t <- with(tcbrasilt27, ave(rep(1, nrow(tcbrasilt27)), id, FUN = seq_along))

#Cambiando los valores del id
tcbrasilt27$year <- NA
tcbrasilt27$year[tcbrasilt27$id.t==1] <- c(2019)
tcbrasilt27$year[tcbrasilt27$id.t==2] <- c(2020)
tcbrasilt27$year[tcbrasilt27$id.t==3] <- c(2021)
tcbrasilt27$year[tcbrasilt27$id.t==4] <- c(2022)
tcbrasilt27$year[tcbrasilt27$id.t==5] <- c(2023)
tcbrasilt27$year[tcbrasilt27$id.t==6] <- c(2024)
tcbrasilt27$year[tcbrasilt27$id.t==7] <- c(2025)
tcbrasilt27$year[tcbrasilt27$id.t==8] <- c(2026)
tcbrasilt27$year[tcbrasilt27$id.t==9] <- c(2027)
tcbrasilt27$year[tcbrasilt27$id.t==10] <- c(2028)
tcbrasilt27$year[tcbrasilt27$id.t==11] <- c(2029)
tcbrasilt27$year[tcbrasilt27$id.t==12] <- c(2030)

#tcbrasilt5$w <- as.factor(tcbrasilt27$id)

#La variable "date"
tcbrasilt27$date <- format(lubridate::ymd(paste0(tcbrasilt27$year,tcbrasilt27$month,"01")), "%m-%Y")

#Nos quedamos con las variables que nos importan
colnames(tcbrasilt27)
keeps2 <- c("EMP.equi.mpme",
            "EMP.equi.grande",
            "EMP.equi.total",
            "EMP.defec.mpme",
            "EMP.defec.grande",        
            "EMP.defec.total",
            "EMP.maybal.riesgo.mpme",
            "EMP.maybal.riesgo.grande",
            "EMP.maybal.riesgo.total")

tcbrasilt27 = tcbrasilt27[keeps2]


# cbinPad function ------------------------------
cbindPad <- function(...){
  args <- list(...)
  n <- sapply(args,nrow)
  mx <- max(n)
  pad <- function(x, mx){
    if (nrow(x) < mx){
      nms <- colnames(x)
      padTemp <- matrix(NA, mx - nrow(x), ncol(x))
      colnames(padTemp) <- nms
      if (ncol(x)==0) {
        return(padTemp)
      } else {
        return(rbind(x,padTemp))
      }
    }
    else{
      return(x)
    }
  }
  rs <- lapply(args,pad,mx)
  return(do.call(cbind,rs))
}

# Adding data horizontally ------------------------------
tcbrasilm1 <- cbindPad(tcbrasilt5,
                       tcbrasilt5a,
                       tcbrasilt5b)

tcbrasilm2 <- cbindPad(tcbrasilm1,
                       tcbrasilt6,
                       tcbrasilt6a,
                       tcbrasilt6b)

tcbrasil <- cbindPad(tcbrasilm2,
                     tcbrasilt7,
                     tcbrasilt8,
                     tcbrasilt27)

write.csv(tcbrasil,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Brasil\\tcbrasil.csv", row.names = FALSE)

# Agregando variables -----------------------------------
colnames(tcbrasil)
tcbrasil$ktrabajo <- tcbrasil$PJ.capital.trabajoT
tcbrasil$Leasing <- tcbrasil$PJ.arrend.total+tcbrasil$arrend.total
tcbrasil$TarjetaCredito <- tcbrasil$PJ.tarjcredito.total+tcbrasil$tcredito.total
tcbrasil$Personal <- tcbrasil$cred.personal.total
tcbrasil$Hipotecario <- tcbrasil$PJ.financ.inmob.total+tcbrasil$financ.inmob.total
tcbrasil$Consumo <- tcbrasil$PJ.adq.vehiculos+tcbrasil$PJ.adq.obienes+tcbrasil$adq.vehiculos+tcbrasil$adq.obienes
tcbrasil$Microcredito <- tcbrasil$microcredito
tcbrasil$Pyme <- tcbrasil$EMP.equi.mpme
tcbrasil$Empresarial <- tcbrasil$EMP.equi.grande
tcbrasil$Comercial <- tcbrasil$Empresarial+tcbrasil$Pyme

keeps3 <- c("date",
            "Leasing",
            "TarjetaCredito",           
            "Personal",
            "Hipotecario",
            "Microcredito",
            "Consumo",
            "Pyme",
            "Empresarial",
            "Comercial")

tcbrasilmo <- tcbrasil[keeps3]

#Nombre de las filas
row.names(tcbrasilmo) <- tcbrasilmo$date

# Add datasets vertically-----------------------------------
tcbrasil <- rbind(tcbrasilmodic,tcbrasilmo)

#Variable pais
tcbrasil$Pais <- "Brasil"

# Variables para el panel
tcbrasil$Gobierno <- NA

# Exportando --------------------------------------------
write.csv(tcbrasilmof,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Brasil\\tcbrasilmof.csv", row.names = FALSE)
write.csv(tcbrasilmof,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcbrasilmof.csv", row.names = FALSE)

# graphs ------------------------------

library(ggplot2)
library(dplyr)
library(hrbrthemes)
colnames(tcbrasilm)
#
HipotecarioBrasil <- tcbrasil%>%
  tail(10000) %>%
  ggplot( aes(x=date, y=Hipotecario)) +
  geom_line() +
  geom_point() +
  ggtitle("BRASIL crédito inmobiliario") +
  xlab("Date") + ylab("MM reales")
HipotecarioBrasil

#
BrasilPersonal <- tcbrasil%>%
  tail(10000) %>%
  ggplot( aes(x=date, y=Personal)) +
  geom_line() +
  geom_point() +
  ggtitle("BRASIL crédito personal") +
  xlab("Date") + ylab("MM reales")
BrasilPersonal

#
BrasilTarjetaCredito <- tcbrasil%>%
  tail(10000) %>%
  ggplot( aes(x=date, y=TarjetaCredito)) +
  geom_line() +
  geom_point() +
  ggtitle("BRASIL tarjeta de crédito") +
  xlab("Date") + ylab("MM reales")
BrasilTarjetaCredito

#
BrasilConsumo <- tcbrasil%>%
  tail(10000) %>%
  ggplot( aes(x=date, y=Consumo)) +
  geom_line() +
  geom_point() +
  ggtitle("BRASIL crédito de consumo") +
  xlab("Date") + ylab("MM reales")
BrasilConsumo

save(tcbrasil,file="tcbrasil.Rda")

#################################################################
########################BOLIVIA##################################
#################################################################
# TIPO DE CREDITO ---------------------------------------
# Importando datos ---------------------------------------------
##rm(list = ls())
#library(httr)
#list <- c("https://www.asoban.bo/system/publications/pdfs/000/000/178/original/Rep_Cart_jul-20.pdf")
#for (i in 1:length(list)) {
#download.file(list[i], destfile = paste0("Bolivia", i, ".xls"),  mode="wb")
#}
# reading the file ---------------------------------------------
#rm(list = ls())
library(readxl)
tcbol <- read_excel("FinancialSystemBolivia.xlsx" ,sheet="TypeCredit", range = "A2:I1900")
# Renombrando variables --------------------------------------------
library(tidyverse) #Cambiando de nombres las variables
colnames(tcbol) # get column names
# Rename column names
names(tcbol)[names(tcbol) == "...1"] <- "fecha"
names(tcbol)[names(tcbol) == "Empresarial"] <- "Empresarial"
names(tcbol)[names(tcbol) == "Pyme"] <- "Pyme"
names(tcbol)[names(tcbol) == "Microcredito"] <- "Microcredito"
names(tcbol)[names(tcbol) == "Hipotecaria"] <- "Hipotecario"
names(tcbol)[names(tcbol) == "Hipotecaria de vivienda social"] <- "chiposocial"
names(tcbol)[names(tcbol) == "Hipotecaria (no social)"] <- "chiponosocial"
names(tcbol)[names(tcbol) == "Consumo"] <- "Consumo"
tcbol
#Con las variables que interesan ---------------------------------------------
keeps <- c("fecha",
           "Empresarial", 
           "Pyme", 
           "Microcredito", 
           "Hipotecario", 
           "Consumo")
tcbolivia = tcbol[keeps]
# Variable fecha --------------------------------------------
#Format date
#install.packages("openxlsx")
#library(openxlsx)
tcbolivia$fecha <- as.Date(tcbolivia$fecha, "%Y/%m/%d")
class(tcbolivia$fecha)
#Variable pais
tcbolivia$Pais <- "Bolivia"
# Variables para el panel
tcbolivia$Leasing <- NA
tcbolivia$Comercial <- NA
tcbolivia$Gobierno <- NA
tcbolivia$Personal <- NA
tcbolivia$TarjetaCredito <- NA

#Para que las matrices sean del mismo tamaño
tcbolivia$id <- rownames(tcbolivia)
tcbolivia$id <- as.numeric(tcbolivia$id)
tcbolivia <-tcbolivia[tcbolivia$id <= 33,]
# Exportando --------------------------------------------
write.csv(tcboliviam,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Bolivia\\tcboliviam.csv", row.names = FALSE)
write.csv(tcboliviam,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcboliviam.csv", row.names = FALSE)

# Graphs daily dates------------------------------------------------
#install.packages("ggplot2")
#install.packages("hrbrthemes")
library(ggplot2)
library(dplyr)
library(hrbrthemes)
#colnames(tcbolivia)
Hipotecario <- tcbolivia %>%
  tail(10000) %>%
  ggplot(aes(x=fecha, y=Hipotecario)) +
  geom_line() +
  geom_point() +
  ggtitle("BOLIVIA crédito inmobiliario") +
  xlab("Date") + ylab("MM dolares")
Hipotecario 

#
Consumo <- tcbolivia %>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Consumo)) +
  geom_line() +
  geom_point() + 
  ggtitle("BOLIVIA crédito de consumo") +
  xlab("Date") + ylab("MM de dolares")
Consumo

#
Empresarial <- tcbolivia %>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Empresarial)) +
  geom_line() +
  geom_point() +
  ggtitle("BOLIVIA credito empresarial") +
  xlab("Date") + ylab("MM de dolares")
Empresarial

save(tcbolivia,file="tcbolivia.Rda")

#################################################################
##########################CHILE##################################
#################################################################
# Importando datos -----------------
##rm(list = ls())
#library(httr)
#list <- c("https://www.bestsbif.net/best-cmf/#!/cuadros/SBIF_CCS_MTO_TRMS_DAYL?FechaFin")
#for (i in 1:length(list)) {
#  download.file(list[i], destfile = paste0("Chile", i, ".xls"),  mode="wb")
#}

#Los datos se estan descargando aparte hay que automatizar

# Reading the file CONSUMO-----------------
#rm(list = ls())
library(readxl)
tcchi <- read_excel("SBIF_CCS_MTO_TRMS_DAYL_V_20181009175014.xlsx",
                    sheet="SBIF_CCS_MTO_TRMS_DAYL", 
                    range = "A1377:F5000")

# Renombrando variables CONSUMO---
library(tidyverse) #Cambiando de nombres las variables
colnames(tcchi) # get column names

# Rename column names
names(tcchi)[names(tcchi) == "43102"] <- "fecha"
names(tcchi)[names(tcchi) == "26940338.0384001"] <- "Hasta1500UF"
names(tcchi)[names(tcchi) == "3847184.4845"] <- "Hasta3000UF"
names(tcchi)[names(tcchi) == "967987.552"] <- "Hasta5000UF"
names(tcchi)[names(tcchi) == "1068073.6251"] <- "Mas5000UF"
names(tcchi)[names(tcchi) == "32823583.7000001"] <- "Consumo"
#

#Con las variables que interesan
keeps <- c("fecha",
           "Consumo")
tcchile = tcchi[keeps]

# Eliminando columnas vacias CONSUMO---
tcchile <- na.omit(tcchile)
# Nombre de las filas CONSUMO---
row.names(tcchile) <- tcchile$fecha

# Datos mensuales CONSUMO---
library(dplyr)
#Encontrar el ultimo dia segun mes
#Creando variables year, month and day
tcchile$month <- format(tcchile$fecha, "%m")
tcchile$year <- format(tcchile$fecha, "%Y")
tcchile$day <- format(tcchile$fecha, "%D")
tcchile$my <- format(as.Date(tcchile$fecha,format="%Y-%m-%d"),"%Y-%m")

#Encontrando el valor maximo
tcchile$maxvalue <- ave(tcchile$fecha, tcchile$my, FUN = max)

#Mantener los valores finales
library(dplyr)
tcchilem <- filter(tcchile, maxvalue==fecha)

keeps4 <- c("fecha",
            "Consumo")
tcchile_con = tcchilem[keeps4]

# Reading the file HIPOTECARIA-----------------
##rm(list = ls())
library(readxl)
tcchi <- read_excel("SBIF_CHV_MTO_TRMS_DAYL_V_20181009175014.xlsx",
                    sheet="SBIF_CHV_MTO_TRMS_DAYL", 
                    range = "A1219:F5000")

# Renombrando variables HIPOTECARIA ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tcchi) # get column names

# Rename column names
names(tcchi)[names(tcchi) == "43102"] <- "fecha"
names(tcchi)[names(tcchi) == "5764461.77730008"] <- "Hasta1500UF"
names(tcchi)[names(tcchi) == "12041440.5578002"] <- "Hasta3000UF"
names(tcchi)[names(tcchi) == "7436554.31890003"] <- "Hasta5000UF"
names(tcchi)[names(tcchi) == "9869763.39650004"] <- "Mas5000UF"
names(tcchi)[names(tcchi) == "35112220.0505003"] <- "Hipotecario"
#

#Con las variables que interesan
keeps <- c("fecha",
           "Hipotecario")
tcchile = tcchi[keeps]

# Eliminando columnas vacias HIPOTECARIA ---
tcchile <- na.omit(tcchile)
# Nombre de las filas HIPOTECARIA ---
row.names(tcchile) <- tcchile$fecha

# Datos mensuales HIPOTECARIA---
library(dplyr)
# Encontrar el ultimo dia segun mes
# Creando variables year, month and day
tcchile$month <- format(tcchile$fecha, "%m")
tcchile$year <- format(tcchile$fecha, "%Y")
tcchile$day <- format(tcchile$fecha, "%D")
tcchile$my <- format(as.Date(tcchile$fecha,format="%Y-%m-%d"),"%Y-%m")

# Encontrando el valor maximo
tcchile$maxvalue <- ave(tcchile$fecha, tcchile$my, FUN = max)

# Mantener los valores finales
library(dplyr)
tcchilem <- filter(tcchile, maxvalue==fecha)

keeps4 <- c("Hipotecario")
tcchile_hipo = tcchilem[keeps4]

# Reading the file COMERCIAL--------------------------------
##rm(list = ls())
library(readxl)
tcchi <- read_excel("SBIF_CCO_MTO_TRMS_DAYL_V_20181009175014.xlsx",
                    sheet="SBIF_CCO_MTO_TRMS_DAYL", 
                    range = "A1457:F5000")

# Renombrando variables COMERCIAL ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tcchi) # get column names

# Rename column names
names(tcchi)[names(tcchi) == "43102"] <- "fecha"
names(tcchi)[names(tcchi) == "5950805.02350002"] <- "Hasta1500UF"
names(tcchi)[names(tcchi) == "4566507.9581"] <- "Hasta3000UF"
names(tcchi)[names(tcchi) == "4841793.26710003"] <- "Hasta5000UF"
names(tcchi)[names(tcchi) == "100836709.0031"] <- "Mas5000UF"
names(tcchi)[names(tcchi) == "116195815.2518"] <- "Comercial"
#

#Con las variables que interesan
keeps <- c("fecha",
           "Comercial")
tcchile = tcchi[keeps]

# Eliminando columnas vacias COMERCIAL ---
tcchile <- na.omit(tcchile)
# Nombre de las filas COMERCIAL ---
row.names(tcchile) <- tcchile$fecha
# Variables de la base ---
#tcchile$Microcredito=0
#tcchile$Pyme=0
#tcchile$Empresarial=0
#tcchile$Leasing =0
#tcchile$Gobierno =0
#tcchile$Personal =0
#tcchile$TarjetaCredito =0

# Datos mensuales COMERCIAL---
library(dplyr)
# Encontrar el ultimo dia segun mes
# Creando variables year, month and day
tcchile$month <- format(tcchile$fecha, "%m")
tcchile$year <- format(tcchile$fecha, "%Y")
tcchile$day <- format(tcchile$fecha, "%D")
tcchile$my <- format(as.Date(tcchile$fecha,format="%Y-%m-%d"),"%Y-%m")

# Encontrando el valor maximo
tcchile$maxvalue <- ave(tcchile$fecha, tcchile$my, FUN = max)

# Mantener los valores finales
library(dplyr)
tcchilem <- filter(tcchile, maxvalue==fecha)

keeps4 <- c("Comercial")
tcchile_comercial = tcchilem[keeps4]

# Variable pais ------------------
tcchile_comercial$Pais <- "Chile"

#Nombre de las filas
row.names(tcchile_comercial) <- tcchile_comercial$fecha

# cbinPad function ------------------------------
cbindPad <- function(...){
  args <- list(...)
  n <- sapply(args,nrow)
  mx <- max(n)
  pad <- function(x, mx){
    if (nrow(x) < mx){
      nms <- colnames(x)
      padTemp <- matrix(NA, mx - nrow(x), ncol(x))
      colnames(padTemp) <- nms
      if (ncol(x)==0) {
        return(padTemp)
      } else {
        return(rbind(x,padTemp))
      }
    }
    else{
      return(x)
    }
  }
  rs <- lapply(args,pad,mx)
  return(do.call(cbind,rs))
}

# Uniendo los archivos independientes ------------------
tcchilem1 <- cbindPad(tcchile_con,
                      tcchile_hipo,
                      tcchile_comercial)

# New information june2020-----------------
# Informacion de Tarjetas de credito, credito empresarial y leasing (son archivos mensuales) --
##rm(list = ls())
library(readxl)
tcchi <- read_excel("Info_Fin_7871_19120.xlsx",
                    sheet="Activos Bancos 2", 
                    range = "A13:Z33")

# Renombrando variables---
library(tidyverse) #Cambiando de nombres las variables
colnames(tcchi) # get column names

# Rename column names
names(tcchi)[names(tcchi) == "...14"] <- "Empresas"
names(tcchi)[names(tcchi) == "...16"] <- "Personas"
names(tcchi)[names(tcchi) == "...18"] <- "Consumo"
names(tcchi)[names(tcchi) == "...20"] <- "TarjetaCredito"
names(tcchi)[names(tcchi) == "...23"] <- "Vivienda"
#
#Con las variables que interesan
keeps <- c("Empresas",
           "Personas",
           "Consumo",
           "TarjetaCredito",
           "Vivienda")
tcchile = tcchi[keeps]
# Eliminando columnas vacias---
tcchile <- na.omit(tcchile)
#Encontrando el valor maximo
tcchile$maxvalue <- ave(tcchile$Vivienda, FUN = max)
#Mantener los valores finales
library(dplyr)
tcchilem0920 <- filter(tcchile, maxvalue==Vivienda)
#Variable fecha
tcchilem0920$month <- "Jun"
tcchilem0920$year <- 2020
tcchilem0920$fecha <- format(lubridate::ymd(paste0(tcchilem0920$year,tcchilem0920$month,"01")), "%m-%Y")
# Nombre de las filas---
row.names(tcchilem0920) <- tcchilem0920$fecha


# Add datasets vertically-----------------------------------
tcchilem2 <- rbind(tcchilem0920,tcchilem0820,tcchilem0720,tcchilem0620,
                   tcchilem0520,tcchilem0420,tcchilem0320,tcchilem0220,
                   tcchilem0120,tcchilem1219,tcchilem1119,tcchilem1019,
                   tcchilem0919,tcchilem0819,tcchilem0719,tcchilem0619,
                   tcchilem0519,tcchilem0419,tcchilem0319,tcchilem0219,
                   tcchilem0119,tcchilem1218,tcchilem1118,tcchilem1018,
                   tcchilem0918,tcchilem0818,tcchilem0718,tcchilem0618,
                   tcchilem0518,tcchilem0418,tcchilem0318,tcchilem0218,
                   tcchilem0118)
# Uniendo los archivos independientes horizontalmente ------------------
tcchilem1 <- cbindPad(tcchilem1,
                      tcchilem2)
# Exportando --------------------------------------------
write.csv(tcchilem1,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcchilem1.csv", row.names = FALSE)
write.csv(tcchilem1,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Chile\\tcchilem1.csv", row.names = FALSE)

# Graphs daily dates------------------------------------------------
#install.packages("ggplot2")
#install.packages("hrbrthemes")
library(ggplot2)
library(dplyr)
library(hrbrthemes)
#colnames(tcchile)
CreditoHipotecario <- tcchilem1 %>%
  tail(10000) %>%
  ggplot(aes(x=fecha, y=Hipotecario)) +
  geom_line() +
  geom_point() +
  ggtitle("CHILE crédito hipotecario") +
  xlab("Date") + ylab("MM de UF")
CreditoHipotecario

#
Comercial <- tcchilem1 %>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Comercial)) +
  geom_line() +
  geom_point() +
  ggtitle("CHILE crédito comercial") +
  xlab("Date") + ylab("MM de UF")
Comercial

#
Consumo <- tcchilem1 %>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Consumo)) +
  geom_line() +
  geom_point() +
  ggtitle("CHILE crédito de consumo") +
  xlab("Date") + ylab("MM de UF")
Consumo

save(tcchilem,file="tcchile.Rda")

#################################################################
#######################COLOMBIA##################################
#################################################################
# TIPO DE CREDITO ---------------------------------------
# Instalando paquetes ---------------------------------------------
# Importando datos ---------------------------------------------
#rm(list = ls())
library(httr)
list <- c("https://www.superfinanciera.gov.co/descargas/institucional/pubFile1048244/ca072020.xlsx")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Colombia2", ".xls"),  mode="wb")
}

###rm(list = ls())
library(httr)
list <- c("https://www.superfinanciera.gov.co/descargas?com=institucional&name=pubFile1013884&downloadname=desembol_bco.xls")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Colombia1", ".xls"),  mode="wb")
}

# Primer archivo-------------------------------------
# Reading the file ---
#rm(list = ls())
library(readxl)
tccol <- read_excel("ca072020.xlsx" ,sheet="C5", range = "B31:AF5000")
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "43099"] <- "fecha"
names(tccol)[names(tccol) == "239657.66876000003"] <- "Comercial"
names(tccol)[names(tccol) == "124362.93369000003"] <- "Consumo"
names(tccol)[names(tccol) == "55874.297179999994"] <- "Hipotecario"
names(tccol)[names(tccol) == "12128.739150000003"] <- "Microcredito"
tccol
# Con las variables que interesan ---
keeps <- c("fecha",
           "Comercial", 
           "Consumo", 
           "Microcredito", 
           "Hipotecario")
tccolombia = tccol[keeps]
# Eliminando columnas vacias ---
tccolombiam <- na.omit(tccolombia)
# Variable fecha ---
#Format date
library(openxlsx)
tccolombiam$fecha=openxlsx::convertToDate(tccolombiam$fecha)
# Nombre de las filas --
#row.names(tccolombia) <- tccolombia$fecha
#Variable pais
tccolombiam$Pais <- "Colombia"

# Segundo archivo-------------------------------------
##rm(list = ls())
# 1 banco ------------------------------------------
# Reading the file ---
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-1 bogotá", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:189), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo1"
names(tccol)[names(tccol) == "...6"] <- "Microcredito1"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito1"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm1"
tccol
# Con las variables que interesan ---
keeps <- c("fecha",
           "Consumo1", 
           "TarjetasCredito1", 
           "Microcredito1")
tccolombia1 = tccol[keeps]
# Eliminando columnas vacias ---
cc=is.na(tccolombia1$Consumo1)
m=which(cc==c("TRUE"))
tccolombia1=tccolombia1[-m,]
# Variable fecha ---
#Format date
library(openxlsx)
tccolombia1$fecha=openxlsx::convertToDate(tccolombia1$fecha)
#De character to numeric
tccolombia1$Consumo1 <- as.numeric(tccolombia1$Consumo1)
tccolombia1$Microcredito1 <- as.numeric(tccolombia1$Microcredito1)
tccolombia1$TarjetasCredito1 <- as.numeric(tccolombia1$TarjetasCredito1)
# 2 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-2 popular", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:189), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo2"
names(tccol)[names(tccol) == "...6"] <- "Microcredito2"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito2"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm2"
tccol
# Con las variables que interesan ---
keeps <- c("Consumo2", 
           "TarjetasCredito2", 
           "Microcredito2")
tccolombia2 = tccol[keeps]
# Eliminando columnas vacias ---
cc=is.na(tccolombia2$Consumo2)
m=which(cc==c("TRUE"))
tccolombia2=tccolombia2[-m,]
# Variable fecha ---
#De character to numeric
tccolombia2$Consumo2 <- as.numeric(tccolombia2$Consumo2)
tccolombia2$Microcredito2 <- as.numeric(tccolombia2$Microcredito2)
tccolombia2$TarjetasCredito2 <- as.numeric(tccolombia2$TarjetasCredito2)
# 3 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-6 itaú", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:189), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo3"
names(tccol)[names(tccol) == "...6"] <- "Microcredito3"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito3"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm3"
tccol
# Con las variables que interesan ---
keeps <- c("Consumo3", 
           "TarjetasCredito3", 
           "Microcredito3")
tccolombia3 = tccol[keeps]
# Eliminando columnas vacias ---
cc=is.na(tccolombia3$Consumo3)
m=which(cc==c("TRUE"))
tccolombia3=tccolombia3[-m,]
# Variable fecha ---
#De character to numeric
tccolombia3$Consumo3 <- as.numeric(tccolombia3$Consumo3)
tccolombia3$Microcredito3 <- as.numeric(tccolombia3$Microcredito3)
tccolombia3$TarjetasCredito3 <- as.numeric(tccolombia3$TarjetasCredito3)
# 4 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-7 bancolombia", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:189), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo4"
names(tccol)[names(tccol) == "...6"] <- "Microcredito4"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito4"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm4"
tccol
# Con las variables que interesan ---
keeps <- c("Consumo4", 
           "TarjetasCredito4", 
           "Microcredito4")
tccolombia4 = tccol[keeps]
# Eliminando columnas vacias ---
cc=is.na(tccolombia4$Consumo4)
m=which(cc==c("TRUE"))
tccolombia4=tccolombia4[-m,]
# Variable fecha ---
#De character to numeric
tccolombia4$Consumo4 <- as.numeric(tccolombia4$Consumo4)
tccolombia4$Microcredito4 <- as.numeric(tccolombia4$Microcredito4)
tccolombia4$TarjetasCredito4 <- as.numeric(tccolombia4$TarjetasCredito4)
# 5 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-9 citibank", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:189), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo5"
names(tccol)[names(tccol) == "...6"] <- "Microcredito5"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito5"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm5"
names(tccol)[names(tccol) == "...9"] <- "Ordinario5"
tccol
# Eliminando columnas vacias ---
cc=is.na(tccol$Ordinario5)
m=which(cc==c("TRUE"))
tccol=tccol[-m,]
# Con las variables que interesan ---
keeps <- c("Consumo5", 
           "TarjetasCredito5", 
           "Microcredito5")
tccolombia5 = tccol[keeps]
#De character to numeric
tccolombia5$Consumo5 <- as.numeric(tccolombia5$Consumo5)
tccolombia5$Microcredito5 <- as.numeric(tccolombia5$Microcredito5)
tccolombia5$TarjetasCredito5 <- as.numeric(tccolombia5$TarjetasCredito5)
# 6 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-12 gnb sudameris", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:189), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo6"
names(tccol)[names(tccol) == "...6"] <- "Microcredito6"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito6"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm6"
tccol
# Con las variables que interesan ---
keeps <- c("Consumo6", 
           "TarjetasCredito6", 
           "Microcredito6")
tccolombia6 = tccol[keeps]
# Eliminando columnas vacias ---
cc=is.na(tccolombia6$Consumo6)
m=which(cc==c("TRUE"))
tccolombia6=tccolombia6[-m,]
#De character to numeric
tccolombia6$Consumo6 <- as.numeric(tccolombia6$Consumo6)
tccolombia6$Microcredito6 <- as.numeric(tccolombia6$Microcredito6)
tccolombia6$TarjetasCredito6 <- as.numeric(tccolombia6$TarjetasCredito6)
# 7 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-13 bbva", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:189), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo7"
names(tccol)[names(tccol) == "...6"] <- "Microcredito7"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito7"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm7"
tccol
# Con las variables que interesan ---
keeps <- c("Consumo7", 
           "TarjetasCredito7", 
           "Microcredito7")
tccolombia7 = tccol[keeps]
# Eliminando columnas vacias ---
cc=is.na(tccolombia7$Consumo7)
m=which(cc==c("TRUE"))
tccolombia7=tccolombia7[-m,]
#De character to numeric
tccolombia7$Consumo7 <- as.numeric(tccolombia7$Consumo7)
tccolombia7$Microcredito7 <- as.numeric(tccolombia7$Microcredito7)
tccolombia7$TarjetasCredito7 <- as.numeric(tccolombia7$TarjetasCredito7)
# 8 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-23 occidente", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:189), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo8"
names(tccol)[names(tccol) == "...6"] <- "Microcredito8"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito8"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm8"
tccol
# Con las variables que interesan ---
keeps <- c("Consumo8", 
           "TarjetasCredito8", 
           "Microcredito8")
tccolombia8 = tccol[keeps]
# Eliminando columnas vacias ---
cc=is.na(tccolombia8$Consumo8)
m=which(cc==c("TRUE"))
tccolombia8=tccolombia8[-m,]
#De character to numeric
tccolombia8$Consumo8 <- as.numeric(tccolombia8$Consumo8)
tccolombia8$Microcredito8 <- as.numeric(tccolombia8$Microcredito8)
tccolombia8$TarjetasCredito8 <- as.numeric(tccolombia8$TarjetasCredito8)
# 9 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-30 bcsc", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:189), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo9"
names(tccol)[names(tccol) == "...6"] <- "Microcredito9"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito9"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm9"
tccol
# Con las variables que interesan ---
keeps <- c("Consumo9", 
           "TarjetasCredito9", 
           "Microcredito9")
tccolombia9 = tccol[keeps]
# Eliminando columnas vacias ---
cc=is.na(tccolombia9$Consumo9)
m=which(cc==c("TRUE"))
tccolombia9=tccolombia9[-m,]
#De character to numeric
tccolombia9$Consumo9 <- as.numeric(tccolombia9$Consumo9)
tccolombia9$Microcredito9 <- as.numeric(tccolombia9$Microcredito9)
tccolombia9$TarjetasCredito9 <- as.numeric(tccolombia9$TarjetasCredito9)
# 10 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-39 davivienda", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:189), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo10"
names(tccol)[names(tccol) == "...6"] <- "Microcredito10"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito10"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm10"
tccol
# Con las variables que interesan ---
keeps <- c("Consumo10", 
           "TarjetasCredito10", 
           "Microcredito10")
tccolombia10 = tccol[keeps]
# Eliminando columnas vacias ---
cc=is.na(tccolombia10$Consumo10)
m=which(cc==c("TRUE"))
tccolombia10=tccolombia10[-m,]
#De character to numeric
tccolombia10$Consumo10 <- as.numeric(tccolombia10$Consumo10)
tccolombia10$Microcredito10 <- as.numeric(tccolombia10$Microcredito10)
tccolombia10$TarjetasCredito10 <- as.numeric(tccolombia10$TarjetasCredito10)
# 11 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-42 colpatria", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:189), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo11"
names(tccol)[names(tccol) == "...6"] <- "Microcredito11"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito11"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm11"
tccol
# Con las variables que interesan ---
keeps <- c("Consumo11", 
           "TarjetasCredito11", 
           "Microcredito11")
tccolombia11 = tccol[keeps]
# Eliminando columnas vacias ---
cc=is.na(tccolombia11$Consumo11)
m=which(cc==c("TRUE"))
tccolombia11=tccolombia11[-m,]
#De character to numeric
tccolombia11$Consumo11 <- as.numeric(tccolombia11$Consumo11)
tccolombia11$Microcredito11 <- as.numeric(tccolombia11$Microcredito11)
tccolombia11$TarjetasCredito11 <- as.numeric(tccolombia11$TarjetasCredito11)
# 12 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-43 banco agrario", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:189), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo12"
names(tccol)[names(tccol) == "...6"] <- "Microcredito12"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito12"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm12"
tccol
# Con las variables que interesan ---
keeps <- c("Consumo12", 
           "TarjetasCredito12", 
           "Microcredito12")
tccolombia12 = tccol[keeps]
# Eliminando columnas vacias ---
cc=is.na(tccolombia12$Consumo12)
m=which(cc==c("TRUE"))
tccolombia12=tccolombia12[-m,]
#De character to numeric
tccolombia12$Consumo12 <- as.numeric(tccolombia12$Consumo12)
tccolombia12$Microcredito12 <- as.numeric(tccolombia12$Microcredito12)
tccolombia12$TarjetasCredito12 <- as.numeric(tccolombia12$TarjetasCredito12)
# 13 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-49 av villas", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:189), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo13"
names(tccol)[names(tccol) == "...6"] <- "Microcredito13"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito13"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm13"
tccol
# Con las variables que interesan ---
keeps <- c("Consumo13", 
           "TarjetasCredito13", 
           "Microcredito13")
tccolombia13 = tccol[keeps]
# Eliminando columnas vacias ---
cc=is.na(tccolombia13$Consumo13)
m=which(cc==c("TRUE"))
tccolombia13=tccolombia13[-m,]
#De character to numeric
tccolombia13$Consumo13 <- as.numeric(tccolombia13$Consumo13)
tccolombia13$Microcredito13 <- as.numeric(tccolombia13$Microcredito13)
tccolombia13$TarjetasCredito13 <- as.numeric(tccolombia13$TarjetasCredito13)
# 14 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-51 credifinanciera", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:115), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo14"
names(tccol)[names(tccol) == "...6"] <- "Microcredito14"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito14"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm14"
names(tccol)[names(tccol) == "...9"] <- "Ordinario14"
tccol
# Eliminando columnas vacias ---
cc=is.na(tccol$Ordinario14)
m=which(cc==c("TRUE"))
tccol=tccol[-m,]
# Con las variables que interesan ---
keeps <- c("Consumo14", 
           "TarjetasCredito14", 
           "Microcredito14")
tccolombia14 = tccol[keeps]
#De character to numeric
tccolombia14$Consumo14 <- as.numeric(tccolombia14$Consumo14)
tccolombia14$Microcredito14 <- as.numeric(tccolombia14$Microcredito14)
tccolombia14$TarjetasCredito14 <- as.numeric(tccolombia14$TarjetasCredito14)
# 15 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-52 bancamia", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:111), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo15"
names(tccol)[names(tccol) == "...6"] <- "Microcredito15"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito15"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm15"
names(tccol)[names(tccol) == "...9"] <- "Ordinario15"
tccol
# Eliminando columnas vacias ---
cc=is.na(tccol$Ordinario15)
m=which(cc==c("TRUE"))
tccol=tccol[-m,]
# Con las variables que interesan ---
keeps <- c("Consumo15", 
           "TarjetasCredito15", 
           "Microcredito15")
tccolombia15 = tccol[keeps]
#De character to numeric
tccolombia15$Consumo15 <- as.numeric(tccolombia15$Consumo15)
tccolombia15$Microcredito15 <- as.numeric(tccolombia15$Microcredito15)
tccolombia15$TarjetasCredito15 <- as.numeric(tccolombia15$TarjetasCredito15)
# 16 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-53 banco w", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:84), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo16"
names(tccol)[names(tccol) == "...6"] <- "Microcredito16"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito16"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm16"
names(tccol)[names(tccol) == "...9"] <- "Ordinario16"
tccol
# Eliminando columnas vacias ---
cc=is.na(tccol$Ordinario16)
m=which(cc==c("TRUE"))
tccol=tccol[-m,]
# Con las variables que interesan ---
keeps <- c("Consumo16", 
           "TarjetasCredito16", 
           "Microcredito16")
tccolombia16 = tccol[keeps]
#De character to numeric
tccolombia16$Consumo16 <- as.numeric(tccolombia16$Consumo16)
tccolombia16$Microcredito16 <- as.numeric(tccolombia16$Microcredito16)
tccolombia16$TarjetasCredito16 <- as.numeric(tccolombia16$TarjetasCredito16)
# 17 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-54 coomeva", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:83), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo17"
names(tccol)[names(tccol) == "...6"] <- "Microcredito17"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito17"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm17"
names(tccol)[names(tccol) == "...9"] <- "Ordinario17"
tccol
# Eliminando columnas vacias ---
cc=is.na(tccol$Ordinario17)
m=which(cc==c("TRUE"))
tccol=tccol[-m,]
# Con las variables que interesan ---
keeps <- c("Consumo17", 
           "TarjetasCredito17", 
           "Microcredito17")
tccolombia17 = tccol[keeps]
#De character to numeric
tccolombia17$Consumo17 <- as.numeric(tccolombia17$Consumo17)
tccolombia17$Microcredito17 <- as.numeric(tccolombia17$Microcredito17)
tccolombia17$TarjetasCredito17 <- as.numeric(tccolombia17$TarjetasCredito17)
# 18 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-55 finandina", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:84), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo18"
names(tccol)[names(tccol) == "...6"] <- "Microcredito18"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito18"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm18"
names(tccol)[names(tccol) == "...9"] <- "Ordinario18"
tccol
# Eliminando columnas vacias ---
cc=is.na(tccol$Ordinario18)
m=which(cc==c("TRUE"))
tccol=tccol[-m,]
# Con las variables que interesan ---
keeps <- c("Consumo18", 
           "TarjetasCredito18", 
           "Microcredito18")
tccolombia18 = tccol[keeps]
#De character to numeric
tccolombia18$Consumo18 <- as.numeric(tccolombia18$Consumo18)
tccolombia18$Microcredito18 <- as.numeric(tccolombia18$Microcredito18)
tccolombia18$TarjetasCredito18 <- as.numeric(tccolombia18$TarjetasCredito18)
# 19 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-56 falabella", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:81), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo19"
names(tccol)[names(tccol) == "...6"] <- "Microcredito19"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito19"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm19"
names(tccol)[names(tccol) == "...9"] <- "Ordinario19"
tccol
# Eliminando columnas vacias ---
cc=is.na(tccol$Consumo19)
m=which(cc==c("TRUE"))
tccol=tccol[-m,]
# Con las variables que interesan ---
keeps <- c("Consumo19", 
           "TarjetasCredito19", 
           "Microcredito19")
tccolombia19 = tccol[keeps]
#De character to numeric
tccolombia19$Consumo19 <- as.numeric(tccolombia19$Consumo19)
tccolombia19$Microcredito19 <- as.numeric(tccolombia19$Microcredito19)
tccolombia19$TarjetasCredito19 <- as.numeric(tccolombia19$TarjetasCredito19)
# 20 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-57 pichincha ", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:81), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo20"
names(tccol)[names(tccol) == "...6"] <- "Microcredito20"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito20"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm20"
# Eliminando columnas vacias ---
cc=is.na(tccol$Consumo20)
m=which(cc==c("TRUE"))
tccol=tccol[-m,]
# Con las variables que interesan ---
keeps <- c("Consumo20", 
           "TarjetasCredito20", 
           "Microcredito20")
tccolombia20 = tccol[keeps]
#De character to numeric
tccolombia20$Consumo20 <- as.numeric(tccolombia20$Consumo20)
tccolombia20$Microcredito20 <- as.numeric(tccolombia20$Microcredito20)
tccolombia20$TarjetasCredito20 <- as.numeric(tccolombia20$TarjetasCredito20)
# 21 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
# 22 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-58 coopcentral", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:53), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo22"
names(tccol)[names(tccol) == "...6"] <- "Microcredito22"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito22"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm22"
tccol
# Eliminando columnas vacias ---
cc=is.na(tccol$Consumo22)
m=which(cc==c("TRUE"))
tccol=tccol[-m,]
# Con las variables que interesan ---
keeps <- c("Consumo22", 
           "TarjetasCredito22", 
           "Microcredito22")
tccolombia22 = tccol[keeps]
#De character to numeric
tccolombia22$Consumo22 <- as.numeric(tccolombia22$Consumo22)
tccolombia22$Microcredito22 <- as.numeric(tccolombia22$Microcredito22)
tccolombia22$TarjetasCredito22 <- as.numeric(tccolombia22$TarjetasCredito22)
# 23 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-59 santander", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:50), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo23"
names(tccol)[names(tccol) == "...6"] <- "Microcredito23"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito23"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm23"
tccol
# Eliminando columnas vacias ---
cc=is.na(tccol$Consumo23)
m=which(cc==c("TRUE"))
tccol=tccol[-m,]
# Con las variables que interesan ---
keeps <- c("Consumo23", 
           "TarjetasCredito23", 
           "Microcredito23")
tccolombia23 = tccol[keeps]
#De character to numeric
tccolombia23$Consumo23 <- as.numeric(tccolombia23$Consumo23)
tccolombia23$Microcredito23 <- as.numeric(tccolombia23$Microcredito23)
tccolombia23$TarjetasCredito23 <- as.numeric(tccolombia23$TarjetasCredito23)
# 24 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-60 mundo mujer", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:36), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo24"
names(tccol)[names(tccol) == "...6"] <- "Microcredito24"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito24"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm24"
tccol
# Eliminando columnas vacias ---
cc=is.na(tccol$Consumo24)
m=which(cc==c("TRUE"))
tccol=tccol[-m,]
# Con las variables que interesan ---
keeps <- c("Consumo24", 
           "TarjetasCredito24", 
           "Microcredito24")
tccolombia24 = tccol[keeps]
#De character to numeric
tccolombia24$Consumo24 <- as.numeric(tccolombia24$Consumo24)
tccolombia24$Microcredito24 <- as.numeric(tccolombia24$Microcredito24)
tccolombia24$TarjetasCredito24 <- as.numeric(tccolombia24$TarjetasCredito24)
# 25 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-62 compartir", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:35), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo25"
names(tccol)[names(tccol) == "...6"] <- "Microcredito25"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito25"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm25"
tccol
# Eliminando columnas vacias ---
cc=is.na(tccol$Consumo25)
m=which(cc==c("TRUE"))
tccol=tccol[-m,]
# Con las variables que interesan ---
keeps <- c("Consumo25", 
           "TarjetasCredito25", 
           "Microcredito25")
tccolombia25 = tccol[keeps]
#De character to numeric
tccolombia25$Consumo25 <- as.numeric(tccolombia25$Consumo25)
tccolombia25$Microcredito25 <- as.numeric(tccolombia25$Microcredito25)
tccolombia25$TarjetasCredito25 <- as.numeric(tccolombia25$TarjetasCredito25)
# 26 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-2 popular", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:189), ]
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo26"
names(tccol)[names(tccol) == "...6"] <- "Microcredito26"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito26"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm26"
tccol
# Con las variables que interesan ---
keeps <- c("Consumo26", 
           "TarjetasCredito26", 
           "Microcredito26")
tccolombia26 = tccol[keeps]
# Eliminando columnas vacias ---
cc=is.na(tccolombia26$Consumo26)
m=which(cc==c("TRUE"))
tccolombia26=tccolombia26[-m,]
#De character to numeric
tccolombia26$Consumo26 <- as.numeric(tccolombia26$Consumo26)
tccolombia26$Microcredito26 <- as.numeric(tccolombia26$Microcredito26)
tccolombia26$TarjetasCredito26 <- as.numeric(tccolombia26$TarjetasCredito26)
# 27 banco ------------------------------------------
# Reading the file ---
##rm(list = ls())
library(readxl)
tccol <- read_excel("Colombia1.xls" ,sheet="1-63 serfinanza", range = "A4:AB5000")
# Eliminando las observaciones innecesarias
tccol <- tccol[-c(1:1), ] #No hay innecesarias
# Renombrando variables ---
library(tidyverse) #Cambiando de nombres las variables
colnames(tccol) # get column names
# Rename column names
names(tccol)[names(tccol) == "FECHA"] <- "fecha"
names(tccol)[names(tccol) == "...3"] <- "Consumo27"
names(tccol)[names(tccol) == "...6"] <- "Microcredito27"
names(tccol)[names(tccol) == "...18"] <- "TarjetasCredito27"
names(tccol)[names(tccol) == "...27"] <- "Consum_bm27"
tccol
# Con las variables que interesan ---
keeps <- c("Consumo27", 
           "TarjetasCredito27", 
           "Microcredito27")
tccolombia27 = tccol[keeps]
# Eliminando columnas vacias ---
cc=is.na(tccolombia27$Consumo27)
m=which(cc==c("TRUE"))
tccolombia27=tccolombia27[-m,]
#De character to numeric
tccolombia27$Consumo27 <- as.numeric(tccolombia27$Consumo27)
tccolombia27$Microcredito27 <- as.numeric(tccolombia27$Microcredito27)
tccolombia27$TarjetasCredito27 <- as.numeric(tccolombia27$TarjetasCredito27)
#Creating a dataframe with the fisrt dates
Df.new <- data.frame(c(1:13),  
                     c(NA),
                     c(NA),
                     c(NA))   
#Naming the above Data Frame                               
names(Df.new) <- c("fecha","Consumo27", "Microcredito27", "TarjetasCredito27")  
#Solo con las variables importantes
keeps4 <- c("Consumo27", "Microcredito27","TarjetasCredito27")
Df.new <- Df.new[keeps4]
#Adding observations using rbind() function  
tccolombia27 <- rbind(Df.new, tccolombia27) 
# cbinPad function ------------------------------
cbindPad <- function(...){
  args <- list(...)
  n <- sapply(args,nrow)
  mx <- max(n)
  pad <- function(x, mx){
    if (nrow(x) < mx){
      nms <- colnames(x)
      padTemp <- matrix(NA, mx - nrow(x), ncol(x))
      colnames(padTemp) <- nms
      if (ncol(x)==0) {
        return(padTemp)
      } else {
        return(rbind(x,padTemp))
      }
    }
    else{
      return(x)
    }
  }
  rs <- lapply(args,pad,mx)
  return(do.call(cbind,rs))
}

# Adding data horizontally ------------------------------
tccolombia <- cbindPad(tccolombia1,
                       tccolombia2,
                       tccolombia3,
                       tccolombia4,
                       tccolombia5,
                       tccolombia6,
                       tccolombia7,
                       tccolombia8,
                       tccolombia9,
                       tccolombia10,
                       tccolombia11,
                       tccolombia12,
                       tccolombia13,
                       tccolombia14,
                       tccolombia15,
                       tccolombia16,
                       tccolombia17,
                       tccolombia18,
                       tccolombia19,
                       tccolombia20,
                       tccolombia22,
                       tccolombia23,
                       tccolombia24,
                       tccolombia25,
                       tccolombia26,
                       tccolombia27)



# Nombre de las filas -----------------------------------------
row.names(tccolombia) <- tccolombia$fecha

#Agregando las variables por tipo de variable----------------------
tccolombia$Consumo <- rowSums(tccolombia[,c("Consumo1", "Consumo2", "Consumo3",
                                            "Consumo4", "Consumo5", "Consumo6",
                                            "Consumo7", "Consumo8", "Consumo9",
                                            "Consumo10", "Consumo11", "Consumo12",
                                            "Consumo13", "Consumo14", "Consumo15",
                                            "Consumo16", "Consumo17", "Consumo18",
                                            "Consumo19", "Consumo20", 
                                            "Consumo22", "Consumo23", "Consumo24",
                                            "Consumo25", "Consumo26", "Consumo27"
)], na.rm=TRUE)
#
tccolombia$Microcredito <- rowSums(tccolombia[,c("Microcredito1", "Microcredito2", "Microcredito3",
                                                 "Microcredito4", "Microcredito5", "Microcredito6",
                                                 "Microcredito7", "Microcredito8", "Microcredito9",
                                                 "Microcredito10", "Microcredito11", "Microcredito12",
                                                 "Microcredito13", "Microcredito14", "Microcredito15",
                                                 "Microcredito16", "Microcredito17", "Microcredito18",
                                                 "Microcredito19", "Microcredito20", 
                                                 "Microcredito22", "Microcredito23", "Microcredito24",
                                                 "Microcredito25", "Microcredito26", "Microcredito27"
)], na.rm=TRUE)
#
tccolombia$TarjetasCredito <- rowSums(tccolombia[,c("TarjetasCredito1", "TarjetasCredito2", "TarjetasCredito3",
                                                    "TarjetasCredito4", "TarjetasCredito5", "TarjetasCredito6",
                                                    "TarjetasCredito7", "TarjetasCredito8", "TarjetasCredito9",
                                                    "TarjetasCredito10", "TarjetasCredito11", "TarjetasCredito12",
                                                    "TarjetasCredito13", "TarjetasCredito14", "TarjetasCredito15",
                                                    "TarjetasCredito16", "TarjetasCredito17", "TarjetasCredito18",
                                                    "TarjetasCredito19", "TarjetasCredito20", 
                                                    "TarjetasCredito22", "TarjetasCredito23", "TarjetasCredito24",
                                                    "TarjetasCredito25", "TarjetasCredito26", "TarjetasCredito27"
)], na.rm=TRUE)

#Manteniendo las variables importantes-----------------
keeps2 <- c("fecha","Consumo","Microcredito","TarjetasCredito")
tccolombiamm = tccolombia[keeps2]

# Exportando --------------------------------------------
write.csv(tccolombiam,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tccolombiam.csv", row.names = FALSE)
write.csv(tccolombiam,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Colombia\\tccolombiam.csv", row.names = FALSE)

# Graphs daily dates------------------------------------------------
#install.packages("ggplot2")
#install.packages("hrbrthemes")
library(ggplot2)
library(dplyr)
library(hrbrthemes)
#colnames(tccolombia)
Hipotecario <- tccolombiam %>%
  tail(10000) %>%
  ggplot(aes(x=fecha, y=Hipotecario)) +
  geom_line() +
  geom_point() +
  ggtitle("COLOMBIA crédito inmobiliario") +
  xlab("Date") + ylab("Miles de MM dolares")
Hipotecario
#
Consumo <- tccolombiam %>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Consumo)) +
  geom_line() +
  geom_point() + 
  ggtitle("COLOMBIA crédito de consumo") +
  xlab("Date") + ylab("Miles de MM dolares")
Consumo

#
Microcredito <- tccolombiam %>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Microcredito)) +
  geom_line() +
  geom_point() +
  ggtitle("COLOMBIA Microcredito") +
  xlab("Date") + ylab("Miles de MM dolares")
Microcredito

save(tccolombia,file="tccolombia.Rda")

#################################################################
######################COSTA RICA#################################
#################################################################
# TIPO DE CREDITO ---------------------------------------
# Importando datos ---------------------------------------------
##rm(list = ls())
#library(httr)
#list <- c("https://www.asoban.bo/system/publications/pdfs/000/000/178/original/Rep_Cart_jul-20.pdf")
#for (i in 1:length(list)) {
#download.file(list[i], destfile = paste0("CostaRica", i, ".xls"),  mode="wb")
#}

# Reading the file ---------------------------------------------
#rm(list = ls())
library(readxl)
tccost <- read_excel("CostaRica-Datos.xlsx" ,sheet="Sheet1", range = "A199:L5000")

# Renombrando variables --------------------------------------------
library(tidyverse) #Cambiando de nombres las variables
colnames(tccost) # get column names

# Rename column names
names(tccost)[names(tccost) == "Diciembre/2017"] <- "fecha"
names(tccost)[names(tccost) == "0...2"] <- "TarjetasCredito"
names(tccost)[names(tccost) == "2908624"] <- "Consumo"
names(tccost)[names(tccost) == "2252660"] <- "Hipotecario"
names(tccost)[names(tccost) == "305353"] <- "Agropecuaria"
names(tccost)[names(tccost) == "98442"] <- "Construccion"
names(tccost)[names(tccost) == "338535"] <- "Industria"
names(tccost)[names(tccost) == "877235"] <- "Comercio"
names(tccost)[names(tccost) == "0...9"] <- "Transporte"
names(tccost)[names(tccost) == "1016475"] <- "Servicios"
names(tccost)[names(tccost) == "8167349"] <- "Otros"
tccost

# Con las variables que interesan ---------------------------------------------
keeps <- c("fecha",
           "Consumo", 
           "Hipotecario")
tccostarica = tccost[keeps]

# Eliminando columnas vacias ----------------------------------
tccostaricam <- na.omit(tccostarica)

# Variable fecha --------------------------------------------
#Format date
#install.packages("lubridate")
library(lubridate)
tccostaricam$fecha <- parse_date_time(tccostaricam$fecha, orders = c("bdy", "bY"))

# Nombre de las filas -----------------------------------------
row.names(tccostaricam) <- tccostaricam$fecha

#Variable pais
tccostaricam$Pais <- "Costa Rica"

# Exportando --------------------------------------------
write.csv(tccostaricam,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tccostaricam.csv", row.names = FALSE)
write.csv(tccostaricam,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_CostaRica\\tccostaricam.csv", row.names = FALSE)

# Graphs daily dates------------------------------------------------
#install.packages("ggplot2")
#install.packages("hrbrthemes")
library(ggplot2)
library(dplyr)
library(hrbrthemes)
#colnames(tccostarica)
Hipotecario <- tccostaricam %>%
  tail(10000) %>%
  ggplot(aes(x=fecha, y=Hipotecario)) +
  geom_line() +
  geom_point() +
  ggtitle("COLOMBIA crédito inmobiliario") +
  xlab("Date") + ylab("Miles de MM dolares")
Hipotecario
#
Consumo <- tccostaricam %>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Consumo)) +
  geom_line() +
  geom_point() + 
  ggtitle("COLOMBIA crédito de consumo") +
  xlab("Date") + ylab("Miles de MM dolares")
Consumo

save(tccostarica,file="tccostarica.Rda")

#################################################################
########################ECUADOR##################################
#################################################################
# Importando datos 2018 ----------------------------------
#rm(list = ls())
library(httr)
list <- c("https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2018/03/BOL_FIN_BCOS_ENE_18.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2019/03/BOL_FIN_BCOS_FEB_18.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2018/04/BOL_FIN_BCOS_MAR_18.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2018/05/BOL_FIN_BCOS_ABR_18.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2018/06/BOL_FIN_BCOS_MAY_18.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2018/07/BOL_FIN_BCOS_JUN_18.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2018/08/BOL_FIN_BCOS_JUL_18.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2018/09/BOL_FIN_BCOS_AGO_18.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2018/10/BOL_FIN_BCOS_SEPT_18.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2019/02/BOL_FIN_BCOS_OCT_18.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2019/02/BOL_FIN_BCOS_NOV_18.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2019/04/BOL_FIN_BCOS_DIC_18.zip")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Ecuador", i, ".zip"),  mode="wb")}

# ECUADOR Enero 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador1.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_ENERO_2018.xlsx"), paste0("Ene18.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Ene18.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0118 <- tcecua[-c(1:1), ]
#Variable year
tcecua0118$year <- 2018
tcecua0118$month <- "Jan"
#La variable "date"
tcecua0118$date <- format(lubridate::ymd(paste0(tcecua0118$year,tcecua0118$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0118) <- tcecua0118$date

# ECUADOR Febrero 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador2.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_FEBRERO 2018.xlsx"), paste0("Feb18.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Feb18.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0218 <- tcecua[-c(1:1), ]
#Variable year
tcecua0218$year <- 2018
tcecua0218$month <- "Feb"
#La variable "date"
tcecua0218$date <- format(lubridate::ymd(paste0(tcecua0218$year,tcecua0218$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0218) <- tcecua0218$date

# ECUADOR Marzo 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador3.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_MARZO 2018.xlsx"), paste0("Mar18.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Mar18.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0318 <- tcecua[-c(1:1), ]
#Variable year
tcecua0318$year <- 2018
tcecua0318$month <- "Mar"
#La variable "date"
tcecua0318$date <- format(lubridate::ymd(paste0(tcecua0318$year,tcecua0318$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0318) <- tcecua0318$date

# ECUADOR Abril 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador4.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_ABRIL 2018.xlsx"), paste0("Abril18.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Abril18.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0418 <- tcecua[-c(1:1), ]
#Variable year
tcecua0418$year <- 2018
tcecua0418$month <- "Apr"
#La variable "date"
tcecua0418$date <- format(lubridate::ymd(paste0(tcecua0418$year,tcecua0418$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0418) <- tcecua0418$date

# ECUADOR Mayo 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador5.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_MAYO 2018.xlsx"), paste0("May18.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("May18.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0518 <- tcecua[-c(1:1), ]
#Variable year
tcecua0518$year <- 2018
tcecua0518$month <- "May"
#La variable "date"
tcecua0518$date <- format(lubridate::ymd(paste0(tcecua0518$year,tcecua0518$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0518) <- tcecua0518$date

# ECUADOR Junio 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador6.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_JUNIO 2018.xlsx"), paste0("Jun18.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Jun18.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0618 <- tcecua[-c(1:1), ]
#Variable year
tcecua0618$year <- 2018
tcecua0618$month <- "Jun"
#La variable "date"
tcecua0618$date <- format(lubridate::ymd(paste0(tcecua0618$year,tcecua0618$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0618) <- tcecua0618$date

# ECUADOR Julio 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador7.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_JULIO 2018.xlsx"), paste0("Jul18.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Jul18.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0718 <- tcecua[-c(1:1), ]
#Variable year
tcecua0718$year <- 2018
tcecua0718$month <- "Jul"
#La variable "date"
tcecua0718$date <- format(lubridate::ymd(paste0(tcecua0718$year,tcecua0718$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0718) <- tcecua0718$date

# ECUADOR Agosto 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador8.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_AGOSTO 2018.xlsx"), paste0("Ago18.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Ago18.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0818 <- tcecua[-c(1:1), ]
#Variable year
tcecua0818$year <- 2018
tcecua0818$month <- "Aug"
#La variable "date"
tcecua0818$date <- format(lubridate::ymd(paste0(tcecua0818$year,tcecua0818$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0818) <- tcecua0818$date

# ECUADOR Septiembre 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador9.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_SEPTIEMBRE 2018.xlsx"), paste0("Sept18.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Sept18.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0918 <- tcecua[-c(1:1), ]
#Variable year
tcecua0918$year <- 2018
tcecua0918$month <- "Sep"
#La variable "date"
tcecua0918$date <- format(lubridate::ymd(paste0(tcecua0918$year,tcecua0918$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0918) <- tcecua0918$date

# ECUADOR Octubre 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador10.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_OCTUBRE 2018.xlsx"), paste0("Oct18.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Oct18.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua1018 <- tcecua[-c(1:1), ]
#Variable year
tcecua1018$year <- 2018
tcecua1018$month <- "Oct"
#La variable "date"
tcecua1018$date <- format(lubridate::ymd(paste0(tcecua1018$year,tcecua1018$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua1018) <- tcecua1018$date

# ECUADOR Noviembre 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador11.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_NOVIEMBRE 2018.xlsx"), paste0("Nov18.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Nov18.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua1118 <- tcecua[-c(1:1), ]
#Variable year
tcecua1118$year <- 2018
tcecua1118$month <- "Nov"
#La variable "date"
tcecua1118$date <- format(lubridate::ymd(paste0(tcecua1118$year,tcecua1118$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua1118) <- tcecua1118$date

# ECUADOR Diciembre 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador12.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_DICIEMBRE 2018.xlsx"), paste0("Dic18.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Dic18.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua1218 <- tcecua[-c(1:1), ]
#Variable year
tcecua1218$year <- 2018
tcecua1218$month <- "Dec"
#La variable "date"
tcecua1218$date <- format(lubridate::ymd(paste0(tcecua1218$year,tcecua1218$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua1218) <- tcecua1218$date

# Importando datos 2019 ----------------------------------
##rm(list = ls())
library(httr)
list <- c("https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2019/02/BOL_FIN_BCOS_ENE_19.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2019/04/BOL_FIN_BCOS_FEBR_19.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2019/04/BOL_FIN_BCOS_MAR_19.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2019/05/BOL_FIN_BCOS_ABR_19.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2019/06/BOL_FIN_BCOS_MAY_19.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2019/07/BOL_FIN_BCOS_JUN_19.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2019/08/BOL_FIN_BCOS_JUL_19.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2019/09/BOL_FIN_BCOS_AGO_19.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2019/10/BOL_FIN_BCOS_SEPT_19.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2019/11/BOL_FIN_BCOS_OCT_19.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2019/12/BOL_FIN_BCOS_NOV_19.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2020/01/BOL_FIN_BCOS_DIC_19.zip")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Ecuador", i, ".zip"),  mode="wb")}

# ECUADOR Enero 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador1.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_ENERO.xlsx"), paste0("Ene19.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Ene19.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0119 <- tcecua[-c(1:1), ]
#Variable year
tcecua0119$year <- 2019
tcecua0119$month <- "Jan"
#La variable "date"
tcecua0119$date <- format(lubridate::ymd(paste0(tcecua0119$year,tcecua0119$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0119) <- tcecua0119$date

# ECUADOR Febrero 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador2.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_FEBRERO 2019.xlsx"), paste0("Feb19.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Feb19.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0219 <- tcecua[-c(1:1), ]
#Variable year
tcecua0219$year <- 2019
tcecua0219$month <- "Feb"
#La variable "date"
tcecua0219$date <- format(lubridate::ymd(paste0(tcecua0219$year,tcecua0219$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0219) <- tcecua0219$date


# ECUADOR Marzo 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador3.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_MARZO 2019.xlsx"), paste0("Mar19.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Mar19.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0319 <- tcecua[-c(1:1), ]
#Variable year
tcecua0319$year <- 2019
tcecua0319$month <- "Mar"
#La variable "date"
tcecua0319$date <- format(lubridate::ymd(paste0(tcecua0319$year,tcecua0319$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0319) <- tcecua0319$date

# ECUADOR Abril 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador4.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_ABRIL 2019.xlsx"), paste0("Abril19.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Abril19.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0419 <- tcecua[-c(1:1), ]
#Variable year
tcecua0419$year <- 2019
tcecua0419$month <- "Apr"
#La variable "date"
tcecua0419$date <- format(lubridate::ymd(paste0(tcecua0419$year,tcecua0419$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0419) <- tcecua0419$date

# ECUADOR Mayo 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador5.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_MAYO 2019.xlsx"), paste0("May19.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("May19.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0519 <- tcecua[-c(1:1), ]
#Variable year
tcecua0519$year <- 2019
tcecua0519$month <- "May"
#La variable "date"
tcecua0519$date <- format(lubridate::ymd(paste0(tcecua0519$year,tcecua0519$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0519) <- tcecua0519$date

# ECUADOR Junio 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador6.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_JUNIO 2019.xlsx"), paste0("Jun19.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Jun19.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0619 <- tcecua[-c(1:1), ]
#Variable year
tcecua0619$year <- 2019
tcecua0619$month <- "Jun"
#La variable "date"
tcecua0619$date <- format(lubridate::ymd(paste0(tcecua0619$year,tcecua0619$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0619) <- tcecua0619$date

# ECUADOR Julio 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador7.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_JULIO 2019.xlsx"), paste0("Jul19.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Jul19.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0719 <- tcecua[-c(1:1), ]
#Variable year
tcecua0719$year <- 2019
tcecua0719$month <- "Jul"
#La variable "date"
tcecua0719$date <- format(lubridate::ymd(paste0(tcecua0719$year,tcecua0719$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0719) <- tcecua0719$date

# ECUADOR Agosto 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador8.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_AGOSTO 2019.xlsx"), paste0("Ago19.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Ago19.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0819 <- tcecua[-c(1:1), ]
#Variable year
tcecua0819$year <- 2019
tcecua0819$month <- "Aug"
#La variable "date"
tcecua0819$date <- format(lubridate::ymd(paste0(tcecua0819$year,tcecua0819$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0819) <- tcecua0819$date

# ECUADOR Septiembre 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador9.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_SEPTIEMBRE 2019.xlsx"), paste0("Sept19.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Sept19.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0919 <- tcecua[-c(1:1), ]
#Variable year
tcecua0919$year <- 2019
tcecua0919$month <- "Sep"
#La variable "date"
tcecua0919$date <- format(lubridate::ymd(paste0(tcecua0919$year,tcecua0919$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0919) <- tcecua0919$date

# ECUADOR Octubre 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador10.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_OCTUBRE 2019.xlsx"), paste0("Oct19.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Oct19.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua1019 <- tcecua[-c(1:1), ]
#Variable year
tcecua1019$year <- 2019
tcecua1019$month <- "Oct"
#La variable "date"
tcecua1019$date <- format(lubridate::ymd(paste0(tcecua1019$year,tcecua1019$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua1019) <- tcecua1019$date

# ECUADOR Noviembre 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador11.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_NOVIEMBRE 2019.xlsx"), paste0("Nov19.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Nov19.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua1119 <- tcecua[-c(1:1), ]
#Variable year
tcecua1119$year <- 2019
tcecua1119$month <- "Nov"
#La variable "date"
tcecua1119$date <- format(lubridate::ymd(paste0(tcecua1119$year,tcecua1119$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua1119) <- tcecua1119$date

# ECUADOR Diciembre 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador12.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_DICIEMBRE 2019.xlsx"), paste0("Dic19.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Dic19.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua1219 <- tcecua[-c(1:1), ]
#Variable year
tcecua1219$year <- 2019
tcecua1219$month <- "Dec"
#La variable "date"
tcecua1219$date <- format(lubridate::ymd(paste0(tcecua1219$year,tcecua1219$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua1219) <- tcecua1219$date

# Importando datos 2020 ----------------------------------
##rm(list = ls())
library(httr)
list <- c("https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2020/02/BOL_FIN_BCOS_ENE_20.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2020/03/BOL_FIN_BCOS_FEB_20.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2020/04/BOL_FIN_BCOS_MAR_20.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2020/07/BOL_FIN_BCOS_ABR_20-3.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2020/07/BOL-FIN-BCOS-MAY-20-5.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2020/07/BOL-FIN-BCOS-JUN-20-2.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2020/08/BOL-FIN-BCOS-JUL-20.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2020/09/BOL-FIN-BCOS-AGO-20.zip",
          "https://estadisticas.superbancos.gob.ec/portalestadistico/portalestudios/wp-content/uploads/sites/4/downloads/2020/09/BOL-FIN-BCOS-SEP-20.zip")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Ecuador", i, ".zip"),  mode="wb")}

# ECUADOR Enero 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador1.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_ENERO 2020.xlsx"), paste0("Ene20.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Ene20.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0120 <- tcecua[-c(1:1), ]
#Variable year
tcecua0120$year <- 2020
tcecua0120$month <- "Jan"
#La variable "date"
tcecua0120$date <- format(lubridate::ymd(paste0(tcecua0120$year,tcecua0120$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0120) <- tcecua0120$date

# ECUADOR Febrero 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador2.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_FEBRERO 2020.xlsx"), paste0("Feb20.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Feb20.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0220 <- tcecua[-c(1:1), ]
#Variable year
tcecua0220$year <- 2020
tcecua0220$month <- "Feb"
#La variable "date"
tcecua0220$date <- format(lubridate::ymd(paste0(tcecua0220$year,tcecua0220$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0220) <- tcecua0220$date


# ECUADOR Marzo 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador3.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_MARZO 2020.xlsx"), paste0("Mar20.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Mar20.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0320 <- tcecua[-c(1:1), ]
#Variable year
tcecua0320$year <- 2020
tcecua0320$month <- "Mar"
#La variable "date"
tcecua0320$date <- format(lubridate::ymd(paste0(tcecua0320$year,tcecua0320$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0320) <- tcecua0320$date

# ECUADOR Abril 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador4.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_ABRIL 2020.xlsx"), paste0("Abril20.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Abril20.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0420 <- tcecua[-c(1:1), ]
#Variable year
tcecua0420$year <- 2020
tcecua0420$month <- "Apr"
#La variable "date"
tcecua0420$date <- format(lubridate::ymd(paste0(tcecua0420$year,tcecua0420$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0420) <- tcecua0420$date

# ECUADOR Mayo 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador5.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_MAYO 2020.xlsx"), paste0("May20.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("May20.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0520 <- tcecua[-c(1:1), ]
#Variable year
tcecua0520$year <- 2020
tcecua0520$month <- "May"
#La variable "date"
tcecua0520$date <- format(lubridate::ymd(paste0(tcecua0520$year,tcecua0520$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0520) <- tcecua0520$date

# ECUADOR Junio 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador6.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_JUNIO 2020.xlsx"), paste0("Jun20.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Jun20.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0620 <- tcecua[-c(1:1), ]
#Variable year
tcecua0620$year <- 2020
tcecua0620$month <- "Jun"
#La variable "date"
tcecua0620$date <- format(lubridate::ymd(paste0(tcecua0620$year,tcecua0620$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0620) <- tcecua0620$date

# ECUADOR Julio 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador7.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_JULIO 2020.xlsx"), paste0("Jul20.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Jul20.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0720 <- tcecua[-c(1:1), ]
#Variable year
tcecua0720$year <- 2020
tcecua0720$month <- "Jul"
#La variable "date"
tcecua0720$date <- format(lubridate::ymd(paste0(tcecua0720$year,tcecua0720$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0720) <- tcecua0720$date

# ECUADOR Agosto 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador8.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_MENSUAL_ BPRIVADA_AGO_2020_ web.xlsx"), paste0("Ago20.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Ago20.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0820 <- tcecua[-c(1:1), ]
#Variable year
tcecua0820$year <- 2020
tcecua0820$month <- "Aug"
#La variable "date"
tcecua0820$date <- format(lubridate::ymd(paste0(tcecua0820$year,tcecua0820$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0820) <- tcecua0820$date

# ECUADOR Septiembre 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador9.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_SEPTIEMBRE 2020.xlsx"), paste0("Sept20.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Sept20.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua0920 <- tcecua[-c(1:1), ]
#Variable year
tcecua0920$year <- 2020
tcecua0920$month <- "Sep"
#La variable "date"
tcecua0920$date <- format(lubridate::ymd(paste0(tcecua0920$year,tcecua0920$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua0920) <- tcecua0920$date

# ECUADOR Octubre 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador10.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_OCTUBRE 2020.xlsx"), paste0("Oct20.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Oct20.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua1020 <- tcecua[-c(1:1), ]
#Variable year
tcecua1020$year <- 2020
tcecua1020$month <- "Oct"
#La variable "date"
tcecua1020$date <- format(lubridate::ymd(paste0(tcecua1020$year,tcecua1020$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua1020) <- tcecua1020$date

# ECUADOR Noviembre 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador11.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_NOVIEMBRE 2020.xlsx"), paste0("Nov20.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Nov20.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua1120 <- tcecua[-c(1:1), ]
#Variable year
tcecua1120$year <- 2020
tcecua1120$month <- "Nov"
#La variable "date"
tcecua1120$date <- format(lubridate::ymd(paste0(tcecua1120$year,tcecua1120$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcecua1120) <- tcecua1120$date

# ECUADOR Diciembre 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador/Ecuador12.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Ecuador"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("BOL_BP_DICIEMBRE 2020.xlsx"), paste0("Dic20.xlsx"))
#Reading the file
library(readxl)
tcecua <- read_excel("Dic20.xlsx",sheet="CONSCOND", range = "C7:AJ26")
#Eliminando las filas no importantes
tcecua <- tcecua[-c(1:9), ]
names(tcecua)[names(tcecua) == "TOTAL BANCOS PRIVADOS"] <- "Jan"
names(tcecua)[names(tcecua) == "CUENTA"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcecua = tcecua[keeps]
# Transponiendo el dataframe ---
tcecua <- as.data.frame(t(as.matrix(tcecua)))
# Rename column names
colnames(tcecua)
names(tcecua)[names(tcecua) == "V1"] <- "Comerial_prio"
names(tcecua)[names(tcecua) == "V2"] <- "Consumo_prio"
names(tcecua)[names(tcecua) == "V3"] <- "Hipotecario"
names(tcecua)[names(tcecua) == "V4"] <- "Microcredito"
names(tcecua)[names(tcecua) == "V5"] <- "CreditoProductivo"
names(tcecua)[names(tcecua) == "V6"] <- "Comerial_ordi"
names(tcecua)[names(tcecua) == "V7"] <- "Consumo_ordi"
names(tcecua)[names(tcecua) == "V8"] <- "ViviendaSocial"
names(tcecua)[names(tcecua) == "V9"] <- "CreditoEducativo"
names(tcecua)[names(tcecua) == "V10"] <- "Gobierno"
#Eliminando las filas no importantes
tcecua1220 <- tcecua[-c(1:1), ]
#Variable year
tcecua1220$year <- 2020
tcecua1220$month <- "Dec"
#La variable "date"
tcecua1220$date <- format(lubridate::ymd(paste0(tcecua1220$year,tcecua1220$month,"01")), "%m-%Y")

#Nombre de las filas ---
row.names(tcecua1220) <- tcecua1220$date

# cbinPad function ------------------------------
cbindPad <- function(...){
  args <- list(...)
  n <- sapply(args,nrow)
  mx <- max(n)
  pad <- function(x, mx){
    if (nrow(x) < mx){
      nms <- colnames(x)
      padTemp <- matrix(NA, mx - nrow(x), ncol(x))
      colnames(padTemp) <- nms
      if (ncol(x)==0) {
        return(padTemp)
      } else {
        return(rbind(x,padTemp))
      }
    }
    else{
      return(x)
    }
  }
  rs <- lapply(args,pad,mx)
  return(do.call(cbind,rs))
}

# Add datasets vertically-----------------------------------
tcecuador <- rbind(tcecua0118, tcecua0218, tcecua0318, 
                   tcecua0418, tcecua0518, tcecua0618, 
                   tcecua0718, tcecua0818, tcecua0918, 
                   tcecua1018, tcecua1118, tcecua1218, 
                   tcecua0119, tcecua0219, tcecua0319, 
                   tcecua0419, tcecua0519, tcecua0619, 
                   tcecua0719, tcecua0819, tcecua0919, 
                   tcecua1019, tcecua1119, tcecua1219, 
                   tcecua0120, tcecua0220, tcecua0320, 
                   tcecua0420, tcecua0520, tcecua0620, 
                   tcecua0720, tcecua0820)

#Variable pais
tcecuador$Pais <- "Ecuador"
class(tcecuador$Hipotecario)
#From character to numeric
tcecuador$Comerial_prio <- as.numeric(as.character(tcecuador$Comerial_prio))
tcecuador$Consumo_prio <- as.numeric(as.character(tcecuador$Consumo_prio))
tcecuador$Hipotecario <- as.numeric(as.character(tcecuador$Hipotecario))
tcecuador$Microcredito <- as.numeric(as.character(tcecuador$Microcredito))
tcecuador$CreditoProductivo <- as.numeric(as.character(tcecuador$CreditoProductivo))
tcecuador$Comerial_ordi <- as.numeric(as.character(tcecuador$Comerial_ordi))
tcecuador$Consumo_ordi <- as.numeric(as.character(tcecuador$Consumo_ordi))
tcecuador$ViviendaSocial <- as.numeric(as.character(tcecuador$ViviendaSocial))
tcecuador$CreditoEducativo <- as.numeric(as.character(tcecuador$CreditoEducativo))
tcecuador$Gobierno <- as.numeric(as.character(tcecuador$Gobierno))

#Agregando variables
tcecuador$Comercial <- rowSums(tcecuador[,c("Comerial_prio", "Comerial_ordi")], na.rm=TRUE)
tcecuador$Consumo <- rowSums(tcecuador[,c("Consumo_prio", "Consumo_ordi")], na.rm=TRUE)

# Variable fecha-------------------------
tcecuador$fecha <- lubridate::ymd(paste0(tcecuador$year,tcecuador$month,"01"))

#Nombre de las filas ---
row.names(tcecuador) <- tcecuador$fecha

# Exportando --------------------------------------------
write.csv(tcecuador,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Ecuador\\tcecuador.csv", row.names = FALSE)
write.csv(tcecuador,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcecuador.csv", row.names = FALSE)

# graphs ------------------------------

library(ggplot2)
library(dplyr)
library(hrbrthemes)
colnames(tcecuador)
#
Hipotecario <- tcecuador%>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Hipotecario)) +
  geom_line() +
  geom_point() +
  ggtitle("ECUADOR crédito inmobiliario") +
  xlab("Date") + ylab("MM dolares")
Hipotecario

#
Consumo <- tcecuador%>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Consumo)) +
  geom_line() +
  geom_point() +
  ggtitle("ECUADOR crédito de consumo") +
  xlab("Date") + ylab("MM dolares")
Consumo


#
Comercial <- tcecuador%>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Comercial)) +
  geom_line() +
  geom_point() +
  ggtitle("ECUADOR crédito comercial") +
  xlab("Date") + ylab("MM dolares")
Comercial

save(tcecuador,file="tcecuador.Rda")

#################################################################
######################EL SALVADOR################################
#################################################################
#Importando
#rm(list = ls())
#Enero 2018 ---------------------------------------------------
library(readxl)
tcelsa <- read_excel("s_sa_0118.xls.xlsx", range = "B86:L152")
#Cambiando nombres de variables
names(tcelsa)[names(tcelsa) == "Total"] <- "Jan"
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"
keeps <- c("Saldo",
           "Jan")
tcelsa = tcelsa[keeps]
#Eliminando columnas vacias ---
tcelsa <- na.omit(tcelsa)
#Eliminando las filas no importantes
tcelsa <- tcelsa[-c(2:60), ]
tcelsa <- tcelsa[-c(3:4), ]
# Transponiendo el dataframe ---
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))
# Rename column names
colnames(tcelsa)
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"
#Eliminando las filas no importantes
tcelsa0118 <- tcelsa[-c(1:1), ]
#Variable year
tcelsa0118$year <- 2018
tcelsa0118$month <- "Jan"
#La variable "date"
tcelsa0118$date <- format(lubridate::ymd(paste0(tcelsa0118$year,tcelsa0118$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcelsa0118) <- tcelsa0118$date

#Febrero 2018 ---------------------------------------------------
library(readxl)			
tcelsa <- read_excel("s_sa_0218.xls.xlsx",	 range = "B86:L152")		
#Cambiando nombres de variables			
names(tcelsa)[names(tcelsa) == "Total"] <- "Feb"			
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"			
keeps <- c("Saldo",			
           "Feb")			
tcelsa = tcelsa[keeps]			
#Eliminando columnas vacias ---			
tcelsa <- na.omit(tcelsa)			
#Eliminando las filas no importantes			
tcelsa <- tcelsa[-c(2:60),]		
tcelsa <- tcelsa[-c(3:4),]		
# Transponiendo el dataframe ---			
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))			
# Rename column names			
colnames(tcelsa)			
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"			
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"			
#Eliminando las filas no importantes			
tcelsa0218 <- tcelsa[-c(1:1),	 ]		
#Variable year			
tcelsa0218$year <- 2018			
tcelsa0218$month <- "Feb"			
#La variable "date"			
tcelsa0218$date <- format(lubridate::ymd(paste0(tcelsa0218$year,	tcelsa0218$month,	01)),	 "%m-%Y")
#Nombre de las filas ---			
row.names(tcelsa0218) <- tcelsa0218$date			

#Marzo 2018 ---------------------------------------------------
library(readxl)			
tcelsa <- read_excel("s_sa_0318.xls.xlsx",	 range = "B86:L152")		
#Cambiando nombres de variables			
names(tcelsa)[names(tcelsa) == "Total"] <- "Mar"			
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"			
keeps <- c("Saldo",			
           "Mar")			
tcelsa = tcelsa[keeps]			
#Eliminando columnas vacias ---			
tcelsa <- na.omit(tcelsa)			
#Eliminando las filas no importantes			
tcelsa <- tcelsa[-c(2:60),]		
tcelsa <- tcelsa[-c(3:4),	 ]		
# Transponiendo el dataframe ---			
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))			
# Rename column names			
colnames(tcelsa)			
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"			
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"			
#Eliminando las filas no importantes			
tcelsa0318 <- tcelsa[-c(1:1),	 ]		
#Variable year			
tcelsa0318$year <- 2018			
tcelsa0318$month <- "Mar"			
#La variable "date"			
tcelsa0318$date <- format(lubridate::ymd(paste0(tcelsa0318$year,	tcelsa0318$month,	01)),	 "%m-%Y")
#Nombre de las filas ---			
row.names(tcelsa0318) <- tcelsa0318$date			

#Abril 2018 ---------------------------------------------------
library(readxl)			
tcelsa <- read_excel("s_sa_0418.xls.xlsx",	 range = "B86:L152")		
#Cambiando nombres de variables			
names(tcelsa)[names(tcelsa) == "Total"] <- "Apr"			
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"			
keeps <- c("Saldo",			
           "Apr")			
tcelsa = tcelsa[keeps]			
#Eliminando columnas vacias ---			
tcelsa <- na.omit(tcelsa)			
#Eliminando las filas no importantes			
tcelsa <- tcelsa[-c(2:60),]		
tcelsa <- tcelsa[-c(3:4),	 ]		
# Transponiendo el dataframe ---			
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))			
# Rename column names			
colnames(tcelsa)			
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"			
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"			
#Eliminando las filas no importantes			
tcelsa0418 <- tcelsa[-c(1:1),	 ]		
#Variable year			
tcelsa0418$year <- 2018			
tcelsa0418$month <- "Apr"			
#La variable "date"			
tcelsa0418$date <- format(lubridate::ymd(paste0(tcelsa0418$year,	tcelsa0418$month,	01)),	 "%m-%Y")
#Nombre de las filas ---			
row.names(tcelsa0418) <- tcelsa0418$date			

#Mayo 2018 ---------------------------------------------------
library(readxl)			
tcelsa <- read_excel("s_sa_0518.xls.xlsx",	 range = "B86:L152")		
#Cambiando nombres de variables			
names(tcelsa)[names(tcelsa) == "Total"] <- "May"			
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"			
keeps <- c("Saldo",			
           "May")			
tcelsa = tcelsa[keeps]			
#Eliminando columnas vacias ---			
tcelsa <- na.omit(tcelsa)			
#Eliminando las filas no importantes			
tcelsa <- tcelsa[-c(2:60),]		
tcelsa <- tcelsa[-c(3:4),	 ]		
# Transponiendo el dataframe ---			
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))			
# Rename column names			
colnames(tcelsa)			
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"			
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"			
#Eliminando las filas no importantes			
tcelsa0518 <- tcelsa[-c(1:1),	 ]		
#Variable year			
tcelsa0518$year <- 2018			
tcelsa0518$month <- "May"			
#La variable "date"			
tcelsa0518$date <- format(lubridate::ymd(paste0(tcelsa0518$year,	tcelsa0518$month,	01)),	 "%m-%Y")
#Nombre de las filas ---			
row.names(tcelsa0518) <- tcelsa0518$date			

#Junio 2018 ---------------------------------------------------
library(readxl)			
tcelsa <- read_excel("s_sa_0618.xls.xlsx",	 range = "B86:L152")		
#Cambiando nombres de variables			
names(tcelsa)[names(tcelsa) == "Total"] <- "Jun"			
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"			
keeps <- c("Saldo",			
           "Jun")			
tcelsa = tcelsa[keeps]			
#Eliminando columnas vacias ---			
tcelsa <- na.omit(tcelsa)			
#Eliminando las filas no importantes			
tcelsa <- tcelsa[-c(2:60),]		
tcelsa <- tcelsa[-c(3:4),	 ]		
# Transponiendo el dataframe ---			
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))			
# Rename column names			
colnames(tcelsa)			
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"			
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"			
#Eliminando las filas no importantes			
tcelsa0618 <- tcelsa[-c(1:1),	 ]		
#Variable year			
tcelsa0618$year <- 2018			
tcelsa0618$month <- "Jun"			
#La variable "date"			
tcelsa0618$date <- format(lubridate::ymd(paste0(tcelsa0618$year,	tcelsa0618$month,	01)),	 "%m-%Y")
#Nombre de las filas ---			
row.names(tcelsa0618) <- tcelsa0618$date			

#Julio 2018 ---------------------------------------------------
library(readxl)			
tcelsa <- read_excel("s_sa_0718.xls.xlsx",	 range = "B86:L152")		
#Cambiando nombres de variables			
names(tcelsa)[names(tcelsa) == "Total"] <- "Jul"			
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"			
keeps <- c("Saldo",			
           "Jul")			
tcelsa = tcelsa[keeps]			
#Eliminando columnas vacias ---			
tcelsa <- na.omit(tcelsa)			
#Eliminando las filas no importantes			
tcelsa <- tcelsa[-c(2:60),]		
tcelsa <- tcelsa[-c(3:4),	 ]		
# Transponiendo el dataframe ---			
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))			
# Rename column names			
colnames(tcelsa)			
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"			
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"			
#Eliminando las filas no importantes			
tcelsa0718 <- tcelsa[-c(1:1),	 ]		
#Variable year			
tcelsa0718$year <- 2018			
tcelsa0718$month <- "Jul"			
#La variable "date"			
tcelsa0718$date <- format(lubridate::ymd(paste0(tcelsa0718$year,	tcelsa0718$month,	01)),	 "%m-%Y")
#Nombre de las filas ---			
row.names(tcelsa0718) <- tcelsa0718$date			

#Agosto 2018 ---------------------------------------------------
library(readxl)			
tcelsa <- read_excel("s_sa_0818.xls.xlsx",	 range = "B86:L152")		
#Cambiando nombres de variables			
names(tcelsa)[names(tcelsa) == "Total"] <- "Aug"			
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"			
keeps <- c("Saldo",			
           "Aug")			
tcelsa = tcelsa[keeps]			
#Eliminando columnas vacias ---			
tcelsa <- na.omit(tcelsa)			
#Eliminando las filas no importantes			
tcelsa <- tcelsa[-c(2:60),]		
tcelsa <- tcelsa[-c(3:4),	 ]		
# Transponiendo el dataframe ---			
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))			
# Rename column names			
colnames(tcelsa)			
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"			
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"			
#Eliminando las filas no importantes			
tcelsa0818 <- tcelsa[-c(1:1),	 ]		
#Variable year			
tcelsa0818$year <- 2018			
tcelsa0818$month <- "Aug"			
#La variable "date"			
tcelsa0818$date <- format(lubridate::ymd(paste0(tcelsa0818$year,	tcelsa0818$month,	01)),	 "%m-%Y")
#Nombre de las filas ---			
row.names(tcelsa0818) <- tcelsa0818$date			

#Septiembre 2018 ---------------------------------------------------
library(readxl)			
tcelsa <- read_excel("s_sa_0918.xls.xlsx",	 range = "B86:L152")		
#Cambiando nombres de variables			
names(tcelsa)[names(tcelsa) == "Total"] <- "Sep"			
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"			
keeps <- c("Saldo",			
           "Sep")			
tcelsa = tcelsa[keeps]			
#Eliminando columnas vacias ---			
tcelsa <- na.omit(tcelsa)			
#Eliminando las filas no importantes			
tcelsa <- tcelsa[-c(2:60),]		
tcelsa <- tcelsa[-c(3:4),	 ]		
# Transponiendo el dataframe ---			
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))			
# Rename column names			
colnames(tcelsa)			
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"			
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"			
#Eliminando las filas no importantes			
tcelsa0918 <- tcelsa[-c(1:1),	 ]		
#Variable year			
tcelsa0918$year <- 2018			
tcelsa0918$month <- "Sep"			
#La variable "date"			
tcelsa0918$date <- format(lubridate::ymd(paste0(tcelsa0918$year,	tcelsa0918$month,	01)),	 "%m-%Y")
#Nombre de las filas ---			
row.names(tcelsa0918) <- tcelsa0918$date			

#Octubre 2018 ---------------------------------------------------
library(readxl)			
tcelsa <- read_excel("s_sa_1018.xls.xlsx",	 range = "B86:L152")		
#Cambiando nombres de variables			
names(tcelsa)[names(tcelsa) == "Total"] <- "Oct"			
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"			
keeps <- c("Saldo",			
           "Oct")			
tcelsa = tcelsa[keeps]			
#Eliminando columnas vacias ---			
tcelsa <- na.omit(tcelsa)			
#Eliminando las filas no importantes			
tcelsa <- tcelsa[-c(2:60),]		
tcelsa <- tcelsa[-c(3:4),	 ]		
# Transponiendo el dataframe ---			
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))			
# Rename column names			
colnames(tcelsa)			
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"			
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"			
#Eliminando las filas no importantes			
tcelsa1018 <- tcelsa[-c(1:1),	 ]		
#Variable year			
tcelsa1018$year <- 2018			
tcelsa1018$month <- "Oct"			
#La variable "date"			
tcelsa1018$date <- format(lubridate::ymd(paste0(tcelsa1018$year,	tcelsa1018$month,	01)),	 "%m-%Y")
#Nombre de las filas ---			
row.names(tcelsa1018) <- tcelsa1018$date			

#Noviembre 2018 ---------------------------------------------------
library(readxl)			
tcelsa <- read_excel("s_sa_1118.xls.xlsx",	 range = "B86:L152")		
#Cambiando nombres de variables			
names(tcelsa)[names(tcelsa) == "Total"] <- "Nov"			
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"			
keeps <- c("Saldo",			
           "Nov")			
tcelsa = tcelsa[keeps]			
#Eliminando columnas vacias ---			
tcelsa <- na.omit(tcelsa)			
#Eliminando las filas no importantes			
tcelsa <- tcelsa[-c(2:60),]		
tcelsa <- tcelsa[-c(3:4),	 ]		
# Transponiendo el dataframe ---			
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))			
# Rename column names			
colnames(tcelsa)			
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"			
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"			
#Eliminando las filas no importantes			
tcelsa1118 <- tcelsa[-c(1:1),	 ]		
#Variable year			
tcelsa1118$year <- 2018			
tcelsa1118$month <- "Nov"			
#La variable "date"			
tcelsa1118$date <- format(lubridate::ymd(paste0(tcelsa1118$year,	tcelsa1118$month,	01)),	 "%m-%Y")
#Nombre de las filas ---			
row.names(tcelsa1118) <- tcelsa1118$date			

#Diciembre 2018 ---------------------------------------------------
library(readxl)			
tcelsa <- read_excel("s_sa_1218.xls.xlsx",	 range = "B86:L152")		
#Cambiando nombres de variables			
names(tcelsa)[names(tcelsa) == "Total"] <- "Dec"			
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"			
keeps <- c("Saldo",			
           "Dec")			
tcelsa = tcelsa[keeps]			
#Eliminando columnas vacias ---			
tcelsa <- na.omit(tcelsa)			
#Eliminando las filas no importantes			
tcelsa <- tcelsa[-c(2:60),]		
tcelsa <- tcelsa[-c(3:4),	 ]		
# Transponiendo el dataframe ---			
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))			
# Rename column names			
colnames(tcelsa)			
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"			
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"			
#Eliminando las filas no importantes			
tcelsa1218 <- tcelsa[-c(1:1),	 ]		
#Variable year			
tcelsa1218$year <- 2018			
tcelsa1218$month <- "Dec"			
#La variable "date"			
tcelsa1218$date <- format(lubridate::ymd(paste0(tcelsa1218$year,	tcelsa1218$month,	01)),	 "%m-%Y")
#Nombre de las filas ---			
row.names(tcelsa1218) <- tcelsa1218$date			



#Enero 2019 ---------------------------------------------------						
library(readxl)						
tcelsa <- read_excel("s_sa_0119.xls.xlsx",	 range = "B86:L152")					
#Cambiando nombres de variables						
names(tcelsa)[names(tcelsa) == "Total"] <- "Jan"						
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"						
keeps <- c("Saldo"	,					
           "Jan")						
tcelsa = tcelsa[keeps]						
#Eliminando columnas vacias ---						
tcelsa <- na.omit(tcelsa)						
#Eliminando las filas no importantes						
tcelsa <- tcelsa[-c(2:60),	 ]					
tcelsa <- tcelsa[-c(3:4),	 ]					
# Transponiendo el dataframe ---						
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))						
# Rename column names						
colnames(tcelsa)						
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"						
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"						
#Eliminando las filas no importantes						
tcelsa0119 <- tcelsa[-c(1:1),	 ]					
#Variable year						
tcelsa0119$year <- 2019						
tcelsa0119$month <- "Jan"						
#La variable "date"						
tcelsa0119$date <- format(lubridate::ymd(paste0(tcelsa0119$year,	tcelsa0119$month,	01)),	 "%m-%Y")			
#Nombre de las filas ---						
row.names(tcelsa0119) <- tcelsa0119$date						

#Febrero 2019 ---------------------------------------------------						
library(readxl)						
tcelsa <- read_excel("s_sa_0219.xls.xlsx",		 range = "B86:L152")				
#Cambiando nombres de variables						
names(tcelsa)[names(tcelsa) == "Total"] <- "Feb"						
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"						
keeps <- c("Saldo"	,					
           "Feb")						
tcelsa = tcelsa[keeps]						
#Eliminando columnas vacias ---						
tcelsa <- na.omit(tcelsa)						
#Eliminando las filas no importantes						
tcelsa <- tcelsa[-c(2:60),	 ]					
tcelsa <- tcelsa[-c(3:4),	]					
# Transponiendo el dataframe ---						
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))						
# Rename column names						
colnames(tcelsa)						
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"						
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"						
#Eliminando las filas no importantes						
tcelsa0219 <- tcelsa[-c(1:1),		 ]				
#Variable year						
tcelsa0219$year <- 2019						
tcelsa0219$month <- "Feb"						
#La variable "date"						
tcelsa0219$date <- format(lubridate::ymd(paste0(tcelsa0219$year,		tcelsa0219$month,		01)),		 "%m-%Y")
#Nombre de las filas ---						
row.names(tcelsa0219) <- tcelsa0219$date						

#Marzo 2019 ---------------------------------------------------						
library(readxl)						
tcelsa <- read_excel("s_sa_0319.xls.xlsx",		 range = "B86:L152")				
#Cambiando nombres de variables						
names(tcelsa)[names(tcelsa) == "Total"] <- "Mar"						
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"						
keeps <- c("Saldo"	,					
           "Mar")						
tcelsa = tcelsa[keeps]						
#Eliminando columnas vacias ---						
tcelsa <- na.omit(tcelsa)						
#Eliminando las filas no importantes						
tcelsa <- tcelsa[-c(2:60),	 ]					
tcelsa <- tcelsa[-c(3:4),		 ]				
# Transponiendo el dataframe ---						
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))						
# Rename column names						
colnames(tcelsa)						
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"						
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"						
#Eliminando las filas no importantes						
tcelsa0319 <- tcelsa[-c(1:1),		 ]				
#Variable year						
tcelsa0319$year <- 2019						
tcelsa0319$month <- "Mar"						
#La variable "date"						
tcelsa0319$date <- format(lubridate::ymd(paste0(tcelsa0319$year,		tcelsa0319$month,		01)),		 "%m-%Y")
#Nombre de las filas ---						
row.names(tcelsa0319) <- tcelsa0319$date						

#Abril 2019 ---------------------------------------------------						
library(readxl)						
tcelsa <- read_excel("s_sa_0419.xls.xlsx",		 range = "B86:L152")				
#Cambiando nombres de variables						
names(tcelsa)[names(tcelsa) == "Total"] <- "Apr"						
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"						
keeps <- c("Saldo"	,					
           "Apr")						
tcelsa = tcelsa[keeps]						
#Eliminando columnas vacias ---						
tcelsa <- na.omit(tcelsa)						
#Eliminando las filas no importantes						
tcelsa <- tcelsa[-c(2:60),	 ]					
tcelsa <- tcelsa[-c(3:4),		 ]				
# Transponiendo el dataframe ---						
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))						
# Rename column names						
colnames(tcelsa)						
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"						
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"						
#Eliminando las filas no importantes						
tcelsa0419 <- tcelsa[-c(1:1),		 ]				
#Variable year						
tcelsa0419$year <- 2019						
tcelsa0419$month <- "Apr"						
#La variable "date"						
tcelsa0419$date <- format(lubridate::ymd(paste0(tcelsa0419$year,		tcelsa0419$month,		01)),		 "%m-%Y")
#Nombre de las filas ---						
row.names(tcelsa0419) <- tcelsa0419$date						

#Mayo 2019 ---------------------------------------------------						
library(readxl)						
tcelsa <- read_excel("s_sa_0519.xls.xlsx",		 range = "B86:L152")				
#Cambiando nombres de variables						
names(tcelsa)[names(tcelsa) == "Total"] <- "May"						
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"						
keeps <- c("Saldo"	,					
           "May")						
tcelsa = tcelsa[keeps]						
#Eliminando columnas vacias ---						
tcelsa <- na.omit(tcelsa)						
#Eliminando las filas no importantes						
tcelsa <- tcelsa[-c(2:60),	 ]					
tcelsa <- tcelsa[-c(3:4),		 ]				
# Transponiendo el dataframe ---						
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))						
# Rename column names						
colnames(tcelsa)						
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"						
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"						
#Eliminando las filas no importantes						
tcelsa0519 <- tcelsa[-c(1:1),		 ]				
#Variable year						
tcelsa0519$year <- 2019						
tcelsa0519$month <- "May"						
#La variable "date"						
tcelsa0519$date <- format(lubridate::ymd(paste0(tcelsa0519$year,		tcelsa0519$month,		01)),		 "%m-%Y")
#Nombre de las filas ---						
row.names(tcelsa0519) <- tcelsa0519$date						

#Junio 2019 ---------------------------------------------------						
library(readxl)						
tcelsa <- read_excel("s_sa_0619.xls.xlsx",		 range = "B86:L152")				
#Cambiando nombres de variables						
names(tcelsa)[names(tcelsa) == "Total"] <- "Jun"						
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"						
keeps <- c("Saldo"	,					
           "Jun")						
tcelsa = tcelsa[keeps]						
#Eliminando columnas vacias ---						
tcelsa <- na.omit(tcelsa)						
#Eliminando las filas no importantes						
tcelsa <- tcelsa[-c(2:60),	 ]					
tcelsa <- tcelsa[-c(3:4),		 ]				
# Transponiendo el dataframe ---						
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))						
# Rename column names						
colnames(tcelsa)						
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"						
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"						
#Eliminando las filas no importantes						
tcelsa0619 <- tcelsa[-c(1:1),		 ]				
#Variable year						
tcelsa0619$year <- 2019						
tcelsa0619$month <- "Jun"						
#La variable "date"						
tcelsa0619$date <- format(lubridate::ymd(paste0(tcelsa0619$year	,	tcelsa0619$month,		01)),		 "%m-%Y")
#Nombre de las filas ---						
row.names(tcelsa0619) <- tcelsa0619$date						

#Julio 2019 ---------------------------------------------------						
library(readxl)						
tcelsa <- read_excel("s_sa_0719.xls.xlsx",		 range = "B86:L152")				
#Cambiando nombres de variables						
names(tcelsa)[names(tcelsa) == "Total"] <- "Jul"						
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"						
keeps <- c("Saldo"	,					
           "Jul")						
tcelsa = tcelsa[keeps]						
#Eliminando columnas vacias ---						
tcelsa <- na.omit(tcelsa)						
#Eliminando las filas no importantes						
tcelsa <- tcelsa[-c(2:60),	 ]					
tcelsa <- tcelsa[-c(3:4),		 ]				
# Transponiendo el dataframe ---						
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))						
# Rename column names						
colnames(tcelsa)						
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"						
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"						
#Eliminando las filas no importantes						
tcelsa0719 <- tcelsa[-c(1:1),		 ]				
#Variable year						
tcelsa0719$year <- 2019						
tcelsa0719$month <- "Jul"						
#La variable "date"						
tcelsa0719$date <- format(lubridate::ymd(paste0(tcelsa0719$year	,	tcelsa0719$month	,	01))	,	 "%m-%Y")
#Nombre de las filas ---						
row.names(tcelsa0719) <- tcelsa0719$date						

#Agosto 2019 ---------------------------------------------------						
library(readxl)						
tcelsa <- read_excel("s_sa_0819.xls.xlsx",		 range = "B86:L152")				
#Cambiando nombres de variables						
names(tcelsa)[names(tcelsa) == "Total"] <- "Aug"						
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"						
keeps <- c("Saldo"	,					
           "Aug")						
tcelsa = tcelsa[keeps]						
#Eliminando columnas vacias ---						
tcelsa <- na.omit(tcelsa)						
#Eliminando las filas no importantes						
tcelsa <- tcelsa[-c(2:60),	 ]					
tcelsa <- tcelsa[-c(3:4)	,	 ]				
# Transponiendo el dataframe ---						
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))						
# Rename column names						
colnames(tcelsa)						
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"						
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"						
#Eliminando las filas no importantes						
tcelsa0819 <- tcelsa[-c(1:1)	,	 ]				
#Variable year						
tcelsa0819$year <- 2019						
tcelsa0819$month <- "Aug"						
#La variable "date"						
tcelsa0819$date <- format(lubridate::ymd(paste0(tcelsa0819$year	,	tcelsa0819$month	,	01))	,	 "%m-%Y")
#Nombre de las filas ---						
row.names(tcelsa0819) <- tcelsa0819$date						

#Septiembre 2019 ---------------------------------------------------						
library(readxl)						
tcelsa <- read_excel("s_sa_0919.xls.xlsx",		 range = "B86:L152")				
#Cambiando nombres de variables						
names(tcelsa)[names(tcelsa) == "Total"] <- "Sep"						
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"						
keeps <- c("Saldo"	,					
           "Sep")						
tcelsa = tcelsa[keeps]						
#Eliminando columnas vacias ---						
tcelsa <- na.omit(tcelsa)						
#Eliminando las filas no importantes						
tcelsa <- tcelsa[-c(2:60),	 ]					
tcelsa <- tcelsa[-c(3:4),		 ]				
# Transponiendo el dataframe ---						
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))						
# Rename column names						
colnames(tcelsa)						
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"						
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"						
#Eliminando las filas no importantes						
tcelsa0919 <- tcelsa[-c(1:1),		 ]				
#Variable year						
tcelsa0919$year <- 2019						
tcelsa0919$month <- "Sep"						
#La variable "date"						
tcelsa0919$date <- format(lubridate::ymd(paste0(tcelsa0919$year	,	tcelsa0919$month,		01))		, "%m-%Y")
#Nombre de las filas ---						
row.names(tcelsa0919) <- tcelsa0919$date						

#Octubre 2019 ---------------------------------------------------						
library(readxl)						
tcelsa <- read_excel("s_sa_1019.xls.xlsx",		 range = "B86:L152")				
#Cambiando nombres de variables						
names(tcelsa)[names(tcelsa) == "Total"] <- "Oct"						
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"						
keeps <- c("Saldo"	,					
           "Oct")						
tcelsa = tcelsa[keeps]						
#Eliminando columnas vacias ---						
tcelsa <- na.omit(tcelsa)						
#Eliminando las filas no importantes						
tcelsa <- tcelsa[-c(2:60),	 ]					
tcelsa <- tcelsa[-c(3:4),		 ]				
# Transponiendo el dataframe ---						
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))						
# Rename column names						
colnames(tcelsa)						
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"						
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"						
#Eliminando las filas no importantes						
tcelsa1019 <- tcelsa[-c(1:1),		 ]				
#Variable year						
tcelsa1019$year <- 2019						
tcelsa1019$month <- "Oct"						
#La variable "date"						
tcelsa1019$date <- format(lubridate::ymd(paste0(tcelsa1019$year	,	tcelsa1019$month	,	01))		, "%m-%Y")
#Nombre de las filas ---						
row.names(tcelsa1019) <- tcelsa1019$date						

#Noviembre 2019 ---------------------------------------------------						
library(readxl)						
tcelsa <- read_excel("s_sa_1119.xls.xlsx",		 range = "B86:L152")				
#Cambiando nombres de variables						
names(tcelsa)[names(tcelsa) == "Total"] <- "Nov"						
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"						
keeps <- c("Saldo"	,					
           "Nov")						
tcelsa = tcelsa[keeps]						
#Eliminando columnas vacias ---						
tcelsa <- na.omit(tcelsa)						
#Eliminando las filas no importantes						
tcelsa <- tcelsa[-c(2:60),	 ]					
tcelsa <- tcelsa[-c(3:4),		 ]				
# Transponiendo el dataframe ---						
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))						
# Rename column names						
colnames(tcelsa)						
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"						
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"						
#Eliminando las filas no importantes						
tcelsa1119 <- tcelsa[-c(1:1),		 ]				
#Variable year						
tcelsa1119$year <- 2019						
tcelsa1119$month <- "Nov"						
#La variable "date"						
tcelsa1119$date <- format(lubridate::ymd(paste0(tcelsa1119$year	,	tcelsa1119$month,		01))	,	 "%m-%Y")
#Nombre de las filas ---						
row.names(tcelsa1119) <- tcelsa1119$date						

#Diciembre 2019 ---------------------------------------------------						
library(readxl)						
tcelsa <- read_excel("s_sa_1219.xls.xlsx",		 range = "B86:L152")				
#Cambiando nombres de variables						
names(tcelsa)[names(tcelsa) == "Total"] <- "Dec"						
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"						
keeps <- c("Saldo"	,					
           "Dec")						
tcelsa = tcelsa[keeps]						
#Eliminando columnas vacias ---						
tcelsa <- na.omit(tcelsa)						
#Eliminando las filas no importantes						
tcelsa <- tcelsa[-c(2:60),	 ]					
tcelsa <- tcelsa[-c(3:4),		 ]				
# Transponiendo el dataframe ---						
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))						
# Rename column names						
colnames(tcelsa)						
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"						
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"						
#Eliminando las filas no importantes						
tcelsa1219 <- tcelsa[-c(1:1),		 ]				
#Variable year						
tcelsa1219$year <- 2019						
tcelsa1219$month <- "Dec"						
#La variable "date"						
tcelsa1219$date <- format(lubridate::ymd(paste0(tcelsa1219$year	,	tcelsa1219$month,		01)),		 "%m-%Y")
#Nombre de las filas ---						
row.names(tcelsa1219) <- tcelsa1219$date						

#Enero 2020 ---------------------------------------------------									
library(readxl)									
tcelsa <- read_excel("s_sa_0120.xls.xlsx"	,	 range = "B86:L152")							
#Cambiando nombres de variables									
names(tcelsa)[names(tcelsa) == "Total"] <- "Jan"									
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"									
keeps <- c("Saldo",									
           "Jan")									
tcelsa = tcelsa[keeps]									
#Eliminando columnas vacias ---									
tcelsa <- na.omit(tcelsa)									
#Eliminando las filas no importantes									
tcelsa <- tcelsa[-c(2:60)	,	 ]							
tcelsa <- tcelsa[-c(3:4)	,	 ]							
# Transponiendo el dataframe ---									
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))									
# Rename column names									
colnames(tcelsa)									
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"									
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"									
#Eliminando las filas no importantes									
tcelsa0120 <- tcelsa[-c(1:1)	,	 ]							
#Variable year									
tcelsa0120$year <- 2020									
tcelsa0120$month <- "Jan"									
#La variable "date"									
tcelsa0120$date <- format(lubridate::ymd(paste0(tcelsa0120$year	,	tcelsa0120$month	,	01))	,	 "%m-%Y")			
#Nombre de las filas ---									
row.names(tcelsa0120) <- tcelsa0120$date									

#Febrero 2020 ---------------------------------------------------									
library(readxl)									
tcelsa <- read_excel("s_sa_0220.xls.xlsx"		,	 range = "B86:L152")						
#Cambiando nombres de variables									
names(tcelsa)[names(tcelsa) == "Total"] <- "Feb"									
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"									
keeps <- c("Saldo",									
           "Feb")									
tcelsa = tcelsa[keeps]									
#Eliminando columnas vacias ---									
tcelsa <- na.omit(tcelsa)									
#Eliminando las filas no importantes									
tcelsa <- tcelsa[-c(2:60)	,	 ]							
tcelsa <- tcelsa[-c(3:4)	,	]							
# Transponiendo el dataframe ---									
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))									
# Rename column names									
colnames(tcelsa)									
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"									
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"									
#Eliminando las filas no importantes									
tcelsa0220 <- tcelsa[-c(1:1)		,	 ]						
#Variable year									
tcelsa0220$year <- 2020									
tcelsa0220$month <- "Feb"									
#La variable "date"									
tcelsa0220$date <- format(lubridate::ymd(paste0(tcelsa0220$year		,	tcelsa0220$month		,	01))		,	 "%m-%Y")
#Nombre de las filas ---									
row.names(tcelsa0220) <- tcelsa0220$date									

#Marzo 2020 ---------------------------------------------------									
library(readxl)									
tcelsa <- read_excel("s_sa_0320.xls.xlsx"		,	 range = "B86:L152")						
#Cambiando nombres de variables									
names(tcelsa)[names(tcelsa) == "Total"] <- "Mar"									
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"									
keeps <- c("Saldo",									
           "Mar")									
tcelsa = tcelsa[keeps]									
#Eliminando columnas vacias ---									
tcelsa <- na.omit(tcelsa)									
#Eliminando las filas no importantes									
tcelsa <- tcelsa[-c(2:60)	,	 ]							
tcelsa <- tcelsa[-c(3:4)		,	 ]						
# Transponiendo el dataframe ---									
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))									
# Rename column names									
colnames(tcelsa)									
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"									
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"									
#Eliminando las filas no importantes									
tcelsa0320 <- tcelsa[-c(1:1)	,	 ]							
#Variable year									
tcelsa0320$year <- 2020									
tcelsa0320$month <- "Mar"									
#La variable "date"									
tcelsa0320$date <- format(lubridate::ymd(paste0(tcelsa0320$year		,	tcelsa0320$month		,	01))		,	 "%m-%Y")
#Nombre de las filas ---									
row.names(tcelsa0320) <- tcelsa0320$date									

#Abril 2020 ---------------------------------------------------									
library(readxl)									
tcelsa <- read_excel("s_sa_0420.xls.xlsx"		,	 range = "B86:L152")						
#Cambiando nombres de variables									
names(tcelsa)[names(tcelsa) == "Total"] <- "Apr"									
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"									
keeps <- c("Saldo",									
           "Apr")									
tcelsa = tcelsa[keeps]									
#Eliminando columnas vacias ---									
tcelsa <- na.omit(tcelsa)									
#Eliminando las filas no importantes									
tcelsa <- tcelsa[-c(2:60)	,	 ]							
tcelsa <- tcelsa[-c(3:4)		,	 ]						
# Transponiendo el dataframe ---									
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))									
# Rename column names									
colnames(tcelsa)									
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"									
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"									
#Eliminando las filas no importantes									
tcelsa0420 <- tcelsa[-c(1:1)		,	 ]						
#Variable year									
tcelsa0420$year <- 2020									
tcelsa0420$month <- "Apr"									
#La variable "date"									
tcelsa0420$date <- format(lubridate::ymd(paste0(tcelsa0420$year		,	tcelsa0420$month		,	01))		,	 "%m-%Y")
#Nombre de las filas ---									
row.names(tcelsa0420) <- tcelsa0420$date									

#Mayo 2020 ---------------------------------------------------									
library(readxl)									
tcelsa <- read_excel("s_sa_0520.xls.xlsx"		,	 range = "B86:L152")						
#Cambiando nombres de variables									
names(tcelsa)[names(tcelsa) == "Total"] <- "May"									
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"									
keeps <- c("Saldo",									
           "May")									
tcelsa = tcelsa[keeps]									
#Eliminando columnas vacias ---									
tcelsa <- na.omit(tcelsa)									
#Eliminando las filas no importantes									
tcelsa <- tcelsa[-c(2:60)	,	 ]							
tcelsa <- tcelsa[-c(3:4)		,	 ]						
# Transponiendo el dataframe ---									
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))									
# Rename column names									
colnames(tcelsa)									
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"									
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"									
#Eliminando las filas no importantes									
tcelsa0520 <- tcelsa[-c(1:1)		,	 ]						
#Variable year									
tcelsa0520$year <- 2020									
tcelsa0520$month <- "May"									
#La variable "date"									
tcelsa0520$date <- format(lubridate::ymd(paste0(tcelsa0520$year		,	tcelsa0520$month		,	01))		,	 "%m-%Y")
#Nombre de las filas ---									
row.names(tcelsa0520) <- tcelsa0520$date									

#Junio 2020 ---------------------------------------------------									
library(readxl)									
tcelsa <- read_excel("s_sa_0620.xls.xlsx"		,	 range = "B86:L152")						
#Cambiando nombres de variables									
names(tcelsa)[names(tcelsa) == "Total"] <- "Jun"									
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"									
keeps <- c("Saldo",									
           "Jun")									
tcelsa = tcelsa[keeps]									
#Eliminando columnas vacias ---									
tcelsa <- na.omit(tcelsa)									
#Eliminando las filas no importantes									
tcelsa <- tcelsa[-c(2:60)	,	 ]							
tcelsa <- tcelsa[-c(3:4)		,	 ]						
# Transponiendo el dataframe ---									
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))									
# Rename column names									
colnames(tcelsa)									
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"									
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"									
#Eliminando las filas no importantes									
tcelsa0620 <- tcelsa[-c(1:1)		,	 ]						
#Variable year									
tcelsa0620$year <- 2020									
tcelsa0620$month <- "Jun"									
#La variable "date"									
tcelsa0620$date <- format(lubridate::ymd(paste0(tcelsa0620$year		,	tcelsa0620$month		,	01))		,	 "%m-%Y")
#Nombre de las filas ---									
row.names(tcelsa0620) <- tcelsa0620$date									

#Julio 2020 ---------------------------------------------------									
library(readxl)									
tcelsa <- read_excel("s_sa_0720.xls.xlsx"		,	 range = "A83:L152")						
#Cambiando nombres de variables									
names(tcelsa)[names(tcelsa) == "Total"] <- "Jul"									
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"									
keeps <- c("Saldo",
           "Jul")									
tcelsa = tcelsa[keeps]									
#Eliminando columnas vacias ---									
tcelsa <- na.omit(tcelsa)									
#Eliminando las filas no importantes									
tcelsa <- tcelsa[-c(2:60)	,	 ]							
tcelsa <- tcelsa[-c(3:4)		,	 ]						
# Transponiendo el dataframe ---									
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))									
# Rename column names									
colnames(tcelsa)									
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"									
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"									
#Eliminando las filas no importantes									
tcelsa0720 <- tcelsa[-c(1:1),	 ]						
#Variable year									
tcelsa0720$year <- 2020									
tcelsa0720$month <- "Jul"									
#La variable "date"									
tcelsa0720$date <- format(lubridate::ymd(paste0(tcelsa0720$year		,	tcelsa0720$month		,	01))		,	 "%m-%Y")
#Nombre de las filas ---									
row.names(tcelsa0720) <- tcelsa0720$date									

#Agosto 2020 ---------------------------------------------------									
library(readxl)									
tcelsa <- read_excel("s_sa_0820.xls.xlsx"		,	 range = "A84:L152")						
#Cambiando nombres de variables									
names(tcelsa)[names(tcelsa) == "Total"] <- "Aug"									
names(tcelsa)[names(tcelsa) == "Destinos Económicos"] <- "Saldo"									
keeps <- c("Saldo",									
           "Aug")									
tcelsa = tcelsa[keeps]									
#Eliminando columnas vacias ---									
tcelsa <- na.omit(tcelsa)									
#Eliminando las filas no importantes									
tcelsa <- tcelsa[-c(2:60)	,	 ]							
tcelsa <- tcelsa[-c(3:4)		,	 ]						
# Transponiendo el dataframe ---									
tcelsa <- as.data.frame(t(as.matrix(tcelsa)))									
# Rename column names									
colnames(tcelsa)									
names(tcelsa)[names(tcelsa) == "V1"] <- "Hipotecario"									
names(tcelsa)[names(tcelsa) == "V2"] <- "Consumo"									
#Eliminando las filas no importantes									
tcelsa0820 <- tcelsa[-c(1:1)		,	 ]						
#Variable year									
tcelsa0820$year <- 2020									
tcelsa0820$month <- "Aug"									
#La variable "date"									
tcelsa0820$date <- format(lubridate::ymd(paste0(tcelsa0820$year		,	tcelsa0820$month		,	01))		,	 "%m-%Y")
#Nombre de las filas ---									
row.names(tcelsa0820) <- tcelsa0820$date									

# cbinPad function ------------------------------
cbindPad <- function(...){
  args <- list(...)
  n <- sapply(args,nrow)
  mx <- max(n)
  pad <- function(x, mx){
    if (nrow(x) < mx){
      nms <- colnames(x)
      padTemp <- matrix(NA, mx - nrow(x), ncol(x))
      colnames(padTemp) <- nms
      if (ncol(x)==0) {
        return(padTemp)
      } else {
        return(rbind(x,padTemp))
      }
    }
    else{
      return(x)
    }
  }
  rs <- lapply(args,pad,mx)
  return(do.call(cbind,rs))
}

# Add datasets vertically-----------------------------------
tcelsalvador <- rbind(tcelsa0118, tcelsa0218, tcelsa0318, 
                      tcelsa0418, tcelsa0518, tcelsa0618, 
                      tcelsa0718, tcelsa0818, tcelsa0918, 
                      tcelsa1018, tcelsa1118, tcelsa1218, 
                      tcelsa0119, tcelsa0219, tcelsa0319, 
                      tcelsa0419, tcelsa0519, tcelsa0619, 
                      tcelsa0719, tcelsa0819, tcelsa0919, 
                      tcelsa1019, tcelsa1119, tcelsa1219, 
                      tcelsa0120, tcelsa0220, tcelsa0320, 
                      tcelsa0420, tcelsa0520, tcelsa0620, 
                      tcelsa0720, tcelsa0820)

#Variable pais
tcelsalvador$Pais <- "El Salvador"

# Variable fecha-------------------------
tcelsalvador$fecha <- lubridate::ymd(paste0(tcelsalvador$year,tcelsalvador$month,"01"))

#Nombre de las filas ---
row.names(tcelsalvador) <- tcelsalvador$fecha

#from character to numeric-----------
tcelsalvador$Hipotecario <- as.numeric(as.character(tcelsalvador$Hipotecario))
tcelsalvador$Consumo <- as.numeric(as.character(tcelsalvador$Consumo))

# Exportando --------------------------------------------
write.csv(tcelsalvador,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_ElSalvador\\tcelsalvador.csv", row.names = FALSE)
write.csv(tcelsalvador,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcelsalvador.csv", row.names = FALSE)

# graphs ------------------------------

library(ggplot2)
library(dplyr)
library(hrbrthemes)
colnames(tcelsalvador)
#
Hipotecario <- tcelsalvador%>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Hipotecario)) +
  geom_line() +
  geom_point() +
  ggtitle("EL SALVADOR crédito inmobiliario") +
  xlab("Date") + ylab("MM dolares")
Hipotecario

#
Consumo <- tcelsalvador%>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Consumo)) +
  geom_line() +
  geom_point() +
  ggtitle("EL SALVADOR crédito de consumo") +
  xlab("Date") + ylab("MM dolares")
Consumo

save(tcelsalvador,file="tcelsalvador.Rda")

#################################################################
######################GUATEMALA##################################
#################################################################
# Importando datos --------------------------------------------
#rm(list = ls())
# Enero 2018 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2018ene.xls.xlsx", range = "A6:F25")
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0118 <- tcguate[-c(1:18), ]
#Variable year
tcguate0118$year <- 2018
tcguate0118$month <- "Jan"
#La variable "date"
tcguate0118$date <- format(lubridate::ymd(paste0(tcguate0118$year,tcguate0118$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0118) <- tcguate0118$date

# Febrero 2018 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2018feb.xls.xlsx", range = "A6:F25")
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0218 <- tcguate[-c(1:18), ]
#Variable year
tcguate0218$year <- 2018
tcguate0218$month <- "Feb"
#La variable "date"
tcguate0218$date <- format(lubridate::ymd(paste0(tcguate0218$year,tcguate0218$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0218) <- tcguate0218$date

# Marzo 2018 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2018mar.xls.xlsx", range = "A6:F25")
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0318 <- tcguate[-c(1:18), ]
#Variable year
tcguate0318$year <- 2018
tcguate0318$month <- "Mar"
#La variable "date"
tcguate0318$date <- format(lubridate::ymd(paste0(tcguate0318$year,tcguate0318$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0318) <- tcguate0318$date

# Abril 2018 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2018abr.xls.xlsx", range = "A6:F25")
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0418 <- tcguate[-c(1:18), ]
#Variable year
tcguate0418$year <- 2018
tcguate0418$month <- "Apr"
#La variable "date"
tcguate0418$date <- format(lubridate::ymd(paste0(tcguate0418$year,tcguate0418$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0418) <- tcguate0418$date

# Mayo 2018 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2018may.xls.xlsx", range = "A6:F25")
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0518 <- tcguate[-c(1:18), ]
#Variable year
tcguate0518$year <- 2018
tcguate0518$month <- "May"
#La variable "date"
tcguate0518$date <- format(lubridate::ymd(paste0(tcguate0518$year,tcguate0518$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0518) <- tcguate0518$date

# Junio 2018 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2018jun.xls.xlsx", range = "A6:F25")
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0618 <- tcguate[-c(1:18), ]
#Variable year
tcguate0618$year <- 2018
tcguate0618$month <- "Jun"
#La variable "date"
tcguate0618$date <- format(lubridate::ymd(paste0(tcguate0618$year,tcguate0618$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0618) <- tcguate0618$date

# Julio 2018 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2018jul.xls.xlsx", range = "A6:F25")
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0718 <- tcguate[-c(1:18), ]
#Variable year
tcguate0718$year <- 2018
tcguate0718$month <- "Jul"
#La variable "date"
tcguate0718$date <- format(lubridate::ymd(paste0(tcguate0718$year,tcguate0718$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0718) <- tcguate0718$date

# Agosto 2018 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2018ago.xls.xlsx", range = "A6:F25")
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0818 <- tcguate[-c(1:18), ]
#Variable year
tcguate0818$year <- 2018
tcguate0818$month <- "Aug"
#La variable "date"
tcguate0818$date <- format(lubridate::ymd(paste0(tcguate0818$year,tcguate0818$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0818) <- tcguate0818$date

# Septiembre 2018 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2018sep.xls.xlsx", range = "A6:F25")
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0918 <- tcguate[-c(1:18), ]
#Variable year
tcguate0918$year <- 2018
tcguate0918$month <- "Sep"
#La variable "date"
tcguate0918$date <- format(lubridate::ymd(paste0(tcguate0918$year,tcguate0918$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0918) <- tcguate0918$date

# Octubre 2018 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2018oct.xls.xlsx", range = "A6:F25")
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate1018 <- tcguate[-c(1:17), ]
#Variable year
tcguate1018$year <- 2018
tcguate1018$month <- "Oct"
#La variable "date"
tcguate1018$date <- format(lubridate::ymd(paste0(tcguate1018$year,tcguate1018$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate1018) <- tcguate1018$date

# Noviembre 2018 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2018nov.xls.xlsx", range = "A6:F25")
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate1118 <- tcguate[-c(1:17), ]
#Variable year
tcguate1118$year <- 2018
tcguate1118$month <- "Nov"
#La variable "date"
tcguate1118$date <- format(lubridate::ymd(paste0(tcguate1118$year,tcguate1118$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate1118) <- tcguate1118$date

# Diciembre 2018 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2018dic.xls.xlsx", range = "A6:F25")
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate1218 <- tcguate[-c(1:17), ]
#Variable year
tcguate1218$year <- 2018
tcguate1218$month <- "Dec"
#La variable "date"
tcguate1218$date <- format(lubridate::ymd(paste0(tcguate1218$year,tcguate1218$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate1218) <- tcguate1218$date


# Enero 2019 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2019ene.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0119 <- tcguate[-c(1:17), ]
#Variable year
tcguate0119$year <- 2019
tcguate0119$month <- "Jan"
#La variable "date"
tcguate0119$date <- format(lubridate::ymd(paste0(tcguate0119$year,tcguate0119$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0119) <- tcguate0119$date

# Febrero 2019 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2019feb.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0219 <- tcguate[-c(1:17), ]
#Variable year
tcguate0219$year <- 2019
tcguate0219$month <- "Feb"
#La variable "date"
tcguate0219$date <- format(lubridate::ymd(paste0(tcguate0219$year,tcguate0219$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0219) <- tcguate0219$date

# Marzo 2019 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2019mar.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0319 <- tcguate[-c(1:17), ]
#Variable year
tcguate0319$year <- 2019
tcguate0319$month <- "Mar"
#La variable "date"
tcguate0319$date <- format(lubridate::ymd(paste0(tcguate0319$year,tcguate0319$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0319) <- tcguate0319$date

# Abril 2019 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2019abr.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0419 <- tcguate[-c(1:17), ]
#Variable year
tcguate0419$year <- 2019
tcguate0419$month <- "Apr"
#La variable "date"
tcguate0419$date <- format(lubridate::ymd(paste0(tcguate0419$year,tcguate0419$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0419) <- tcguate0419$date

# Mayo 2019 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2019may.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0519 <- tcguate[-c(1:17), ]
#Variable year
tcguate0519$year <- 2019
tcguate0519$month <- "May"
#La variable "date"
tcguate0519$date <- format(lubridate::ymd(paste0(tcguate0519$year,tcguate0519$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0519) <- tcguate0519$date

# Junio 2019 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2019jun.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0619 <- tcguate[-c(1:17), ]
#Variable year
tcguate0619$year <- 2019
tcguate0619$month <- "Jun"
#La variable "date"
tcguate0619$date <- format(lubridate::ymd(paste0(tcguate0619$year,tcguate0619$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0619) <- tcguate0619$date

# Julio 2019 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2019jul.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0719 <- tcguate[-c(1:17), ]
#Variable year
tcguate0719$year <- 2019
tcguate0719$month <- "Jul"
#La variable "date"
tcguate0719$date <- format(lubridate::ymd(paste0(tcguate0719$year,tcguate0719$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0719) <- tcguate0719$date

# Agosto 2019 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2019ago.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0819 <- tcguate[-c(1:17), ]
#Variable year
tcguate0819$year <- 2019
tcguate0819$month <- "Aug"
#La variable "date"
tcguate0819$date <- format(lubridate::ymd(paste0(tcguate0819$year,tcguate0819$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0819) <- tcguate0819$date

# Septiembre 2019 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2019sep.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0919 <- tcguate[-c(1:17), ]
#Variable year
tcguate0919$year <- 2019
tcguate0919$month <- "Sep"
#La variable "date"
tcguate0919$date <- format(lubridate::ymd(paste0(tcguate0919$year,tcguate0919$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0919) <- tcguate0919$date

# Octubre 2019 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2019oct.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate1019 <- tcguate[-c(1:17), ]
#Variable year
tcguate1019$year <- 2019
tcguate1019$month <- "Oct"
#La variable "date"
tcguate1019$date <- format(lubridate::ymd(paste0(tcguate1019$year,tcguate1019$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate1019) <- tcguate1019$date

# Noviembre 2019 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2019nov.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate1119 <- tcguate[-c(1:16), ]
#Variable year
tcguate1119$year <- 2019
tcguate1119$month <- "Nov"
#La variable "date"
tcguate1119$date <- format(lubridate::ymd(paste0(tcguate1119$year,tcguate1119$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate1119) <- tcguate1119$date

# Diciembre 2019 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2019dic.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate1219 <- tcguate[-c(1:16), ]
#Variable year
tcguate1219$year <- 2019
tcguate1219$month <- "Dec"
#La variable "date"
tcguate1219$date <- format(lubridate::ymd(paste0(tcguate1219$year,tcguate1219$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate1219) <- tcguate1219$date


# Enero 2020 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2020ene.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0120 <- tcguate[-c(1:16), ]
#Variable year
tcguate0120$year <- 2020
tcguate0120$month <- "Jan"
#La variable "date"
tcguate0120$date <- format(lubridate::ymd(paste0(tcguate0120$year,tcguate0120$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0120) <- tcguate0120$date

# Febrero 2020 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2020feb.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0220 <- tcguate[-c(1:16), ]
#Variable year
tcguate0220$year <- 2020
tcguate0220$month <- "Feb"
#La variable "date"
tcguate0220$date <- format(lubridate::ymd(paste0(tcguate0220$year,tcguate0220$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0220) <- tcguate0220$date

# Marzo 2020 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2020mar.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0320 <- tcguate[-c(1:16), ]
#Variable year
tcguate0320$year <- 2020
tcguate0320$month <- "Mar"
#La variable "date"
tcguate0320$date <- format(lubridate::ymd(paste0(tcguate0320$year,tcguate0320$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0320) <- tcguate0320$date

# Abril 2020 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2020abr.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0420 <- tcguate[-c(1:16), ]
#Variable year
tcguate0420$year <- 2020
tcguate0420$month <- "Apr"
#La variable "date"
tcguate0420$date <- format(lubridate::ymd(paste0(tcguate0420$year,tcguate0420$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0420) <- tcguate0420$date

# Mayo 2020 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2020may.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0520 <- tcguate[-c(1:16), ]
#Variable year
tcguate0520$year <- 2020
tcguate0520$month <- "May"
#La variable "date"
tcguate0520$date <- format(lubridate::ymd(paste0(tcguate0520$year,tcguate0520$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0520) <- tcguate0520$date

# Junio 2020 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2020jun.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0620 <- tcguate[-c(1:16), ]
#Variable year
tcguate0620$year <- 2020
tcguate0620$month <- "Jun"
#La variable "date"
tcguate0620$date <- format(lubridate::ymd(paste0(tcguate0620$year,tcguate0620$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0620) <- tcguate0620$date

# Julio 2020 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2020jul.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0720 <- tcguate[-c(1:16), ]
#Variable year
tcguate0720$year <- 2020
tcguate0720$month <- "Jul"
#La variable "date"
tcguate0720$date <- format(lubridate::ymd(paste0(tcguate0720$year,tcguate0720$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0720) <- tcguate0720$date

# Agosto 2020 --------------------------------------------------
library(readxl)
tcguate <- read_excel("2020ago.xls.xlsx", range = "A6:F25")
#Cambiando nombres de variables
colnames(tcguate) # get column names
names(tcguate)[names(tcguate) == "EMPRESARIAL MAYOR"] <- "Empresarial"
names(tcguate)[names(tcguate) == "EMPRESARIAL MENOR"] <- "Pyme"
names(tcguate)[names(tcguate) == "CONSUMO"] <- "Consumo"
names(tcguate)[names(tcguate) == "MICROCRÉDITO"] <- "Microcredito"
names(tcguate)[names(tcguate) == "HIPOTECARIO PARA VIVIENDA"] <- "Hipotecario"

keeps <- c("Empresarial",
           "Pyme",
           "Consumo",
           "Microcredito",
           "Hipotecario")
tcguate = tcguate[keeps]
#Eliminando columnas vacias ---
tcguate <- na.omit(tcguate)
#Eliminando las filas no importantes
tcguate0820 <- tcguate[-c(1:16), ]
#Variable year
tcguate0820$year <- 2020
tcguate0820$month <- "Aug"
#La variable "date"
tcguate0820$date <- format(lubridate::ymd(paste0(tcguate0820$year,tcguate0820$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcguate0820) <- tcguate0820$date



# cbinPad function ------------------------------
cbindPad <- function(...){
  args <- list(...)
  n <- sapply(args,nrow)
  mx <- max(n)
  pad <- function(x, mx){
    if (nrow(x) < mx){
      nms <- colnames(x)
      padTemp <- matrix(NA, mx - nrow(x), ncol(x))
      colnames(padTemp) <- nms
      if (ncol(x)==0) {
        return(padTemp)
      } else {
        return(rbind(x,padTemp))
      }
    }
    else{
      return(x)
    }
  }
  rs <- lapply(args,pad,mx)
  return(do.call(cbind,rs))
}

# Add datasets vertically-----------------------------------
tcguatemala <- rbind(tcguate0118, tcguate0218, tcguate0318, 
                     tcguate0418, tcguate0518, tcguate0618, 
                     tcguate0718, tcguate0818, tcguate0918, 
                     tcguate1018, tcguate1118, tcguate1218, 
                     tcguate0119, tcguate0219, tcguate0319, 
                     tcguate0419, tcguate0519, tcguate0619, 
                     tcguate0719, tcguate0819, tcguate0919, 
                     tcguate1019, tcguate1119, tcguate1219, 
                     tcguate0120, tcguate0220, tcguate0320, 
                     tcguate0420, tcguate0520, tcguate0620, 
                     tcguate0720, tcguate0820)

#Variable pais
tcguatemala$Pais <- "Guatemala"

# From character to numeric---------------
tcguatemala$Pyme <- as.numeric(gsub(",","",tcguatemala$Pyme))
tcguatemala$Consumo <- as.numeric(gsub(",","",tcguatemala$Consumo))
tcguatemala$Microcredito <- as.numeric(gsub(",","",tcguatemala$Microcredito))
tcguatemala$Hipotecario <- as.numeric(gsub(",","",tcguatemala$Hipotecario))
tcguatemala$Empresarial <- as.numeric(gsub(",","",tcguatemala$Empresarial))
#
tcguatemala$Pyme <- as.numeric(tcguatemala$Pyme)
tcguatemala$Consumo <- as.numeric(tcguatemala$Consumo)
tcguatemala$Microcredito <- as.numeric(tcguatemala$Microcredito)
tcguatemala$Hipotecario <- as.numeric(tcguatemala$Hipotecario)
tcguatemala$Empresarial <- as.numeric(tcguatemala$Empresarial)

# Variable fecha-------------------------
tcguatemala$fecha <- lubridate::ymd(paste0(tcguatemala$year,tcguatemala$month,"01"))

#Nombre de las filas ---
row.names(tcguatemala) <- tcguatemala$fecha

# Exportando --------------------------------------------
write.csv(tcguatemala,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Guatemala\\tcguatemala.csv", row.names = FALSE)
write.csv(tcguatemala,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcguatemala.csv", row.names = FALSE)

# graphs ------------------------------

library(ggplot2)
library(dplyr)
library(hrbrthemes)
colnames(tcguatemala)
#
Hipotecario <- tcguatemala%>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Hipotecario)) +
  geom_line() +
  geom_point() +
  ggtitle("ECUADOR crédito inmobiliario") +
  xlab("Date") + ylab("MM dolares")
Hipotecario

#
Consumo <- tcguatemala%>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Consumo)) +
  geom_line() +
  geom_point() +
  ggtitle("ECUADOR crédito de consumo") +
  xlab("Date") + ylab("MM dolares")
Consumo


#
Empresarial <- tcguatemala%>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Empresarial)) +
  geom_line() +
  geom_point() +
  ggtitle("ECUADOR crédito comercial") +
  xlab("Date") + ylab("MM dolares")
Empresarial

#
Pyme <- tcguatemala%>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Pyme)) +
  geom_line() +
  geom_point() +
  ggtitle("ECUADOR crédito comercial") +
  xlab("Date") + ylab("MM dolares")
Pyme

save(tcguatemala,file="tcguatemala.Rda")

#################################################################
#######################HONDURAS##################################
#################################################################
# TIPO DE CREDITO ---------------------------------------
# Importando datos ---------------------------------------------
##rm(list = ls())
#library(httr)
#list <- c("https://publicaciones.cnbs.gob.hn/boletines/_layouts/15/xlviewer.aspx?id=/boletines/Estados%20Financieros%20NIIF%20a%20partir%20de%20enero%202017/Estados%20Financieros.xlsx&Source=https%3A%2F%2Fpublicaciones%2Ecnbs%2Egob%2Ehn%2Fboletines%2FPaginas%2FEstados%2DFinancieros%2DNIIF%2D%28a%2Dpartir%2Dde%2Denero%2D2017%29%2Easpx")
#for (i in 1:length(list)) {
#  download.file(list[i], destfile = paste0("Honduras", i, ".aspx"),  mode="wb")
#}
#Se puede descargar la informacion si se averigua como descargar excel server files

# Reading the file -----------------------
#rm(list = ls())
library(readxl)
tchond <- read_excel("Estados Financieros.xlsx" ,sheet="ESF (Series Fechas)", range = "B8:ZZ122")

# Renombrando variables -----------------------
colnames(tchond)
names(tchond)[names(tchond) == "CUENTAS"] <- "Name"

tchond <- tchond[-c(2:106), ]

# Transponiendo el dataframe -----------------------
tchonduras <- as.data.frame(t(as.matrix(tchond)))

# Rename column names
colnames(tchonduras)
names(tchonduras)[names(tchonduras) == "V1"] <- "fecha"
names(tchonduras)[names(tchonduras) == "V2"] <- "Comerciales"
names(tchonduras)[names(tchonduras) == "V3"] <- "Empresariales"
names(tchonduras)[names(tchonduras) == "V4"] <- "Pyme"
names(tchonduras)[names(tchonduras) == "V5"] <- "Microcredito"
names(tchonduras)[names(tchonduras) == "V8"] <- "Consumo"
names(tchonduras)[names(tchonduras) == "V9"] <- "Hipotecario"
tchonduras

#Eliminando la primera fila
tchonduras <- tchonduras[-c(1), ]

# Con las variables que interesan-----------
keeps <- c("fecha",
           "Comerciales", 
           "Empresariales", 
           "Hipotecario", 
           "Microcredito",
           "Pyme",
           "Consumo")

tchonduras = tchonduras[keeps]

# Eliminando columnas vacias ----------------------------------
tchondurasm <- na.omit(tchonduras)

#Variable pais
tchondurasm$Pais <- "Honduras"

# Variable Fecha -------------------------
tchondurasm$fecha <- as.numeric(as.character(tchondurasm$fecha))
class(tchondurasm$fecha)
library(openxlsx)
tchondurasm$fecha=openxlsx::convertToDate(tchondurasm$fecha)
row.names(tchondurasm) <- tchondurasm$fecha

# From character to numeric -----------------------------------------
colnames(tchonduras)
class(tchondurasm$date)
tchondurasm$Comerciales <- as.numeric(as.character(tchondurasm$Comerciales))
tchondurasm$Hipotecario <- as.numeric(as.character(tchondurasm$Hipotecario))
tchondurasm$Empresariales <- as.numeric(as.character(tchondurasm$Empresariales))
tchondurasm$Pyme <- as.numeric(as.character(tchondurasm$Pyme))
tchondurasm$Consumo <- as.numeric(as.character(tchondurasm$Consumo))
tchondurasm$Microcredito <- as.numeric(as.character(tchondurasm$Microcredito))
# Exportando --------------------------------------------
write.csv(tchondurasm,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tchondurasm.csv", row.names = FALSE)
write.csv(tchondurasm,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Honduras\\tchondurasm.csv", row.names = FALSE)

# Graphs daily dates------------------------------------------------
#install.packages("ggplot2")
#install.packages("hrbrthemes")
library(ggplot2)
library(dplyr)
library(hrbrthemes)
#colnames(tchondgentina)
Hipotecario <- tchondurasm %>%
  tail(10000) %>%
  ggplot(aes(x=fecha, y=Hipotecario)) +
  geom_line() +
  geom_point() +
  ggtitle("HONDURAS crédito hipotecario") +
  xlab("Date") + ylab("MM pesos")
Hipotecario

#
Comerciales <- tchondurasm %>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Comerciales)) +
  geom_line() +
  geom_point() +
  ggtitle("HONDURAS tarjeta de crédito") +
  xlab("Date") + ylab("MM pesps")
Comerciales

#
Consumo <- tchondurasm %>%
  tail(10000) %>%
  ggplot( aes(x=fecha, y=Consumo)) +
  geom_line() +
  geom_point() +
  ggtitle("HONDURAS crédito de consumo") +
  xlab("Date") + ylab("MM pesos")
Consumo

save(tchonduras,file="tchonduras.Rda")

#################################################################
#########################MEXICO##################################
#################################################################
# TIPO DE CREDITO --------------------
#####BANCA MULTIPLE---------------------------------------
# Importando datos ---------------------------
##rm(list = ls())
#library(httr)
#list <- c("https://publicaciones.cnbs.gob.hn/boletines/_layouts/15/xlviewer.aspx?id=/boletines/Estados%20Financieros%20NIIF%20a%20partir%20de%20enero%202017/Estados%20Financieros.xlsx&Source=https%3A%2F%2Fpublicaciones%2Ecnbs%2Egob%2Ehn%2Fboletines%2FPaginas%2FEstados%2DFinancieros%2DNIIF%2D%28a%2Dpartir%2Dde%2Denero%2D2017%29%2Easpx")
#for (i in 1:length(list)) {
#  download.file(list[i], destfile = paste0("Honduras", i, ".aspx"),  mode="wb")
#}
#Se puede descargar la informacion si se averigua como descargar excel server files

# Reading the file -----------------------
#rm(list = ls())
library(readxl)
tcmex <- read_excel("FinanSystem_Mexico-1.xlsx" , range = "B2:zz51")

# Renombrando variables -----------------------
colnames(tcmex)
names(tcmex)[names(tcmex) == "Indicadores del Balance General (millones de pesos corrientes)"] <- "Name"

# Eliminando filas no importantes-----
tcmex <- tcmex[-c(2:13), ]
tcmex <- tcmex[-c(4:7), ]
tcmex <- tcmex[-c(5:11),]
tcmex <- tcmex[-c(6:10),]
tcmex <- tcmex[-c(8:8),]
tcmex <- tcmex[-c(9:12),]
tcmex <- tcmex[-c(10:10),]
tcmex <- tcmex[-c(11:15),]

# Transponiendo el dataframe -----------------------
tcmexico <- as.data.frame(t(as.matrix(tcmex)))

# Rename column names
colnames(tcmexico)
names(tcmexico)[names(tcmexico) == "V1"] <- "fecha"
names(tcmexico)[names(tcmexico) == "V2"] <- "Comerciales"
names(tcmexico)[names(tcmexico) == "V3"] <- "Empresariales"
names(tcmexico)[names(tcmexico) == "V4"] <- "Leasingemp"
names(tcmexico)[names(tcmexico) == "V5"] <- "Gobierno"
names(tcmexico)[names(tcmexico) == "V6"] <- "Consumo"
names(tcmexico)[names(tcmexico) == "V7"] <- "TarjetaCredito"
names(tcmexico)[names(tcmexico) == "V8"] <- "Personal"
names(tcmexico)[names(tcmexico) == "V9"] <- "Leasingconsumo"
names(tcmexico)[names(tcmexico) == "V10"] <- "Hipotecario"
tcmexico

#Eliminando la primera fila
tcmexico <- tcmexico[-c(1), ]

# Con las variables que interesan-----------
keeps <- c("fecha",
           "Comerciales", 
           "Empresariales",
           "Leasingemp",
           "Gobierno",
           "Hipotecario", 
           "TarjetaCredito",
           "Leasingconsumo",
           "Personal",
           "Consumo")

tcmexico = tcmexico[keeps]

# Eliminando columnas vacias ----------------------------------
tcmexicom_bc <- na.omit(tcmexico)

# Variable Fecha -------------------------
class(tcmexicom_bc$fecha)
tcmexicom_bc$fecha <- as.numeric(as.character(tcmexicom_bc$fecha))
library(openxlsx)
tcmexicom_bc$fecha=openxlsx::convertToDate(tcmexicom_bc$fecha)
#Nombre de las filas --
row.names(tcmexicom_bc) <- tcmexicom_bc$fecha

#####BANCA DE DESARROLLO---------------------------------------
# Importando datos ---------------------------
##rm(list = ls())

#library(httr)
#list <- c("https://publicaciones.cnbs.gob.hn/boletines/_layouts/15/xlviewer.aspx?id=/boletines/Estados%20Financieros%20NIIF%20a%20partir%20de%20enero%202017/Estados%20Financieros.xlsx&Source=https%3A%2F%2Fpublicaciones%2Ecnbs%2Egob%2Ehn%2Fboletines%2FPaginas%2FEstados%2DFinancieros%2DNIIF%2D%28a%2Dpartir%2Dde%2Denero%2D2017%29%2Easpx")
#for (i in 1:length(list)) {
#  download.file(list[i], destfile = paste0("Honduras", i, ".aspx"),  mode="wb")
#}
#Se puede descargar la informacion si se averigua como descargar excel server files
# Reading the file -----------------------
##rm(list = ls())
library(readxl)
tcmex <- read_excel("SH_BD_202003.xlsx" , sheet = "BD", range = "G6:zz54")
# Renombrando variables -----------------------
colnames(tcmex)
names(tcmex)[names(tcmex) == "Consolidado con subsidiarias"] <- "Name"

# Eliminando filas no importantes-----
tcmex <- tcmex[-c(3:15), ]
tcmex <- tcmex[-c(5:8), ]
tcmex <- tcmex[-c(6:11),]
tcmex <- tcmex[-c(7:11),]
tcmex <- tcmex[-c(10:12),]
tcmex <- tcmex[-c(11:11),]
tcmex <- tcmex[-c(12:16),]
tcmex <- tcmex[-c(1:1), ]
# Transponiendo el dataframe -----------------------
tcmexico <- as.data.frame(t(as.matrix(tcmex)))

# Rename column names
colnames(tcmexico)
names(tcmexico)[names(tcmexico) == "V1"] <- "fecha"
names(tcmexico)[names(tcmexico) == "V2"] <- "Comerciales"
names(tcmexico)[names(tcmexico) == "V3"] <- "Empresariales"
names(tcmexico)[names(tcmexico) == "V4"] <- "Leasingemp"
names(tcmexico)[names(tcmexico) == "V5"] <- "Gobierno"
names(tcmexico)[names(tcmexico) == "V6"] <- "Consumo"
names(tcmexico)[names(tcmexico) == "V7"] <- "TarjetaCredito"
names(tcmexico)[names(tcmexico) == "V8"] <- "Personal"
names(tcmexico)[names(tcmexico) == "V9"] <- "Leasingconsumo"
names(tcmexico)[names(tcmexico) == "V10"] <- "Hipotecario"
tcmexico

#Eliminando la primera fila
tcmexico <- tcmexico[-c(1), ]

# Con las variables que interesan-----------
keeps <- c("fecha",
           "Comerciales", 
           "Empresariales",
           "Leasingemp",
           "Gobierno",
           "Hipotecario", 
           "TarjetaCredito",
           "Leasingconsumo",
           "Personal",
           "Consumo")

tcmexico = tcmexico[keeps]

# Eliminando columnas vacias ----------------------------------
tcmexicom_bd <- na.omit(tcmexico)

# Variable Fecha -------------------------
class(tcmexicom_bd$year)
library(stringr)
numextract <- function(string){ 
  str_extract(string, "\\-*\\d+\\.*\\d*")
}
tcmexicom_bd$year <- numextract(tcmexicom_bd$fecha)
tcmexicom_bd$year <- as.numeric(tcmexicom_bd$year)
tcmexicom_bd$year <- tcmexicom_bd$year*-1
#
tcmexicom_bd$month <- str_split_fixed(tcmexicom_bd$fecha, "-",2) 
tcmexicom_bd$month[tcmexicom_bd$month=="Ene"] <- c("Jan")
tcmexicom_bd$month[tcmexicom_bd$month=="Dic"] <- c("Dec")
tcmexicom_bd$month[tcmexicom_bd$month=="Ago"] <- c("Aug")
#
tcmexicom_bd$date <- format(lubridate::ymd(paste0(tcmexicom_bd$year,	tcmexicom_bd$month,	01)),	 "%Y-%B")


#install.packages("lubridate")
library(lubridate)
tccostaricam$fecha <- parse_date_time(tccostaricam$fecha, orders = c("bdy", "bY"))


#Nombre de las filas --
row.names(tcmexicom_bd) <- tcmexicom_bd$fecha


#Variable pais ambos------------------------
tcmexicom_bd$Pais <- "Mexico"
tcmexicom_bc$Pais <- "Mexico"

# Exportando --------------------------------------------
write.csv(tcmexicom_bd,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcmexicom_bd.csv", row.names = FALSE)
write.csv(tcmexicom_bd,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Mexico\\tcmexicom_bd.csv", row.names = FALSE)
#
write.csv(tcmexicom_bc,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcmexicom_bc.csv", row.names = FALSE)
write.csv(tcmexicom_bc,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Mexico\\tcmexicom_bc.csv", row.names = FALSE)
# cbinPad function ------------------------------
cbindPad <- function(...){
  args <- list(...)
  n <- sapply(args,nrow)
  mx <- max(n)
  pad <- function(x, mx){
    if (nrow(x) < mx){
      nms <- colnames(x)
      padTemp <- matrix(NA, mx - nrow(x), ncol(x))
      colnames(padTemp) <- nms
      if (ncol(x)==0) {
        return(padTemp)
      } else {
        return(rbind(x,padTemp))
      }
    }
    else{
      return(x)
    }
  }
  rs <- lapply(args,pad,mx)
  return(do.call(cbind,rs))
}

# Adding data horizontally ------------------------------
tcmexicom <- cbindPad(tcmexicom_bc,
                      tcmexicom_bd)

# Agregando variables -----------------------------------
colnames(tcmexicom)
tcmexicom$Arrendamiento <- tcmexicom$Leasingemp+tcmexicom$Leasing-consumo

# Exportando --------------------------------------------
write.csv(tcmexicom,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcmexicom.csv", row.names = FALSE)
write.csv(tcmexicom,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Honduras\\tcmexicom.csv", row.names = FALSE)

# Graphs daily dates------------------------------------------------
#install.packages("ggplot2")
#install.packages("hrbrthemes")
library(ggplot2)
library(dplyr)
library(hrbrthemes)
#colnames(tcmexgentina)
CreditoHipotecario <- tcmexico %>%
  tail(10000) %>%
  ggplot(aes(x=fecha3, y=Hipotecario)) +
  geom_line() +
  geom_point() +
  ggtitle("REP DOMINICANA crédito hipotecario") +
  xlab("Date") + ylab("MM Pesos Dominicanos")
CreditoHipotecario

#
TarjetaCredito <- tcmexico %>%
  tail(10000) %>%
  ggplot( aes(x=fecha3, y=TarjetaCredito)) +
  geom_line() +
  geom_point() +
  ggtitle("REP DOMINICANA tarjeta de crédito") +
  xlab("Date") + ylab("MM pesos argentinos")
TarjetaCredito

#
Consumo <- tcmexico %>%
  tail(10000) %>%
  ggplot( aes(x=fecha3, y=Consumo)) +
  geom_line() +
  geom_point() +
  ggtitle("REP DOMINICANA crédito de consumo") +
  xlab("Date") + ylab("MM pesos argentinos")
Consumo

save(tcmexgentina,file="tcmexgentina.Rda")

#################################################################
######################NICARAGUA##################################
#################################################################
# Importando datos -------------------------------------------
###rm(list = ls())
#library(httr)
#list <- c("https://www.bcn.gob.ni/estadisticas/monetario_financiero/financiero/sociedades_financieras/5-10.xls")
#for (i in 1:length(list)) {
#  download.file(list[i], destfile = paste0("Nicaragua", ".xls"),  mode="wb")}
# TIPO CREDITO -----------------------
#rm(list = ls())
library(readxl)
tcnicar <- read_excel("5-10.xls",sheet="V-10", range = "A4:K5000")
# Nombres variables ------
colnames(tcnicar)
# Rename column names
names(tcnicar)[names(tcnicar) == "Mes y año"] <- "fecha"
names(tcnicar)[names(tcnicar) == "Comercial"] <- "Comercial"
names(tcnicar)[names(tcnicar) == "Agrícola"] <- "Agricola"
names(tcnicar)[names(tcnicar) == "Hipotecario para vivienda"] <- "Hipotecario"
names(tcnicar)[names(tcnicar) == "Créditos personales"] <- "Personal"
names(tcnicar)[names(tcnicar) == "Tarjetas de crédito"] <- "TarjetaCredito"
names(tcnicar)[names(tcnicar) == "Otros (Arrend. Financiero)"] <- "Arrendamiento"
names(tcnicar)[names(tcnicar) == "Intereses y Com. Por cobrar"] <- "Intereses"
tcnicar

#Eliminando las filas no importantes
tcnicar <- tcnicar[-c(1:250), ]

#Con las variables que interesan
colnames(tcnicar)
keeps <- c("fecha",
           "Comercial",
           "Hipotecario",
           "Personal",
           "TarjetaCredito")
tcnicaragua = tcnicar[keeps]

# Eliminando valores vacias ----------------------------------
tcnicaragua <- na.omit(tcnicaragua)

#Variable mes numeral
tcnicaragua$id[tcnicaragua$fecha=="Enero"] <- c(1)
tcnicaragua$id[tcnicaragua$fecha=="Febrero"] <- c(2)
tcnicaragua$id[tcnicaragua$fecha=="Marzo"] <- c(3)
tcnicaragua$id[tcnicaragua$fecha=="Abril"] <- c(4)
tcnicaragua$id[tcnicaragua$fecha=="Mayo"] <- c(5)
tcnicaragua$id[tcnicaragua$fecha=="Junio"] <- c(6)
tcnicaragua$id[tcnicaragua$fecha=="Julio"] <- c(7)
tcnicaragua$id[tcnicaragua$fecha=="Agosto"] <- c(8)
tcnicaragua$id[tcnicaragua$fecha=="Septiembre"] <- c(9)
tcnicaragua$id[tcnicaragua$fecha=="Octubre"] <- c(10)
tcnicaragua$id[tcnicaragua$fecha=="Noviembre"] <- c(11)
tcnicaragua$id[tcnicaragua$fecha=="Diciembre"] <- c(12)

tcnicaragua$month[tcnicaragua$fecha=="Enero"] <- c("Jan")
tcnicaragua$month[tcnicaragua$fecha=="Febrero"] <- c("Feb")
tcnicaragua$month[tcnicaragua$fecha=="Marzo"] <- c("Mar")
tcnicaragua$month[tcnicaragua$fecha=="Abril"] <- c("Apr")
tcnicaragua$month[tcnicaragua$fecha=="Mayo"] <- c("May")
tcnicaragua$month[tcnicaragua$fecha=="Junio"] <- c("Jun")
tcnicaragua$month[tcnicaragua$fecha=="Julio"] <- c("Jul")
tcnicaragua$month[tcnicaragua$fecha=="Agosto"] <- c("Aug")
tcnicaragua$month[tcnicaragua$fecha=="Septiembre"] <- c("Sep")
tcnicaragua$month[tcnicaragua$fecha=="Octubre"] <- c("Oct")
tcnicaragua$month[tcnicaragua$fecha=="Noviembre"] <- c("Nov")
tcnicaragua$month[tcnicaragua$fecha=="Diciembre"] <- c("Dec")

#Variable año
tcnicaragua$id.t <- with(tcnicaragua, ave(rep(1, nrow(tcnicaragua)), id, FUN = seq_along))

#Cambiando los valores del id
tcnicaragua$year <- NA
tcnicaragua$year[tcnicaragua$id.t==1] <- c(2018)
tcnicaragua$year[tcnicaragua$id.t==2] <- c(2019)
tcnicaragua$year[tcnicaragua$id.t==3] <- c(2020)
tcnicaragua$year[tcnicaragua$id.t==4] <- c(2021)
tcnicaragua$year[tcnicaragua$id.t==5] <- c(2022)
tcnicaragua$year[tcnicaragua$id.t==6] <- c(2023)

#La variable "date"
tcnicaragua$date <- lubridate::ymd(paste0(tcnicaragua$year,tcnicaragua$month,"01"))

#Nos quedamos con las variables que nos importan
colnames(tcnicaragua)
keeps2 <- c("date",
            "Comercial",
            "Hipotecario",
            "Personal",
            "TarjetaCredito")
tcnicaragua = tcnicaragua[keeps2]

#Variable pais
tcnicaragua$Pais <- "Nicaragua"

# Nombre de las filas -----------------------------------------
row.names(tcnicaragua) <- tcnicaragua$date

# Exportando --------------------------------------------
write.csv(tcnicaragua,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Nicaragua\\tcnicaragua.csv", row.names = FALSE)
write.csv(tcnicaragua,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcnicaragua.csv", row.names = FALSE)

# Graphs daily dates------------------------------------------------
#install.packages("ggplot2")
#install.packages("hrbrthemes")
library(ggplot2)
library(dplyr)
library(hrbrthemes)
#colnames(tcbolivia)
Hipotecario <- tcnicaragua %>%
  tail(10000) %>%
  ggplot(aes(x=date, y=Hipotecario)) +
  geom_line() +
  geom_point() +
  ggtitle("NICARAGUA crédito inmobiliario") +
  xlab("Date") + ylab("MM dolares")
Hipotecario 

#
Comercial <- tcnicaragua %>%
  tail(10000) %>%
  ggplot( aes(x=date, y=Comercial)) +
  geom_line() +
  geom_point() + 
  ggtitle("NICARAGUA crédito de consumo") +
  xlab("Date") + ylab("MM de dolares")
Comercial

#
Personal <- tcnicaragua %>%
  tail(10000) %>%
  ggplot( aes(x=date, y=Personal)) +
  geom_line() +
  geom_point() +
  ggtitle("NICARAGUA credito personal") +
  xlab("Date") + ylab("MM de dolares")
Personal

save(tcnicaragua,file="tcnicaragua.Rda")

#################################################################
#########################PANAMA##################################
#################################################################
# TIPO DE CREDITO ---------------------------------------
# CREDITO COMERCIAL ---------------------------------------------
# Importando datos ---
#rm(list = ls())
#library(httr)
list <- c("https://www.superbancos.gob.pa/superbancos/documentos/financiera_y_estadistica/reportes_estadisticos/2020/07/cartera_sectorial_trimestral/RE-RANKING-en-RE0022.xlsx")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Panama1", ".xlsx"),  mode="wb")
}
# Reading the file ENERO2018----------------------------------
#rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Ene 2018", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Jan"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias ---
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jan, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jan)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Jan"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0118 <- tcpanama[-c(1:1), ]

# Reading the file FEBRERO2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Feb 2018", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Feb"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias ---
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Feb, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Feb)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Feb"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0218 <- tcpanama[-c(1:1), ]

# Reading the file MARZO2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Mar 2018", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Mar"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Mar, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Mar)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Mar"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0318 <- tcpanama[-c(1:1), ]

# Reading the file April2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Abril 2018", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "April"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$April, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==April)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "April"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0418 <- tcpanama[-c(1:1), ]

# Reading the file Mayo2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Mayo 2018", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "May"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$May, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==May)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "May"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0518 <- tcpanama[-c(1:1), ]

# Reading the file Junio2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Junio 2018", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Jun"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jun, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jun)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Jun"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0618 <- tcpanama[-c(1:1), ]

# Reading the file Julio2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Julio 2018", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Jul"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jul, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jul)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Jul"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0718 <- tcpanama[-c(1:1), ]

# Reading the file Agosto2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Agosto 2018", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Aug"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Aug, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Aug)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Aug"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0818 <- tcpanama[-c(1:1), ]

# Reading the file Septiembre2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Septiembre 2018", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Sep"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Sep, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Sep)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Sep"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0918 <- tcpanama[-c(1:1), ]

# Reading the file Octubre2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Octubre 2018", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Oct"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Oct, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Oct)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Oct"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1018 <- tcpanama[-c(1:1), ]

# Reading the file Noviembre2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Noviembre 2018", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Nov"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Nov, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Nov)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Nov"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1118 <- tcpanama[-c(1:1), ]
# Reading the file December2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Diciembre 2018", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Dec"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Dec, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Dec)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Dec"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1218 <- tcpanama[-c(1:1), ]

# Reading the file Jan2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Enero 2019", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Jan"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jan, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jan)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Jan"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0119 <- tcpanama[-c(1:1), ]

# Reading the file Feb2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Febrero 2019", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Feb"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Feb, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Feb)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Feb"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0219 <- tcpanama[-c(1:1), ]
# Reading the file Marzo2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Marzo 2019", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Mar"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Mar, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Mar)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Mar"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0319 <- tcpanama[-c(1:1), ]

# Reading the file April2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Abril 2019", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "April"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$April, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==April)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "April"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0419 <- tcpanama[-c(1:1), ]

# Reading the file Mayo2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Mayo 2019", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "May"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$May, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==May)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "May"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0519 <- tcpanama[-c(1:1), ]

# Reading the file Junio2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Junio 2019", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Jun"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jun, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jun)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Jun"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0619 <- tcpanama[-c(1:1), ]

# Reading the file Julio2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Julio 2019", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Jul"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jul, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jul)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Jul"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0719 <- tcpanama[-c(1:1), ]

# Reading the file Agosto2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Agosto 2019", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Aug"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Aug, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Aug)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Aug"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0819 <- tcpanama[-c(1:1), ]

# Reading the file Septiembre2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Septiembre 2019", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Sep"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Sep, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Sep)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Sep"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0919 <- tcpanama[-c(1:1), ]

# Reading the file Octubre2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Octubre 2019", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Oct"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Oct, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Oct)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Oct"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1019 <- tcpanama[-c(1:1), ]

# Reading the file Noviembre2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Noviembre 2019", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Nov"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Nov, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Nov)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Nov"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1119 <- tcpanama[-c(1:1), ]

# Reading the file December2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Diciembre 2019", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Dec"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Dec, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Dec)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Dec"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1219 <- tcpanama[-c(1:1), ]
# Reading the file Jan2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Enero 2020", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Jan"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jan, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jan)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "Jan"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0120 <- tcpanama[-c(1:1), ]

# Reading the file Feb2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Febrero 2020", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Feb"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Feb, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Feb)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "Feb"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0220 <- tcpanama[-c(1:1), ]

# Reading the file Marzo2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Marzo 2020 Pre3", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Mar"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Mar, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Mar)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "Mar"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0320 <- tcpanama[-c(1:1), ]

# Reading the file April2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Abril 2020", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "April"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$April, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==April)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "April"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0420 <- tcpanama[-c(1:1), ]

# Reading the file Mayo2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Mayo 2020", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "May"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$May, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==May)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "May"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0520 <- tcpanama[-c(1:1), ]

# Reading the file Junio2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Junio 2020", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Jun"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jun, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jun)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "Jun"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0620 <- tcpanama[-c(1:1), ]

# Reading the file Julio2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama1.xlsx" ,sheet="Julio 2020", range = "C7:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "SALDO TOTAL DE COMERCIO"] <- "Jul"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jul, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jul)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Comercial"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "Jul"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0720 <- tcpanama[-c(1:1), ]

# cbinPad function ------------------------------
cbindPad <- function(...){
  args <- list(...)
  n <- sapply(args,nrow)
  mx <- max(n)
  pad <- function(x, mx){
    if (nrow(x) < mx){
      nms <- colnames(x)
      padTemp <- matrix(NA, mx - nrow(x), ncol(x))
      colnames(padTemp) <- nms
      if (ncol(x)==0) {
        return(padTemp)
      } else {
        return(rbind(x,padTemp))
      }
    }
    else{
      return(x)
    }
  }
  rs <- lapply(args,pad,mx)
  return(do.call(cbind,rs))
}
# Add datasets vertically-----------------------------------
tcpanama_comercial <- rbind(tcpanama0118, tcpanama0218, tcpanama0318, 
                            tcpanama0418, tcpanama0518, tcpanama0618, 
                            tcpanama0718, tcpanama0818, tcpanama0918, 
                            tcpanama1018, tcpanama1118, tcpanama1218, 
                            tcpanama0119, tcpanama0219, tcpanama0319, 
                            tcpanama0419, tcpanama0519, tcpanama0619, 
                            tcpanama0719, tcpanama0819, tcpanama0919, 
                            tcpanama1019, tcpanama1119, tcpanama1219, 
                            tcpanama0120, tcpanama0220, tcpanama0320, 
                            tcpanama0420, tcpanama0520, tcpanama0620, 
                            tcpanama0720)
#La variable "date"
tcpanama_comercial$date <- format(lubridate::ymd(paste0(tcpanama_comercial$year,tcpanama_comercial$month,"01")), "%m-%Y")
#Con las variables importantes
keeps2 <- c("date",
            "Comercial")
tcpanama_comercial = tcpanama_comercial[keeps2]
#Nombre de las filas
row.names(tcpanama_comercial) <- tcpanama_comercial$date

# CREDITO HIPOTECARIO ---------------------------------------------
# Importando datos ---
##rm(list = ls())
#library(httr)
list <- c("https://www.superbancos.gob.pa/superbancos/documentos/financiera_y_estadistica/reportes_estadisticos/2020/07/cartera_sectorial_trimestral/RE-RANKING-en-RE0023.xlsx")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Panama2", ".xlsx"),  mode="wb")
}
# Reading the file ENERO2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Enero 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Jan"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias ---
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jan, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jan)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Jan"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0118 <- tcpanama[-c(1:1), ]

# Reading the file FEBRERO2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Febrero 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Feb"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias ---
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Feb, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Feb)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Feb"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0218 <- tcpanama[-c(1:1), ]

# Reading the file MARZO2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Marzo 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Mar"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Mar, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Mar)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Mar"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0318 <- tcpanama[-c(1:1), ]

# Reading the file April2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Abril 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "April"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$April, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==April)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "April"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0418 <- tcpanama[-c(1:1), ]

# Reading the file Mayo2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Mayo 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "May"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$May, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==May)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "May"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0518 <- tcpanama[-c(1:1), ]

# Reading the file Junio2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Junio 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Jun"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jun, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jun)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Jun"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0618 <- tcpanama[-c(1:1), ]

# Reading the file Julio2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Julio 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Jul"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jul, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jul)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Jul"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0718 <- tcpanama[-c(1:1), ]

# Reading the file Agosto2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Agosto 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Aug"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Aug, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Aug)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Aug"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0818 <- tcpanama[-c(1:1), ]

# Reading the file Septiembre2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Septiembre 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Sep"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Sep, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Sep)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Sep"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0918 <- tcpanama[-c(1:1), ]

# Reading the file Octubre2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Octubre 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Oct"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Oct, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Oct)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Oct"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1018 <- tcpanama[-c(1:1), ]

# Reading the file Noviembre2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Noviembre 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Nov"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Nov, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Nov)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Nov"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1118 <- tcpanama[-c(1:1), ]

# Reading the file December2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Diciembre 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Dec"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Dec, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Dec)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Dec"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1218 <- tcpanama[-c(1:1), ]

# Reading the file Jan2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Enero 2019", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Jan"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jan, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jan)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Jan"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0119 <- tcpanama[-c(1:1), ]

# Reading the file Feb2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Febrero 2019", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Feb"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Feb, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Feb)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Feb"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0219 <- tcpanama[-c(1:1), ]

# Reading the file Marzo2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Marzo 2019", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Mar"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Mar, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Mar)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Mar"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0319 <- tcpanama[-c(1:1), ]

# Reading the file April2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Abril 2019", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "April"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$April, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==April)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "April"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0419 <- tcpanama[-c(1:1), ]

# Reading the file Mayo2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Mayo 2019", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "May"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$May, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==May)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "May"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0519 <- tcpanama[-c(1:1), ]

# Reading the file Junio2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Junio 2019", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Jun"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jun, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jun)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Jun"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0619 <- tcpanama[-c(1:1), ]

# Reading the file Julio2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Julio 2019", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Jul"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jul, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jul)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Jul"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0719 <- tcpanama[-c(1:1), ]

# Reading the file Agosto2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Agosto 2019", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Aug"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Aug, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Aug)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Aug"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0819 <- tcpanama[-c(1:1), ]

# Reading the file Septiembre2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Septiembre 2019", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Sep"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Sep, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Sep)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Sep"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0919 <- tcpanama[-c(1:1), ]

# Reading the file Octubre2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Octubre 2019", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Oct"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Oct, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Oct)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Oct"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1019 <- tcpanama[-c(1:1), ]

# Reading the file Noviembre2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Noviembre 2019", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Nov"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Nov, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Nov)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Nov"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1119 <- tcpanama[-c(1:1), ]

# Reading the file December2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Diciembre 2019", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Dec"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Dec, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Dec)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Dec"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1219 <- tcpanama[-c(1:1), ]

# Reading the file Jan2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Enero 2020", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Jan"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jan, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jan)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "Jan"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0120 <- tcpanama[-c(1:1), ]

# Reading the file Feb2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Febrero 2020", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Feb"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Feb, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Feb)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "Feb"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0220 <- tcpanama[-c(1:1), ]

# Reading the file Marzo2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Marzo 2020 pre3", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Mar"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Mar, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Mar)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "Mar"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0320 <- tcpanama[-c(1:1), ]

# Reading the file April2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Abril 2020", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "April"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$April, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==April)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "April"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0420 <- tcpanama[-c(1:1), ]

# Reading the file Mayo2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Mayo 2020", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "May"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$May, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==May)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "May"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0520 <- tcpanama[-c(1:1), ]

# Reading the file Junio2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Junio 2020", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Jun"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jun, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jun)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "Jun"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0620 <- tcpanama[-c(1:1), ]

# Reading the file Julio2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama2.xlsx" ,sheet="Julio 2020", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "CREDITO HIPOTECARIO"] <- "Jul"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jul, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jul)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Hipotecario"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "Jul"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0720 <- tcpanama[-c(1:1), ]

# cbinPad function ------------------------------
cbindPad <- function(...){
  args <- list(...)
  n <- sapply(args,nrow)
  mx <- max(n)
  pad <- function(x, mx){
    if (nrow(x) < mx){
      nms <- colnames(x)
      padTemp <- matrix(NA, mx - nrow(x), ncol(x))
      colnames(padTemp) <- nms
      if (ncol(x)==0) {
        return(padTemp)
      } else {
        return(rbind(x,padTemp))
      }
    }
    else{
      return(x)
    }
  }
  rs <- lapply(args,pad,mx)
  return(do.call(cbind,rs))
}
# Add datasets vertically-----------------------------------
tcpanama_hipot <- rbind(tcpanama0118, tcpanama0218, tcpanama0318, 
                        tcpanama0418, tcpanama0518, tcpanama0618, 
                        tcpanama0718, tcpanama0818, tcpanama0918, 
                        tcpanama1018, tcpanama1118, tcpanama1218, 
                        tcpanama0119, tcpanama0219, tcpanama0319, 
                        tcpanama0419, tcpanama0519, tcpanama0619, 
                        tcpanama0719, tcpanama0819, tcpanama0919, 
                        tcpanama1019, tcpanama1119, tcpanama1219, 
                        tcpanama0120, tcpanama0220, tcpanama0320, 
                        tcpanama0420, tcpanama0520, tcpanama0620, 
                        tcpanama0720)
#Con las variables importantes
keeps3 <- c("Hipotecario")
tcpanama_hipot = tcpanama_hipot[keeps3]

# CREDITO CONSUMO ---------------------------------------------
# Importando datos ---
##rm(list = ls())
#library(httr)
list <- c("https://www.superbancos.gob.pa/superbancos/documentos/financiera_y_estadistica/reportes_estadisticos/2020/07/cartera_sectorial_trimestral/RE-RANKING-en-RE0024.xlsx")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Panama3", ".xlsx"),  mode="wb")
}
# Reading the file ENERO2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Enero 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Jan"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias ---
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jan, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jan)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Jan"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0118 <- tcpanama[-c(1:1), ]

# Reading the file FEBRERO2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Febrero 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Feb"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias ---
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Feb, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Feb)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Feb"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0218 <- tcpanama[-c(1:1), ]

# Reading the file MARZO2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Marzo 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Mar"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Mar, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Mar)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Mar"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0318 <- tcpanama[-c(1:1), ]


# Reading the file April2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Abril 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "April"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$April, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==April)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "April"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0418 <- tcpanama[-c(1:1), ]

# Reading the file Mayo2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="MAYO 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "May"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$May, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==May)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "May"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0518 <- tcpanama[-c(1:1), ]

# Reading the file Junio2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="JUNIO 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Jun"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jun, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jun)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Jun"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0618 <- tcpanama[-c(1:1), ]

# Reading the file Julio2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="JULIO 2018", range = "C8:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Jul"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jul, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jul)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Jul"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0718 <- tcpanama[-c(1:1), ]

# Reading the file Agosto2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="AGOSTO 2018", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Aug"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Aug, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Aug)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Aug"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0818 <- tcpanama[-c(1:1), ]

# Reading the file Septiembre2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Septiembre 2018", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Sep"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Sep, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Sep)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Sep"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0918 <- tcpanama[-c(1:1), ]

# Reading the file Octubre2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Octubre 2018", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Oct"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Oct, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Oct)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Oct"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1018 <- tcpanama[-c(1:1), ]

# Reading the file Noviembre2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Noviembre 2018", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Nov"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Nov, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Nov)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Nov"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1118 <- tcpanama[-c(1:1), ]

# Reading the file December2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Diciembre 2018", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Dec"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Dec, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Dec)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2018
tcpanama$month <- "Dec"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1218 <- tcpanama[-c(1:1), ]

# Reading the file Jan2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Enero 2019", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Jan"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jan, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jan)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Jan"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0119 <- tcpanama[-c(1:1), ]

# Reading the file Feb2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Febrero 2019", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Feb"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Feb, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Feb)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Feb"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0219 <- tcpanama[-c(1:1), ]

# Reading the file Marzo2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Marzo 2019", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Mar"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Mar, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Mar)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Mar"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0319 <- tcpanama[-c(1:1), ]

# Reading the file April2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Abril 2019", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "April"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$April, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==April)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "April"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0419 <- tcpanama[-c(1:1), ]

# Reading the file Mayo2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Mayo 2019", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "May"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$May, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==May)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "May"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0519 <- tcpanama[-c(1:1), ]

# Reading the file Junio2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Junio 2019", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Jun"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jun, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jun)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Jun"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0619 <- tcpanama[-c(1:1), ]

# Reading the file Julio2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Julio 2019", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Jul"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jul, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jul)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Jul"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0719 <- tcpanama[-c(1:1), ]

# Reading the file Agosto2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Agosto 2019", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Aug"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Aug, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Aug)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Aug"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0819 <- tcpanama[-c(1:1), ]

# Reading the file Septiembre2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Septiembre 2019", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Sep"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Sep, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Sep)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Sep"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0919 <- tcpanama[-c(1:1), ]

# Reading the file Octubre2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Octubre 2019", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Oct"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Oct, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Oct)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Oct"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1019 <- tcpanama[-c(1:1), ]

# Reading the file Noviembre2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Noviembre 2019", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Nov"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Nov, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Nov)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Nov"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1119 <- tcpanama[-c(1:1), ]

# Reading the file December2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Diciembre 2019", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Dec"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Dec, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Dec)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2019
tcpanama$month <- "Dec"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama1219 <- tcpanama[-c(1:1), ]

# Reading the file Jan2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Enero 2020", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Jan"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jan, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jan)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "Jan"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0120 <- tcpanama[-c(1:1), ]

# Reading the file Feb2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Febrero 2020", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Feb"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Feb, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Feb)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "Feb"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0220 <- tcpanama[-c(1:1), ]



# Reading the file Marzo2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Marzo 2020 Pre3", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Mar"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Mar, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Mar)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "Mar"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0320 <- tcpanama[-c(1:1), ]



# Reading the file April2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Abril 2020", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "April"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$April, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==April)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "April"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0420 <- tcpanama[-c(1:1), ]



# Reading the file Mayo2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Mayo 2020", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "May"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$May, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==May)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "May"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0520 <- tcpanama[-c(1:1), ]



# Reading the file Junio2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Junio 2020", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Jun"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jun, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jun)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "Jun"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0620 <- tcpanama[-c(1:1), ]



# Reading the file Julio2020----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama3.xlsx" ,sheet="Julio 2020", range = "C6:D100")
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "TOTAL CONSUMO"] <- "Jul"
#names(tcpana)[names(tcpana) == "...1"] <- "Saldo"
#Encontrando el maximo valor de una columna
tcpana$id <- 1
#Eliminando columnas vacias --
tcpana <- na.omit(tcpana)
#Encontrando el valor maximo de credito ---
tcpana$maxvar <- ave(tcpana$Jul, tcpana$id, FUN = max)
#Mantener los valores finales
#install.packages("dplyr")
library(dplyr)
tcpanama <- filter(tcpana, maxvar==Jul)
# Transponiendo el dataframe ---
tcpanama <- as.data.frame(t(as.matrix(tcpanama)))
# Rename column names
colnames(tcpanama)
names(tcpanama)[names(tcpanama) == "V1"] <- "Consumo"
#Variable year and month
tcpanama$year <- 2020
tcpanama$month <- "Jul"
#Eliminando observaciones no importantes
tcpanama <- tcpanama[-c(3:4), ]
tcpanama0720 <- tcpanama[-c(1:1), ]




# cbinPad function ------------------------------
cbindPad <- function(...){
  args <- list(...)
  n <- sapply(args,nrow)
  mx <- max(n)
  pad <- function(x, mx){
    if (nrow(x) < mx){
      nms <- colnames(x)
      padTemp <- matrix(NA, mx - nrow(x), ncol(x))
      colnames(padTemp) <- nms
      if (ncol(x)==0) {
        return(padTemp)
      } else {
        return(rbind(x,padTemp))
      }
    }
    else{
      return(x)
    }
  }
  rs <- lapply(args,pad,mx)
  return(do.call(cbind,rs))
}
# Add datasets vertically-----------------------------------
tcpanama_consumo <- rbind(tcpanama0118, tcpanama0218, tcpanama0318, 
                          tcpanama0418, tcpanama0518, tcpanama0618, 
                          tcpanama0718, tcpanama0818, tcpanama0918, 
                          tcpanama1018, tcpanama1118, tcpanama1218, 
                          tcpanama0119, tcpanama0219, tcpanama0319, 
                          tcpanama0419, tcpanama0519, tcpanama0619, 
                          tcpanama0719, tcpanama0819, tcpanama0919, 
                          tcpanama1019, tcpanama1119, tcpanama1219, 
                          tcpanama0120, tcpanama0220, tcpanama0320, 
                          tcpanama0420, tcpanama0520, tcpanama0620, 
                          tcpanama0720)
#Con las variables importantes
keeps4 <- c("Consumo")
tcpanama_consumo = tcpanama_consumo[keeps4]

# Adding data horizontally ------------------------------
tcpanama_cch <- cbindPad(tcpanama_comercial,
                         tcpanama_consumo,
                         tcpanama_hipot)

# LEASING Y TARJETAS CREDITO ---------------------------------------------
# Importando datos ---
##rm(list = ls())
#library(httr)
list <- c("https://www.superbancos.gob.pa/superbancos/documentos/financiera_y_estadistica/reportes_estadisticos/2020/07/cartera_sectorial_trimestral/Creditos_Facilidad.xlsx")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Panama4", ".xlsx"),  mode="wb")
}
# Reading the file 2018----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama4.xlsx" ,sheet="dic18", range = "A3:Z12")
# Transponiendo el dataframe ---
tcpana <- as.data.frame(t(as.matrix(tcpana)))
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "V1"] <- "mes"
names(tcpana)[names(tcpana) == "V6"] <- "Arrendamiento"
names(tcpana)[names(tcpana) == "V7"] <- "TarjetaCredito"
#Eliminando columnas vacias ---
tcpana <- na.omit(tcpana)
#Eliminando observaciones no importantes
tcpanama <- tcpana[-c(1:2), ]
#Variable year
tcpanama$year <- 2018
#Quedandose con las variables importantes
keeps <- c("Arrendamiento",
           "TarjetaCredito",
           "mes",
           "year")
tcpanama18 = tcpanama[keeps]
#Variable month
tcpanama18$month[tcpanama18$mes=="Enero"] <- c("Jan")
tcpanama18$month[tcpanama18$mes=="Febrero"] <- c("Feb")
tcpanama18$month[tcpanama18$mes=="Marzo"] <- c("Mar")
tcpanama18$month[tcpanama18$mes=="Abril"] <- c("Apr")
tcpanama18$month[tcpanama18$mes=="Mayo"] <- c("May")
tcpanama18$month[tcpanama18$mes=="Junio"] <- c("Jun")
tcpanama18$month[tcpanama18$mes=="Julio"] <- c("Jul")
tcpanama18$month[tcpanama18$mes=="Agosto"] <- c("Aug")
tcpanama18$month[tcpanama18$mes=="Septiembre"] <- c("Sep")
tcpanama18$month[tcpanama18$mes=="Octubre"] <- c("Oct")
tcpanama18$month[tcpanama18$mes=="Noviembre"] <- c("Nov")
tcpanama18$month[tcpanama18$mes=="Diciembre"] <- c("Dec")
#La variable "date"
tcpanama18$date <- format(lubridate::ymd(paste0(tcpanama18$year,tcpanama18$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpanama18) <- tcpanama18$date



# Reading the file 2019----------------------------------
##rm(list = ls())
library(readxl)
tcpana <- read_excel("Panama4.xlsx" ,sheet="dic19", range = "A3:Z12")
# Transponiendo el dataframe ---
tcpana <- as.data.frame(t(as.matrix(tcpana)))
# Renombrando variables ---
colnames(tcpana)
names(tcpana)[names(tcpana) == "V1"] <- "mes"
names(tcpana)[names(tcpana) == "V6"] <- "Arrendamiento"
names(tcpana)[names(tcpana) == "V7"] <- "TarjetaCredito"
#Eliminando columnas vacias ---
tcpana <- na.omit(tcpana)
#Eliminando observaciones no importantes
tcpanama <- tcpana[-c(1:2), ]
#Variable year
tcpanama$year <- 2019
#Quedandose con las variables importantes
keeps <- c("Arrendamiento",
           "TarjetaCredito",
           "mes",
           "year")
tcpanama19 = tcpanama[keeps]
#Variable month
tcpanama19$month[tcpanama19$mes=="Enero"] <- c("Jan")
tcpanama19$month[tcpanama19$mes=="Febrero"] <- c("Feb")
tcpanama19$month[tcpanama19$mes=="Marzo"] <- c("Mar")
tcpanama19$month[tcpanama19$mes=="Abril"] <- c("Apr")
tcpanama19$month[tcpanama19$mes=="Mayo"] <- c("May")
tcpanama19$month[tcpanama19$mes=="Junio"] <- c("Jun")
tcpanama19$month[tcpanama19$mes=="Julio"] <- c("Jul")
tcpanama19$month[tcpanama19$mes=="Agosto"] <- c("Aug")
tcpanama19$month[tcpanama19$mes=="Septiembre"] <- c("Sep")
tcpanama19$month[tcpanama19$mes=="Octubre"] <- c("Oct")
tcpanama19$month[tcpanama19$mes=="Noviembre"] <- c("Nov")
tcpanama19$month[tcpanama19$mes=="Diciembre"] <- c("Dec")
#La variable "date"
tcpanama19$date <- format(lubridate::ymd(paste0(tcpanama19$year,tcpanama19$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpanama19) <- tcpanama19$date



# Reading the file 2020----------------------------------
##rm(list = ls())
library(readxl)
tcpanam <- read_excel("Panama4.xlsx" ,sheet="jul 20", range = "A3:Z12")
# Transponiendo el dataframe ---
tcpanam <- as.data.frame(t(as.matrix(tcpanam)))
# Renombrando variables ---
colnames(tcpanam)
names(tcpanam)[names(tcpanam) == "V1"] <- "mes"
names(tcpanam)[names(tcpanam) == "V6"] <- "Arrendamiento"
names(tcpanam)[names(tcpanam) == "V7"] <- "TarjetaCredito"
#Eliminando columnas vacias ---
tcpanam <- na.omit(tcpanam)
#Variable year
tcpanam$year <- 2020
#Quedandose con las variables importantes
keeps <- c("Arrendamiento",
           "TarjetaCredito",
           "mes",
           "year")
tcpanama20 = tcpanam[keeps]
#Variable month
tcpanama20$month[tcpanama20$mes=="Enero"] <- c("Jan")
tcpanama20$month[tcpanama20$mes=="Febrero"] <- c("Feb")
tcpanama20$month[tcpanama20$mes=="Marzo"] <- c("Mar")
tcpanama20$month[tcpanama20$mes=="Abril"] <- c("Apr")
tcpanama20$month[tcpanama20$mes=="Mayo"] <- c("May")
tcpanama20$month[tcpanama20$mes=="Junio"] <- c("Jun")
tcpanama20$month[tcpanama20$mes=="Julio"] <- c("Jul")
tcpanama20$month[tcpanama20$mes=="Agosto"] <- c("Aug")
tcpanama20$month[tcpanama20$mes=="Septiembre"] <- c("Sep")
tcpanama20$month[tcpanama20$mes=="Octubre"] <- c("Oct")
tcpanama20$month[tcpanama20$mes=="Noviembre"] <- c("Nov")
tcpanama20$month[tcpanama20$mes=="Diciembre"] <- c("Dec")
#La variable "date"
tcpanama20$date <- format(lubridate::ymd(paste0(tcpanama20$year,tcpanama20$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpanama20) <- tcpanama20$date
# Add datasets vertically-----------------------------------
tcpanama_tlea <- rbind(tcpanama18,
                       tcpanama19,
                       tcpanama20)

# Adding data horizontally ------------------------------
tcpanama <- cbindPad(tcpanama_cch,
                     tcpanama_tlea)

#Variable pais
tcpanama$Pais <- "Panama"

# Exportando --------------------------------------------
write.csv(tcpanama,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Panama\\tcpanama.csv", row.names = FALSE)
write.csv(tcpanama,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcpanama.csv", row.names = FALSE)

class(tcpanama$date)


#################################################################
#######################PARAGUAY##################################
#################################################################
# TIPO CREDITO -----------------------
# Importando datos ---------------------------------------------
#rm(list = ls())
library(httr)
list <- c("https://www.bcp.gov.py/userfiles/files/Ind_Financ_mayo_2020_Saldos.xlsx")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Paraguay", i, ".xlsx"),  mode="wb")}

# Reading the file -----------------------
##rm(list = ls())
library(readxl)
tcparag <- read_excel("Paraguay1.xlsx" ,sheet="3", range = "A4:ZZ30")

# Renombrando variables -----------------------
colnames(tcparag)
names(tcparag)[names(tcparag) == "...1"] <- "Name"

tcparag <- tcparag[-c(2:4), ]
tcparag <- tcparag[-c(3:3), ]
tcparag <- tcparag[-c(5:22), ]

# Transponiendo el dataframe -----------------------
tcparaguay <- as.data.frame(t(as.matrix(tcparag)))

# Eliminando filas vacias ----------------------------------
tcparaguay <- na.omit(tcparaguay)

# Rename column names
colnames(tcparaguay)
names(tcparaguay)[names(tcparaguay) == "V1"] <- "fecha"
names(tcparaguay)[names(tcparaguay) == "V2"] <- "Comerciales"
names(tcparaguay)[names(tcparaguay) == "V3"] <- "Consumo"
names(tcparaguay)[names(tcparaguay) == "V4"] <- "Hipotecario"
tcparaguay

# Variable Fecha -------------------------
tcparaguay$fecha3[tcparaguay$fecha=="oct-2017"] <- c("2017-10")
tcparaguay$fecha3[tcparaguay$fecha=="nov-2017"] <- c("2017-11")
tcparaguay$fecha3[tcparaguay$fecha=="dic-2017"] <- c("2017-12")
tcparaguay$fecha3[tcparaguay$fecha=="ene-2018"] <- c("2018-01")
tcparaguay$fecha3[tcparaguay$fecha=="feb-2018"] <- c("2018-02")
tcparaguay$fecha3[tcparaguay$fecha=="mar-2018"] <- c("2018-03")
tcparaguay$fecha3[tcparaguay$fecha=="abr-2018"] <- c("2018-04")
tcparaguay$fecha3[tcparaguay$fecha=="may-2018"] <- c("2018-05")
tcparaguay$fecha3[tcparaguay$fecha=="jun-2018"] <- c("2018-06")
tcparaguay$fecha3[tcparaguay$fecha=="jul-2018"] <- c("2018-07")
tcparaguay$fecha3[tcparaguay$fecha=="ago-2018"] <- c("2018-08")
tcparaguay$fecha3[tcparaguay$fecha=="sep-2018"] <- c("2018-09")
tcparaguay$fecha3[tcparaguay$fecha=="oct-2018"] <- c("2018-10")
tcparaguay$fecha3[tcparaguay$fecha=="nov-2018"] <- c("2018-11")
tcparaguay$fecha3[tcparaguay$fecha=="dic-2018"] <- c("2018-12")
tcparaguay$fecha3[tcparaguay$fecha=="ene-2019"] <- c("2019-01")
tcparaguay$fecha3[tcparaguay$fecha=="feb-2019"] <- c("2019-02")
tcparaguay$fecha3[tcparaguay$fecha=="mar-2019"] <- c("2019-03")
tcparaguay$fecha3[tcparaguay$fecha=="abr-2019"] <- c("2019-04")
tcparaguay$fecha3[tcparaguay$fecha=="may-2019"] <- c("2019-05")
tcparaguay$fecha3[tcparaguay$fecha=="jun-2019"] <- c("2019-06")
tcparaguay$fecha3[tcparaguay$fecha=="jul-2019"] <- c("2019-07")
tcparaguay$fecha3[tcparaguay$fecha=="ago-2019"] <- c("2019-08")
tcparaguay$fecha3[tcparaguay$fecha=="sep-2019"] <- c("2019-09")
tcparaguay$fecha3[tcparaguay$fecha=="oct-2019"] <- c("2019-10")
tcparaguay$fecha3[tcparaguay$fecha=="nov-2019"] <- c("2019-11")
tcparaguay$fecha3[tcparaguay$fecha=="dic-2019"] <- c("2019-12")
tcparaguay$fecha3[tcparaguay$fecha=="ene-2020"] <- c("2020-01")
tcparaguay$fecha3[tcparaguay$fecha=="feb-2020"] <- c("2020-02")
tcparaguay$fecha3[tcparaguay$fecha=="mar-2020"] <- c("2020-03")
tcparaguay$fecha3[tcparaguay$fecha=="abr-2020"] <- c("2020-04")
tcparaguay$fecha3[tcparaguay$fecha=="may-2020"] <- c("2020-05")
tcparaguay$fecha3[tcparaguay$fecha=="jun-2020"] <- c("2020-06")
tcparaguay$fecha3[tcparaguay$fecha=="jul-2020"] <- c("2020-07")
tcparaguay$fecha3[tcparaguay$fecha=="ago-2020"] <- c("2020-08")
tcparaguay$fecha3[tcparaguay$fecha=="sep-2020"] <- c("2020-09")
tcparaguay$fecha3[tcparaguay$fecha=="oct-2020"] <- c("2020-10")
tcparaguay$fecha3[tcparaguay$fecha=="nov-2020"] <- c("2020-11")
tcparaguay$fecha3[tcparaguay$fecha=="dic-2020"] <- c("2020-12")

#install.packages("lubridate")
library(lubridate)
parse_date_time(tcparaguay$fecha3, orders = "Ym")

# Con las variables que interesan-----------
keeps <- c("fecha",
           "Comerciales", 
           "Consumo", 
           "Hipotecario")

tcparaguay = tcparaguay[keeps]

#Variable pais
tcparaguay$Pais <- "Paraguay"

#Nombre de las filas
row.names(tcparaguay) <- tcparaguay$fecha

# Exportando --------------------------------------------
write.csv(tcparaguay,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcparaguay.csv", row.names = FALSE)
write.csv(tcparaguay,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Paraguay\\tcparaguay.csv", row.names = FALSE)

# Graphs daily dates------------------------------------------------
#install.packages("ggplot2")
#install.packages("hrbrthemes")
library(ggplot2)
library(dplyr)
library(hrbrthemes)
#colnames(tcparaggentina)
CreditoHipotecario <- tcparaguay %>%
  tail(10000) %>%
  ggplot(aes(x=fecha3, y=Hipotecario)) +
  geom_line() +
  geom_point() +
  ggtitle("REP DOMINICANA crédito hipotecario") +
  xlab("Date") + ylab("MM Pesos Dominicanos")
CreditoHipotecario

#
TarjetaCredito <- tcparaguay %>%
  tail(10000) %>%
  ggplot( aes(x=fecha3, y=TarjetaCredito)) +
  geom_line() +
  geom_point() +
  ggtitle("REP DOMINICANA tarjeta de crédito") +
  xlab("Date") + ylab("MM pesos argentinos")
TarjetaCredito

#
Consumo <- tcparaguay %>%
  tail(10000) %>%
  ggplot( aes(x=fecha3, y=Consumo)) +
  geom_line() +
  geom_point() +
  ggtitle("REP DOMINICANA crédito de consumo") +
  xlab("Date") + ylab("MM pesos argentinos")
Consumo

save(tcparaggentina,file="tcparaggentina.Rda")

#################################################################
###########################PERU##################################
#################################################################
# Importando datos 2018 ----------------------------------
#rm(list = ls())
library(httr)
list <- c("http://intranet2.sbs.gob.pe/estadistica/financiera/2018/Enero/SF-2101-en2018.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2018/Febrero/SF-2101-fe2018.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2018/Marzo/SF-2101-ma2018.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2018/Abril/SF-2101-ab2018.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2018/Mayo/SF-2101-my2018.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2018/Junio/SF-2101-jn2018.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2018/Julio/SF-2101-jl2018.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2018/Agosto/SF-2101-ag2018.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2018/Setiembre/SF-2101-se2018.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2018/Octubre/SF-2101-oc2018.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2018/Noviembre/SF-2101-no2018.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2018/Diciembre/SF-2101-di2018.ZIP")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Peru", i, ".zip"),  mode="wb")}

# Enero 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru1.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF -Ene 2018 - actualizado 250319.xls"), paste0("Ene18.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Ene18.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Jan"
keeps <- c("Saldo",
           "Jan")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0118 <- tcpe[-c(1:1), ]
#Variable year
tcpe0118$year <- 2018
tcpe0118$month <- "Jan"
#La variable "date"
tcpe0118$date <- format(lubridate::ymd(paste0(tcpe0118$year,tcpe0118$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0118) <- tcpe0118$date

# Febrero 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru2.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("carpeta SIF feb18 actualizada - actualizado 250319.xls"), paste0("Feb18.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Feb18.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Feb"
keeps <- c("Saldo",
           "Feb")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0218 <- tcpe[-c(1:1), ]
#Variable year
tcpe0218$year <- 2018
tcpe0218$month <- "Feb"
#La variable "date"
tcpe0218$date <- format(lubridate::ymd(paste0(tcpe0218$year,tcpe0218$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0218) <- tcpe0218$date


# Marzo 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru3.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("carpeta SIF marzo18 - actualizado 250319.xls"), paste0("Mar18.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Mar18.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Mar"
keeps <- c("Saldo",
           "Mar")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0318 <- tcpe[-c(1:1), ]
#Variable year
tcpe0318$year <- 2018
tcpe0318$month <- "Mar"
#La variable "date"
tcpe0318$date <- format(lubridate::ymd(paste0(tcpe0318$year,tcpe0318$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0318) <- tcpe0318$date

# Abril 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru4.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("carpeta SIF Abril18 - actualizado 250319.xls"), paste0("Apr18.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Apr18.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Apr"
keeps <- c("Saldo",
           "Apr")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0418 <- tcpe[-c(1:1), ]
#Variable year
tcpe0418$year <- 2018
tcpe0418$month <- "Apr"
#La variable "date"
tcpe0418$date <- format(lubridate::ymd(paste0(tcpe0418$year,tcpe0418$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0418) <- tcpe0418$date

# Mayo 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru5.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("carpeta SIF mayo18 - actualizado 250319.xls"), paste0("May18.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("May18.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "May"
keeps <- c("Saldo",
           "May")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0518 <- tcpe[-c(1:1), ]
#Variable year
tcpe0518$year <- 2018
tcpe0518$month <- "May"
#La variable "date"
tcpe0518$date <- format(lubridate::ymd(paste0(tcpe0518$year,tcpe0518$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0518) <- tcpe0518$date

# Junio 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru6.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF junio 2018 - actualizado 250319.xls"), paste0("Jun18.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Jun18.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Jun"
keeps <- c("Saldo",
           "Jun")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0618 <- tcpe[-c(1:1), ]
#Variable year
tcpe0618$year <- 2018
tcpe0618$month <- "Jun"
#La variable "date"
tcpe0618$date <- format(lubridate::ymd(paste0(tcpe0618$year,tcpe0618$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0618) <- tcpe0618$date

# Julio 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru7.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF julio 2018 - 250319.xls"), paste0("Jul18.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Jul18.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Jul"
keeps <- c("Saldo",
           "Jul")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0718 <- tcpe[-c(1:1), ]
#Variable year
tcpe0718$year <- 2018
tcpe0718$month <- "Jul"
#La variable "date"
tcpe0718$date <- format(lubridate::ymd(paste0(tcpe0718$year,tcpe0718$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0718) <- tcpe0718$date

# Agosto 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru8.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("carpeta SIF agosto 2018 - actualizado 250319.xls"), paste0("Aug18.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Aug18.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Aug"
keeps <- c("Saldo",
           "Aug")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0818 <- tcpe[-c(1:1), ]
#Variable year
tcpe0818$year <- 2018
tcpe0818$month <- "Aug"
#La variable "date"
tcpe0818$date <- format(lubridate::ymd(paste0(tcpe0818$year,tcpe0818$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0818) <- tcpe0818$date

# Septiembre 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru9.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF setiembre 2018 - actualizado 250319.xls"), paste0("Sep18.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Sep18.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Sep"
keeps <- c("Saldo",
           "Sep")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0918 <- tcpe[-c(1:1), ]
#Variable year
tcpe0918$year <- 2018
tcpe0918$month <- "Sep"
#La variable "date"
tcpe0918$date <- format(lubridate::ymd(paste0(tcpe0918$year,tcpe0918$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0918) <- tcpe0918$date

# Octubre 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru10.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("carpeta SIF octubre 2018 actualizada 0719.xls"), paste0("Oct18.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Oct18.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Oct"
keeps <- c("Saldo",
           "Oct")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe1018 <- tcpe[-c(1:1), ]
#Variable year
tcpe1018$year <- 2018
tcpe1018$month <- "Oct"
#La variable "date"
tcpe1018$date <- format(lubridate::ymd(paste0(tcpe1018$year,tcpe1018$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe1018) <- tcpe1018$date

# Noviembre 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru11.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF noviembre-2018 - actualizada 0719.xls"), paste0("Nov18.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Nov18.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Nov"
keeps <- c("Saldo",
           "Nov")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe1118 <- tcpe[-c(1:1), ]
#Variable year
tcpe1118$year <- 2018
tcpe1118$month <- "Nov"
#La variable "date"
tcpe1118$date <- format(lubridate::ymd(paste0(tcpe1118$year,tcpe1118$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe1118) <- tcpe1118$date

# Diciembre 2018 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru12.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF diciembre 2018 - actualizado 0719.xls"), paste0("Dec18.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Dec18.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Dec"
keeps <- c("Saldo",
           "Dec")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe1218 <- tcpe[-c(1:1), ]
#Variable year
tcpe1218$year <- 2018
tcpe1218$month <- "Dec"
#La variable "date"
tcpe1218$date <- format(lubridate::ymd(paste0(tcpe1218$year,tcpe1218$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe1218) <- tcpe1218$date

# Importando datos 2019 ----------------------------------
##rm(list = ls())
library(httr)
list <- c("http://intranet2.sbs.gob.pe/estadistica/financiera/2019/Enero/SF-2101-en2019.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2019/Febrero/SF-2101-fe2019.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2019/Marzo/SF-2101-ma2019.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2019/Abril/SF-2101-ab2019.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2019/Mayo/SF-2101-my2019.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2019/Junio/SF-2101-jn2019.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2019/Julio/SF-2101-jl2019.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2019/Agosto/SF-2101-ag2019.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2019/Setiembre/SF-2101-se2019.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2019/Octubre/SF-2101-oc2019.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2019/Noviembre/SF-2101-no2019.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2019/Diciembre/SF-2101-di2019.ZIP")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Peru", i, ".zip"),  mode="wb")}

# Enero 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru1.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF enero 2019 actualizado 0719.xls"), paste0("Ene19.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Ene19.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Jan"
keeps <- c("Saldo",
           "Jan")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0119 <- tcpe[-c(1:1), ]
#Variable year
tcpe0119$year <- 2019
tcpe0119$month <- "Jan"
#La variable "date"
tcpe0119$date <- format(lubridate::ymd(paste0(tcpe0119$year,tcpe0119$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0119) <- tcpe0119$date

# Febrero 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru2.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("carpeta SIF febrero 2019 final actualizado 0719.xls"), paste0("Feb19.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Feb19.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Feb"
keeps <- c("Saldo",
           "Feb")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0219 <- tcpe[-c(1:1), ]
#Variable year
tcpe0219$year <- 2019
tcpe0219$month <- "Feb"
#La variable "date"
tcpe0219$date <- format(lubridate::ymd(paste0(tcpe0219$year,tcpe0219$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0219) <- tcpe0219$date


# Marzo 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru3.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF marzo 2019 final.xlsx"), paste0("Mar19.xlsx"))
#Reading the file
library(readxl)
tcpe <- read_excel("Mar19.xlsx",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Mar"
keeps <- c("Saldo",
           "Mar")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0319 <- tcpe[-c(1:1), ]
#Variable year
tcpe0319$year <- 2019
tcpe0319$month <- "Mar"
#La variable "date"
tcpe0319$date <- format(lubridate::ymd(paste0(tcpe0319$year,tcpe0319$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0319) <- tcpe0319$date

# Abril 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru4.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF abril -072019.xls"), paste0("Apr19.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Apr19.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Apr"
keeps <- c("Saldo",
           "Apr")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0419 <- tcpe[-c(1:1), ]
#Variable year
tcpe0419$year <- 2019
tcpe0419$month <- "Apr"
#La variable "date"
tcpe0419$date <- format(lubridate::ymd(paste0(tcpe0419$year,tcpe0419$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0419) <- tcpe0419$date

# Mayo 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru5.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF May-19.xls"), paste0("May19.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("May19.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "May"
keeps <- c("Saldo",
           "May")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0519 <- tcpe[-c(1:1), ]
#Variable year
tcpe0519$year <- 2019
tcpe0519$month <- "May"
#La variable "date"
tcpe0519$date <- format(lubridate::ymd(paste0(tcpe0519$year,tcpe0519$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0519) <- tcpe0519$date

# Junio 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru6.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF Junio.xls"), paste0("Jun19.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Jun19.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Jun"
keeps <- c("Saldo",
           "Jun")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0619 <- tcpe[-c(1:1), ]
#Variable year
tcpe0619$year <- 2019
tcpe0619$month <- "Jun"
#La variable "date"
tcpe0619$date <- format(lubridate::ymd(paste0(tcpe0619$year,tcpe0619$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0619) <- tcpe0619$date

# Julio 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru7.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF Jul-19.xls"), paste0("Jul19.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Jul19.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Jul"
keeps <- c("Saldo",
           "Jul")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0719 <- tcpe[-c(1:1), ]
#Variable year
tcpe0719$year <- 2019
tcpe0719$month <- "Jul"
#La variable "date"
tcpe0719$date <- format(lubridate::ymd(paste0(tcpe0719$year,tcpe0719$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0719) <- tcpe0719$date

# Agosto 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru8.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF Ago-19.xls"), paste0("Aug19.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Aug19.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Aug"
keeps <- c("Saldo",
           "Aug")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0819 <- tcpe[-c(1:1), ]
#Variable year
tcpe0819$year <- 2019
tcpe0819$month <- "Aug"
#La variable "date"
tcpe0819$date <- format(lubridate::ymd(paste0(tcpe0819$year,tcpe0819$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0819) <- tcpe0819$date

# Septiembre 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru9.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF set-19.xls"), paste0("Sep19.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Sep19.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Sep"
keeps <- c("Saldo",
           "Sep")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0919 <- tcpe[-c(1:1), ]
#Variable year
tcpe0919$year <- 2019
tcpe0919$month <- "Sep"
#La variable "date"
tcpe0919$date <- format(lubridate::ymd(paste0(tcpe0919$year,tcpe0919$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0919) <- tcpe0919$date

# Octubre 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru10.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF Oct-19.xls"), paste0("Oct19.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Oct19.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Oct"
keeps <- c("Saldo",
           "Oct")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe1019 <- tcpe[-c(1:1), ]
#Variable year
tcpe1019$year <- 2019
tcpe1019$month <- "Oct"
#La variable "date"
tcpe1019$date <- format(lubridate::ymd(paste0(tcpe1019$year,tcpe1019$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe1019) <- tcpe1019$date

# Noviembre 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru11.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF Nov-19 final.xls"), paste0("Nov19.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Nov19.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Nov"
keeps <- c("Saldo",
           "Nov")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe1119 <- tcpe[-c(1:1), ]
#Variable year
tcpe1119$year <- 2019
tcpe1119$month <- "Nov"
#La variable "date"
tcpe1119$date <- format(lubridate::ymd(paste0(tcpe1119$year,tcpe1119$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe1119) <- tcpe1119$date

# Diciembre 2019 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru12.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF Dic-19.xls"), paste0("Dec19.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Dec19.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Dec"
keeps <- c("Saldo",
           "Dec")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe1219 <- tcpe[-c(1:1), ]
#Variable year
tcpe1219$year <- 2019
tcpe1219$month <- "Dec"
#La variable "date"
tcpe1219$date <- format(lubridate::ymd(paste0(tcpe1219$year,tcpe1219$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe1219) <- tcpe1219$date


# Importando datos 2020 ----------------------------------
##rm(list = ls())
library(httr)
list <- c("http://intranet2.sbs.gob.pe/estadistica/financiera/2020/Enero/SF-2101-en2020.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2020/Febrero/SF-2101-fe2020.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2020/Marzo/SF-2101-ma2020.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2020/Abril/SF-2101-ab2020.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2020/Mayo/SF-2101-my2020.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2020/Junio/SF-2101-jn2020.ZIP",
          "http://intranet2.sbs.gob.pe/estadistica/financiera/2020/Julio/SF-2101-jl2020.ZIP")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Peru", i, ".zip"),  mode="wb")}

# Enero 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru1.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF Ene-20.xls"), paste0("Ene20.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Ene20.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Jan"
keeps <- c("Saldo",
           "Jan")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0120 <- tcpe[-c(1:1), ]
#Variable year
tcpe0120$year <- 2020
tcpe0120$month <- "Jan"
#La variable "date"
tcpe0120$date <- format(lubridate::ymd(paste0(tcpe0120$year,tcpe0120$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0120) <- tcpe0120$date

# Febrero 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru2.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("carpeta SIF Feb-20.xls"), paste0("Feb20.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Feb20.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Feb"
keeps <- c("Saldo",
           "Feb")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0220 <- tcpe[-c(1:1), ]
#Variable year
tcpe0220$year <- 2020
tcpe0220$month <- "Feb"
#La variable "date"
tcpe0220$date <- format(lubridate::ymd(paste0(tcpe0220$year,tcpe0220$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0220) <- tcpe0220$date


# Marzo 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru3.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF Mar-20.xls"), paste0("Mar20.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Mar20.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Mar"
keeps <- c("Saldo",
           "Mar")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0320 <- tcpe[-c(1:1), ]
#Variable year
tcpe0320$year <- 2020
tcpe0320$month <- "Mar"
#La variable "date"
tcpe0320$date <- format(lubridate::ymd(paste0(tcpe0320$year,tcpe0320$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0320) <- tcpe0320$date

# Abril 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru4.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF Abr-20.xls"), paste0("Apr20.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Apr20.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Apr"
keeps <- c("Saldo",
           "Apr")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0420 <- tcpe[-c(1:1), ]
#Variable year
tcpe0420$year <- 2020
tcpe0420$month <- "Apr"
#La variable "date"
tcpe0420$date <- format(lubridate::ymd(paste0(tcpe0420$year,tcpe0420$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0420) <- tcpe0420$date

# Mayo 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru5.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF May-20.xls"), paste0("May20.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("May20.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "May"
keeps <- c("Saldo",
           "May")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0520 <- tcpe[-c(1:1), ]
#Variable year
tcpe0520$year <- 2020
tcpe0520$month <- "May"
#La variable "date"
tcpe0520$date <- format(lubridate::ymd(paste0(tcpe0520$year,tcpe0520$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0520) <- tcpe0520$date

# Junio 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru6.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF Jun-20.xls"), paste0("Jun20.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Jun20.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Jun"
keeps <- c("Saldo",
           "Jun")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0620 <- tcpe[-c(1:1), ]
#Variable year
tcpe0620$year <- 2020
tcpe0620$month <- "Jun"
#La variable "date"
tcpe0620$date <- format(lubridate::ymd(paste0(tcpe0620$year,tcpe0620$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0620) <- tcpe0620$date

# Julio 2020 -------------------------------------------
# Unzip documents ---
library(plyr)
# get all the zip files
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru/Peru7.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Peru"
unzip(zipF,exdir=outDir)
#Cambiando nombre---
file.rename(("Carpeta SIF Jul-20 .xls"), paste0("Jul20.xls"))
#Reading the file
library(readxl)
tcpe <- read_excel("Jul20.xls",sheet="Créditos x tipo", range = "A6:J17")
#Eliminando las filas no importantes
colnames(tcpe)
names(tcpe)[names(tcpe) == "Tipo de Crédito"] <- "Saldo"
names(tcpe)[names(tcpe) == "Total"] <- "Jul"
keeps <- c("Saldo",
           "Jul")
tcpe = tcpe[keeps]
#Eliminando columnas vacias ---
tcpe <- na.omit(tcpe)
# Transponiendo el dataframe ---
tcpe <- as.data.frame(t(as.matrix(tcpe)))
# Rename column names
colnames(tcpe)
names(tcpe)[names(tcpe) == "V2"] <- "Empresarial"
names(tcpe)[names(tcpe) == "V3"] <- "Mediana_emp"
names(tcpe)[names(tcpe) == "V4"] <- "Peque_emp"
names(tcpe)[names(tcpe) == "V5"] <- "Microcredito"
names(tcpe)[names(tcpe) == "V6"] <- "Consumo"
names(tcpe)[names(tcpe) == "V7"] <- "Hipotecario"
#Con las variables importantes
keeps2 <- c("Empresarial",
            "Mediana_emp",
            "Peque_emp",
            "Microcredito",
            "Consumo",  
            "Hipotecario")
tcpe = tcpe[keeps2]
#Eliminando las filas no importantes
tcpe0720 <- tcpe[-c(1:1), ]
#Variable year
tcpe0720$year <- 2020
tcpe0720$month <- "Jul"
#La variable "date"
tcpe0720$date <- format(lubridate::ymd(paste0(tcpe0720$year,tcpe0720$month,"01")), "%m-%Y")
#Nombre de las filas ---
row.names(tcpe0720) <- tcpe0720$date

# cbinPad function ------------------------------
cbindPad <- function(...){
  args <- list(...)
  n <- sapply(args,nrow)
  mx <- max(n)
  pad <- function(x, mx){
    if (nrow(x) < mx){
      nms <- colnames(x)
      padTemp <- matrix(NA, mx - nrow(x), ncol(x))
      colnames(padTemp) <- nms
      if (ncol(x)==0) {
        return(padTemp)
      } else {
        return(rbind(x,padTemp))
      }
    }
    else{
      return(x)
    }
  }
  rs <- lapply(args,pad,mx)
  return(do.call(cbind,rs))
}

# Add datasets vertically-----------------------------------
tcperu <- rbind(tcpe0118, tcpe0218, tcpe0318, 
                tcpe0418, tcpe0518, tcpe0618, 
                tcpe0718, tcpe0818, tcpe0918, 
                tcpe1018, tcpe1118, tcpe1218, 
                tcpe0119, tcpe0219, tcpe0319, 
                tcpe0419, tcpe0519, tcpe0619, 
                tcpe0719, tcpe0819, tcpe0919, 
                tcpe1019, tcpe1119, tcpe1219, 
                tcpe0120, tcpe0220, tcpe0320, 
                tcpe0420, tcpe0520, tcpe0620, 
                tcpe0720)

#Variable pais
tcperu$Pais <- "Peru"

# Exportando --------------------------------------------
write.csv(tcperu,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Peru\\tcperu.csv", row.names = FALSE)
write.csv(tcperu,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcperu.csv", row.names = FALSE)

#################################################################
######################REP DOMINICANA#############################
#################################################################

# TIPO DE CREDITO ---------------------------------------
# Importando datos ---------------------------------------------
#rm(list = ls())

library(httr)
list <- c("https://www.sib.gob.do/sites/default/files/nuevosdocumentos/estadisticas/seriestiempo/D-Cartera-de-Creditos_0.xlsx")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("RepDominicana", i, ".xlsx"),  mode="wb")
}

# Reading the file -----------------------
#rm(list = ls())
library(readxl)
tcrepd <- read_excel("RepDominicana1.xlsx" ,sheet="Cartera, deudor y tipo entidad", range = "A9:ZZ100")

# Renombrando variables -----------------------
colnames(tcrepd)
names(tcrepd)[names(tcrepd) == "...1"] <- "Name"

tcrepd <- tcrepd[-c(2, 5, 6,7,8,9,11,12,13,14,15,
                    17,18,19,20,21,23,24,25,26,27,
                    29,30,31,32,34,35,36,37,38,39,
                    41,42,43,44,45,46,47,48,49,
                    50,51,52,53,54,55,56,57,58,59,60,
                    61,62,63,64,65,66,67,68,69,70,
                    71,72,73,74,75,76,77,78,79,80,
                    81,82,83,84,85,86,87,88,89,91), ]

#Eliminar la columna "Name"
tcrepd$Name <- NULL

# Transponiendo el dataframe -----------------------
tcrepdominicana <- as.data.frame(t(as.matrix(tcrepd)))

# Eliminando filas vacias ----------------------------------
tcrepdominicana <- na.omit(tcrepdominicana)

# Rename column names
colnames(tcrepdominicana)
names(tcrepdominicana)[names(tcrepdominicana) == "V1"] <- "fecha"
names(tcrepdominicana)[names(tcrepdominicana) == "V2"] <- "Comerciales"
names(tcrepdominicana)[names(tcrepdominicana) == "V3"] <- "Empresariales"
names(tcrepdominicana)[names(tcrepdominicana) == "V4"] <- "mediana"
names(tcrepdominicana)[names(tcrepdominicana) == "V5"] <- "pequeña"
names(tcrepdominicana)[names(tcrepdominicana) == "V6"] <- "Microcredito"
names(tcrepdominicana)[names(tcrepdominicana) == "V7"] <- "TarjetaCredito"
names(tcrepdominicana)[names(tcrepdominicana) == "V8"] <- "Consumo"
names(tcrepdominicana)[names(tcrepdominicana) == "V9"] <- "Hipotecario"
names(tcrepdominicana)[names(tcrepdominicana) == "V10"] <- "Total"
tcrepdominicana

# Agregando las variables de PYME ---------------

# Variable Fecha -------------------------
tcrepdominicana$fecha3[tcrepdominicana$fecha=="oct-2017"] <- c("2017-10")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="nov-2017"] <- c("2017-11")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="dic-2017"] <- c("2017-12")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="ene-2018"] <- c("2018-01")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="feb-2018"] <- c("2018-02")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="mar-2018"] <- c("2018-03")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="abr-2018"] <- c("2018-04")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="may-2018"] <- c("2018-05")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="jun-2018"] <- c("2018-06")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="jul-2018"] <- c("2018-07")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="ago-2018"] <- c("2018-08")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="sep-2018"] <- c("2018-09")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="oct-2018"] <- c("2018-10")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="nov-2018"] <- c("2018-11")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="dic-2018"] <- c("2018-12")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="ene-2019"] <- c("2019-01")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="feb-2019"] <- c("2019-02")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="mar-2019"] <- c("2019-03")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="abr-2019"] <- c("2019-04")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="may-2019"] <- c("2019-05")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="jun-2019"] <- c("2019-06")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="jul-2019"] <- c("2019-07")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="ago-2019"] <- c("2019-08")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="sep-2019"] <- c("2019-09")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="oct-2019"] <- c("2019-10")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="nov-2019"] <- c("2019-11")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="dic-2019"] <- c("2019-12")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="ene-2020"] <- c("2020-01")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="feb-2020"] <- c("2020-02")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="mar-2020"] <- c("2020-03")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="abr-2020"] <- c("2020-04")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="may-2020"] <- c("2020-05")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="jun-2020"] <- c("2020-06")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="jul-2020"] <- c("2020-07")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="ago-2020"] <- c("2020-08")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="sep-2020"] <- c("2020-09")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="oct-2020"] <- c("2020-10")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="nov-2020"] <- c("2020-11")
tcrepdominicana$fecha3[tcrepdominicana$fecha=="dic-2020"] <- c("2020-12")

#install.packages("lubridate")
library(lubridate)
parse_date_time(tcrepdominicana$fecha3, orders = "Ym")

# Con las variables que interesan-----------
keeps <- c("fecha3",
           "Comerciales", 
           "Empresariales", 
           "Hipotecario", 
           "Microcredito", 
           "TarjetaCredito",
           "pequeña",
           "mediana",
           "Consumo")

tcrepdominicana = tcrepdominicana[keeps]

#Variable pais
tcrepdominicana$Pais <- "Republica Dominicana"

#Nombre de las filas
row.names(tcrepdominicana) <- tcrepdominicana$fecha3

# Exportando --------------------------------------------
write.csv(tcrepdominicana,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcrepdominicana.csv", row.names = FALSE)
write.csv(tcrepdominicana,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_RepDominicana\\tcrepdominicana.csv", row.names = FALSE)

# Graphs daily dates------------------------------------------------
#install.packages("ggplot2")
#install.packages("hrbrthemes")
library(ggplot2)
library(dplyr)
library(hrbrthemes)
#colnames(tcrepdgentina)
CreditoHipotecario <- tcrepdominicana %>%
  tail(10000) %>%
  ggplot(aes(x=fecha3, y=Hipotecario)) +
  geom_line() +
  geom_point() +
  ggtitle("REP DOMINICANA crédito hipotecario") +
  xlab("Date") + ylab("MM Pesos Dominicanos")
CreditoHipotecario

#
TarjetaCredito <- tcrepdominicana %>%
  tail(10000) %>%
  ggplot( aes(x=fecha3, y=TarjetaCredito)) +
  geom_line() +
  geom_point() +
  ggtitle("REP DOMINICANA tarjeta de crédito") +
  xlab("Date") + ylab("MM pesos argentinos")
TarjetaCredito

#
Consumo <- tcrepdominicana %>%
  tail(10000) %>%
  ggplot( aes(x=fecha3, y=Consumo)) +
  geom_line() +
  geom_point() +
  ggtitle("REP DOMINICANA crédito de consumo") +
  xlab("Date") + ylab("MM pesos argentinos")
Consumo

save(tcrepdgentina,file="tcrepdgentina.Rda")

#################################################################
########################URUGUAY##################################
#################################################################
###TIPO DE CREDITO --------------------------------
# Importando datos ---------------------------------------------
##rm(list = ls())
#library(httr)
#list <- c("https://www.bcu.gub.uy/Servicios-Financieros-SSF/Series%20IF/capitales.xls#actpf")
#for (i in 1:length(list)) {
#  download.file(list[i], destfile = paste0("Uruguay", i, "xls"),  mode="wb")}

# CREDITO A EMPRESAS (Moneda nacional)-----------------------
# Reading the file ---
#rm(list = ls())
library(readxl)
tcurug <- read_excel("capitales.xls",sheet="Act. Emp. por tamaño $ ", range = "B139:F9000")

# analyzing
colnames(tcurug)
# Rename column names
names(tcurug)[names(tcurug) == "43070"] <- "fecha"
names(tcurug)[names(tcurug) == "245.89465369999948"] <- "Microempresa"
names(tcurug)[names(tcurug) == "537.02647356000091"] <- "pequeña"
names(tcurug)[names(tcurug) == "2105.3444986999971"] <- "mediana"
names(tcurug)[names(tcurug) == "5152.2360895499933"] <- "Empresarial"
tcurug

#Eliminando empty values
tcurug <- tcurug[!is.na(tcurug$mediana), ]

#Con las variables que interesan
keeps <- c("fecha",
           "Microempresa", 
           "pequeña",
           "mediana", 
           "Empresarial")
tcuruguay_mn = tcurug[keeps]

# CREDITO A EMPRESAS (En dolares)-----------------------
# Reading the file -----------------------
##rm(list = ls())
library(readxl)
tcurug <- read_excel("capitales.xls",sheet="Act. Emp. por tamaño U$S", range = "B139:F9000")

# analyzing
colnames(tcurug)
# Rename column names
names(tcurug)[names(tcurug) == "43070"] <- "fecha$"
names(tcurug)[names(tcurug) == "53.196376310000012"] <- "Microempresa$"
names(tcurug)[names(tcurug) == "99.704385100000053"] <- "pequeña$"
names(tcurug)[names(tcurug) == "278.64622646000009"] <- "mediana$"
names(tcurug)[names(tcurug) == "1095.7936506799999"] <- "Empresarial$"
tcurug

#Con las variables que interesan
keeps <- c("fecha$",
           "Microempresa$", 
           "pequeña$",
           "mediana$", 
           "Empresarial$")
tcuruguay_me = tcurug[keeps]

# Adding data horizontally ------------------------------
# cbinPad function ------------------------------
cbindPad <- function(...){
  args <- list(...)
  n <- sapply(args,nrow)
  mx <- max(n)
  pad <- function(x, mx){
    if (nrow(x) < mx){
      nms <- colnames(x)
      padTemp <- matrix(NA, mx - nrow(x), ncol(x))
      colnames(padTemp) <- nms
      if (ncol(x)==0) {
        return(padTemp)
      } else {
        return(rbind(x,padTemp))
      }
    }
    else{
      return(x)
    }
  }
  rs <- lapply(args,pad,mx)
  return(do.call(cbind,rs))
}
#######
tcuruguay <- cbindPad(tcuruguay_me,
                      tcuruguay_mn)

#Eliminando empty values
tcuruguay <- tcuruguay[!is.na(tcuruguay$mediana), ]

#Variable mes tiene formato excel

#Nombre de las filas
row.names(tcuruguay) <- tcuruguay$fecha

#Variable pais
tcuruguay$Pais <- "Uruguay"

# Exportando --------------------------------------------
write.csv(tcuruguay,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Uruguay\\tcuruguay.csv", row.names = FALSE)
write.csv(tcuruguay,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcuruguay.csv", row.names = FALSE)

# graphs ------------------------------

library(ggplot2)
library(dplyr)
library(hrbrthemes)
colnames(tcbrasilm)
#
HipotecarioBrasil <- tcbrasilmof%>%
  tail(10000) %>%
  ggplot( aes(x=date, y=Hipotecario)) +
  geom_line() +
  geom_point() +
  ggtitle("BRASIL crédito inmobiliario") +
  xlab("Date") + ylab("MM reales")
HipotecarioBrasil

#
BrasilPersonal <- tcbrasilmof%>%
  tail(10000) %>%
  ggplot( aes(x=date, y=Personal)) +
  geom_line() +
  geom_point() +
  ggtitle("BRASIL crédito personal") +
  xlab("Date") + ylab("MM reales")
BrasilPersonal

#
BrasilTarjetaCredito <- tcbrasilmof%>%
  tail(10000) %>%
  ggplot( aes(x=date, y=TarjetaCredito)) +
  geom_line() +
  geom_point() +
  ggtitle("BRASIL tarjeta de crédito") +
  xlab("Date") + ylab("MM reales")
BrasilTarjetaCredito

#
BrasilConsumo <- tcbrasilmof%>%
  tail(10000) %>%
  ggplot( aes(x=date, y=Consumo)) +
  geom_line() +
  geom_point() +
  ggtitle("BRASIL crédito de consumo") +
  xlab("Date") + ylab("MM reales")
BrasilConsumo

save(tcbrasil,file="tcbrasil.Rda")

#################################################################
######################VENEZUELA##################################
#################################################################
# TIPO DE CREDITO ---------------------------------------
# Importando datos ---------------------------------------------
#rm(list = ls())
library(httr)
list <- c("http://www.sudeban.gob.ve/wp-content/uploads/Estadisticas/2020/SA-2020-06.zip")
for (i in 1:length(list)) {
  download.file(list[i], destfile = paste0("Venezuela", i, ".zip"),  mode="wb")
}

# Unzip documents ---------------------------------------
library(plyr)
zipF <- "C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Venezuela/Venezuela1.zip"
# unzip all your files
outDir<-"C:/Users/Asus/Documents/IDBinvest/FinancialSystem_Venezuela"
unzip(zipF,exdir=outDir)

# reading the file ---------------------------------------------
#rm(list = ls())
library(readxl)
tcvenez <- read_excel("FinancialSystem_Venezuela.xlsx", range = "A26:N9000")

# Renombrando variables --------------------------------------------
library(tidyverse) #Cambiando de nombres las variables
colnames(tcvenez) # get column names

# Rename column names
names(tcvenez)[names(tcvenez) == "AÑO 2018"] <- "fecha"
names(tcvenez)[names(tcvenez) == "...2"] <- "Comercial"
names(tcvenez)[names(tcvenez) == "...3"] <- "TarjetaCredito"
names(tcvenez)[names(tcvenez) == "...4"] <- "ConsumoCuotas"
names(tcvenez)[names(tcvenez) == "...5"] <- "Consumo"
names(tcvenez)[names(tcvenez) == "...6"] <- "Vehiculos"
names(tcvenez)[names(tcvenez) == "...8"] <- "Hipotecario"
names(tcvenez)[names(tcvenez) == "...9"] <- "Microcredito"
names(tcvenez)[names(tcvenez) == "...10"] <- "Agropecuario"
names(tcvenez)[names(tcvenez) == "...11"] <- "Turismo"
names(tcvenez)[names(tcvenez) == "...12"] <- "Industria"
names(tcvenez)[names(tcvenez) == "...13"] <- "Provision"
names(tcvenez)[names(tcvenez) == "...14"] <- "Total"
tcvenez

#Eliminando columnas vacias ----------------------------------
tcvenezuela <- na.omit(tcvenez)

#Variable mes numeral----------------------------------
tcvenezuela$id[tcvenezuela$fecha=="ENERO"] <- c(1)
tcvenezuela$id[tcvenezuela$fecha=="FEBRERO"] <- c(2)
tcvenezuela$id[tcvenezuela$fecha=="MARZO"] <- c(3)
tcvenezuela$id[tcvenezuela$fecha=="ABRIL"] <- c(4)
tcvenezuela$id[tcvenezuela$fecha=="MAYO"] <- c(5)
tcvenezuela$id[tcvenezuela$fecha=="JUNIO"] <- c(6)
tcvenezuela$id[tcvenezuela$fecha=="JULIO"] <- c(7)
tcvenezuela$id[tcvenezuela$fecha=="AGOSTO"] <- c(8)
tcvenezuela$id[tcvenezuela$fecha=="SEPTIEMBRE"] <- c(9)
tcvenezuela$id[tcvenezuela$fecha=="OCTUBRE"] <- c(10)
tcvenezuela$id[tcvenezuela$fecha=="NOVIEMBRE"] <- c(11)
tcvenezuela$id[tcvenezuela$fecha=="DICIEMBRE"] <- c(12)

tcvenezuela$month[tcvenezuela$fecha=="ENERO"] <- c("Jan")
tcvenezuela$month[tcvenezuela$fecha=="FEBRERO"] <- c("Feb")
tcvenezuela$month[tcvenezuela$fecha=="MARZO"] <- c("Mar")
tcvenezuela$month[tcvenezuela$fecha=="ABRIL"] <- c("Apr")
tcvenezuela$month[tcvenezuela$fecha=="MAYO"] <- c("May")
tcvenezuela$month[tcvenezuela$fecha=="JUNIO"] <- c("Jun")
tcvenezuela$month[tcvenezuela$fecha=="JULIO"] <- c("Jul")
tcvenezuela$month[tcvenezuela$fecha=="AGOSTO"] <- c("Aug")
tcvenezuela$month[tcvenezuela$fecha=="SEPTIEMBRE"] <- c("Sep")
tcvenezuela$month[tcvenezuela$fecha=="OCTUBRE"] <- c("Oct")
tcvenezuela$month[tcvenezuela$fecha=="NOVIEMBRE"] <- c("Nov")
tcvenezuela$month[tcvenezuela$fecha=="DICIEMBRE"] <- c("Dec")

#Variable año
tcvenezuela$id.t <- with(tcvenezuela, ave(rep(1, nrow(tcvenezuela)), id, FUN = seq_along))

#Cambiando los valores del id
tcvenezuela$year <- NA
tcvenezuela$year[tcvenezuela$id.t==1] <- c(2018)
tcvenezuela$year[tcvenezuela$id.t==2] <- c(2019)
tcvenezuela$year[tcvenezuela$id.t==3] <- c(2020)

#La variable "date"
tcvenezuela$date <- lubridate::ymd(paste0(tcvenezuela$year,tcvenezuela$month,"01"))

#Con las variables que interesan ---------------------------------------------
keeps <- c("date",
           "Comercial", 
           "TarjetaCredito", 
           "Consumo", 
           "Hipotecario", 
           "Microcredito")
tcvenezuela = tcvenezuela[keeps]

#Nombre de las filas -----------------------------------------
row.names(tcvenezuela) <- tcvenezuela$date

#Variable pais
tcvenezuela$Pais <- "Venezuela"

# Exportando --------------------------------------------
write.csv(tcvenezuela,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem_Venezuela\\tcvenezuela.csv", row.names = FALSE)
write.csv(tcvenezuela,"C:\\Users\\Asus\\Documents\\IDBinvest\\FinancialSystem-CreditType\\tcvenezuela.csv", row.names = FALSE)

# Graphs daily dates------------------------------------------------
#install.packages("ggplot2")
#install.packages("hrbrthemes")
library(ggplot2)
library(dplyr)
library(hrbrthemes)
#colnames(tcvenezuela)
Hipotecario <- tcvenezuela %>%
  tail(10000) %>%
  ggplot(aes(x=date, y=Hipotecario)) +
  geom_line() +
  geom_point() +
  ggtitle("VENEZUELA crédito inmobiliario") +
  xlab("Date") + ylab("en Bolivares")
Hipotecario 

#
Consumo <- tcvenezuela %>%
  tail(10000) %>%
  ggplot( aes(x=date, y=Consumo)) +
  geom_line() +
  geom_point() + 
  ggtitle("VENEZUELA crédito de consumo") +
  xlab("Date") + ylab("en Bolivares")
Consumo

#
Comercial <- tcvenezuela %>%
  tail(10000) %>%
  ggplot( aes(x=date, y=Comercial)) +
  geom_line() +
  geom_point() +
  ggtitle("VENEZUELA credito comercial") +
  xlab("Date") + ylab("en Bolivares")
Comercial

save(tcvenezuela,file="tcvenezuela.Rda")










